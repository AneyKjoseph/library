{"version":3,"file":"index.js","sources":["../src/common/extDataGrid.js","../src/utilities/utils.js","../src/functions/DatePicker.js","../src/common/ErrorConstants.js","../src/common/ErrorMessage.js","../src/overlays/column_chooser/ItemTypes.js","../src/overlays/column_chooser/columnItem.js","../src/overlays/column_chooser/columnsList.js","../src/overlays/column_chooser/Chooser.js","../src/overlays/sorting/ItemTypes.js","../src/overlays/sorting/SortItem.js","../src/overlays/sorting/SortingList.js","../src/overlays/sorting/Sorting.js","../src/overlays/export_data/ExportData.js","../src/index.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport { Toolbar, Data, Filters } from \"react-data-grid-addons\";\r\n\r\nclass ExtDataGrid extends ReactDataGrid {\r\n  componentDidMount() {\r\n    this._mounted = true;\r\n    this.dataGridComponent = document.getElementsByClassName(\r\n      \"react-grid-Container\"\r\n    )[0]; //assumes only one react datagrid component exists\r\n    window.addEventListener(\"resize\", this.metricsUpdated);\r\n    if (this.props.cellRangeSelection) {\r\n      this.dataGridComponent.addEventListener(\"mouseup\", this.onWindowMouseUp);\r\n    }\r\n    this.metricsUpdated();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._mounted = false;\r\n    window.removeEventListener(\"resize\", this.metricsUpdated);\r\n    this.dataGridComponent.removeEventListener(\"mouseup\", this.onWindowMouseUp);\r\n  }\r\n}\r\n\r\nexport default ExtDataGrid;\r\n","export const applyFormula = (obj, columnName) => {\r\n  let item = obj[columnName].toString();\r\n  if (item && item.charAt(0) === \"=\") {\r\n    var operation = item.split(\"(\");\r\n    var value = operation[1]\r\n      .substring(0, operation[1].length - 1)\r\n      .split(/[,:]/);\r\n    switch (operation[0]) {\r\n      case \"=SUM\":\r\n      case \"=ADD\":\r\n      case \"=sum\":\r\n      case \"=add\":\r\n        obj[columnName] = value.reduce(function (a, b) {\r\n          return Number(a) + Number(b);\r\n        });\r\n        break;\r\n      case \"=MUL\":\r\n      case \"=mul\":\r\n        obj[columnName] = value.reduce(function (a, b) {\r\n          return Number(a) * Number(b);\r\n        });\r\n        break;\r\n      case \"=SUB\":\r\n      case \"=sub\":\r\n      case \"=DIFF\":\r\n      case \"=diff\":\r\n        obj[columnName] = value.reduce(function (a, b) {\r\n          return Number(a) - Number(b);\r\n        });\r\n        break;\r\n      case \"=min\":\r\n      case \"=MIN\":\r\n        obj[columnName] = Math.min.apply(Math, value);\r\n        break;\r\n      case \"=max\":\r\n      case \"=MAX\":\r\n        obj[columnName] = Math.max.apply(Math, value);\r\n        break;\r\n      default:\r\n        console.log(\"No Calculation\");\r\n    }\r\n  }\r\n  return obj;\r\n};","import React from 'react';\r\n\r\nexport default class DatePicker extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: new Date(),\r\n      };\r\n      //the variable to store component reference\r\n      this.input = null;\r\n  \r\n      this.getInputNode = this.getInputNode.bind(this);\r\n      this.getValue = this.getValue.bind(this);\r\n      this.onValueChanged = this.onValueChanged.bind(this);\r\n    }\r\n  \r\n    //returning the component with the reference, input\r\n    getInputNode() {\r\n      return this.input;\r\n    }\r\n    //returning updated object with the date value in the required format\r\n    getValue() {\r\n      var updated = {};\r\n      let date;\r\n      date = new Date(this.state.value);\r\n      const dateTimeFormat = new Intl.DateTimeFormat(\"en-US\", { year: \"numeric\", month: \"short\", day: \"2-digit\" });\r\n      const [{ value: month }, , { value: day }, , { value: year }] = dateTimeFormat.formatToParts(date);\r\n      updated[this.props.column.key] = `${day}-${month}-${year}`;\r\n      return updated;\r\n  \r\n    }\r\n  \r\n    onValueChanged(ev) {\r\n      this.setState({ value: ev.target.value });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <input\r\n            type=\"date\"\r\n            ref={(ref) => {\r\n              this.input = ref;\r\n            }}\r\n            value={this.state.value}\r\n            onChange={this.onValueChanged}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }","export const SEARCH_NOT_FOUNT_ERROR = \"No Records found!\";\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { SEARCH_NOT_FOUNT_ERROR } from \"./ErrorConstants\";\r\n\r\nconst ErrorMessage = (props) => {\r\n\r\n  const [status, setStatus] = useState(props.status);\r\n  useEffect(\r\n    () => {\r\n      setStatus(props.status)\r\n    }\r\n    , [props.status]);\r\n  if (status === \"invalid\") {\r\n    return (\r\n      <div id=\"errorMsg\">\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          {SEARCH_NOT_FOUNT_ERROR}\r\n        </div>\r\n        <div className=\"notification-close\" >\r\n          <FontAwesomeIcon icon={faTimes}\r\n            onClick={(e) => {\r\n              props.closeWarningStatus();\r\n              props.clearSearchValue();\r\n            }} />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else return <div></div>;\r\n};\r\nexport default ErrorMessage;\r\n","export const ItemTypes = {\r\n    COLUMN: \"column\"\r\n};\r\n","import React from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\n\r\nconst style = {\r\n\tcursor: \"move\",\r\n};\r\n\r\nconst ColumnItem = ({ id, text, moveColumn, findColumn }) => {\r\n\tconst originalIndex = findColumn(id).index;\r\n\r\n\tconst [{ isDragging }, drag] = useDrag({\r\n\t\titem: { type: ItemTypes.COLUMN, id, originalIndex },\r\n\t\tcollect: (monitor) => ({\r\n\t\t\tisDragging: monitor.isDragging(),\r\n\t\t}),\r\n\t\tend: (dropResult, monitor) => {\r\n\t\t\tconst { id: droppedId, originalIndex } = monitor.getItem();\r\n\t\t\tconst didDrop = monitor.didDrop();\r\n\t\t\tif (!didDrop) {\r\n\t\t\t\tmoveColumn(droppedId, originalIndex);\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n\r\n\tconst [, drop] = useDrop({\r\n\t\taccept: ItemTypes.COLUMN,\r\n\t\tcanDrop: () => false,\r\n\t\thover({ id: draggedId }) {\r\n\t\t\tif (draggedId !== id) {\r\n\t\t\t\tconst { index: overIndex } = findColumn(id);\r\n\t\t\t\tmoveColumn(draggedId, overIndex);\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n\r\n\tconst opacity = isDragging ? 0.1 : 1;\r\n\r\n\treturn (\r\n\t\t<div ref={(node) => drag(drop(node))} style={{ ...style, opacity }}>\r\n\t\t\t{text}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ColumnItem;\r\n","import React, { useState } from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport update from \"immutability-helper\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\nimport ColumnItem from \"./columnItem\";\r\n\r\nconst ColumnsList = (props) => {\r\n\tconst [columns, setColumns] = useState([...props.columnsArray]);\r\n\r\n\tconst moveColumn = (id, atIndex) => {\r\n\t\tconst { column, index } = findColumn(id);\r\n\t\tsetColumns(\r\n\t\t\tupdate(columns, {\r\n\t\t\t\t$splice: [\r\n\t\t\t\t\t[index, 1],\r\n\t\t\t\t\t[atIndex, 0, column],\r\n\t\t\t\t],\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst findColumn = (id) => {\r\n\t\tconst column = columns.filter((c) => `${c.id}` === id)[0];\r\n\t\treturn {\r\n\t\t\tcolumn,\r\n\t\t\tindex: columns.indexOf(column),\r\n\t\t};\r\n\t};\r\n\r\n\tconst [, drop] = useDrop({ accept: ItemTypes.COLUMN });\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetColumns(props.columnsArray);\r\n\t}, [props.columnsArray]);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div ref={drop} style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n\t\t\t\t{columns.map((column) => (\r\n\t\t\t\t\t<ColumnItem\r\n\t\t\t\t\t\tkey={column.id}\r\n\t\t\t\t\t\tid={`${column.id}`}\r\n\t\t\t\t\t\ttext={column.text}\r\n\t\t\t\t\t\tmoveColumn={moveColumn}\r\n\t\t\t\t\t\tfindColumn={findColumn}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default ColumnsList;\r\n","import React from \"react\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { TouchBackend } from \"react-dnd-touch-backend\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faAlignJustify } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ColumnsList from \"./columnsList\";\r\n\r\nclass ColumnReordering extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columnReorderEntityList: this.props.headerKeys,\r\n      columnSelectList: this.props.columns.map(item=> item.name),\r\n      leftPinnedColumList: this.props.existingPinnedHeadersList,\r\n      isAllSelected: false,\r\n      maxLeftPinnedColumn: this.props.maxLeftPinnedColumn,\r\n    };\r\n    this.setWrapperRef = this.setWrapperRef.bind(this);\r\n    this.handleClickOutside = this.handleClickOutside.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n\r\n  setWrapperRef(node) {\r\n    this.wrapperRef = node;\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n      this.props.closeColumnReOrdering()\r\n    }\r\n  }\r\n\r\n\t/**\r\n\t * Method to reset the coloumn list onClick of Reset button\r\n\t */\r\n\tresetColumnReorderList = () => {\r\n\t\tthis.setState({\r\n\t\t\tcolumnReorderEntityList: [],\r\n\t\t\tisAllSelected: false,\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Method to Select all options in the coloumn list onClick of Select All button\r\n\t */\r\n\tselectAllToColumnReOrderList = () => {\r\n\t\tthis.resetColumnReorderList();\r\n\t\tthis.setState({\r\n\t\t\tcolumnReorderEntityList: this.props.columns.map(item=> item.name),\r\n\t\t\tisAllSelected: true,\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Method To add a column to columnReorderEntityList when selected.\r\n\t * @param {String} typeToBeAdded \r\n\t */\r\n\taddToColumnReorderEntityList = (typeToBeAdded) => {\r\n\t\tvar existingColumnReorderEntityList = this.state.columnReorderEntityList;\r\n\t\tvar existingLeftPinnedList = this.state.leftPinnedColumList;\r\n\t\tif (!existingColumnReorderEntityList.includes(typeToBeAdded)) {\r\n\t\t\tvar indexOfInsertion=this.state.columnSelectList.findIndex(item=> item === typeToBeAdded);\r\n\t\t\twhile(indexOfInsertion>0){\r\n\t\t\t\tif(existingColumnReorderEntityList.includes(this.state.columnSelectList[indexOfInsertion-1])){\r\n\t\t\t\t\tif(!existingLeftPinnedList.includes(this.state.columnSelectList[indexOfInsertion-1])){\r\n\t\t\t\t\t\tindexOfInsertion = existingColumnReorderEntityList.findIndex(item => \r\n\t\t\t\t\t\t\titem === this.state.columnSelectList[indexOfInsertion-1])\r\n\t\t\t\t\t\t\tindexOfInsertion = indexOfInsertion + 1;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tindexOfInsertion = indexOfInsertion-1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tindexOfInsertion = indexOfInsertion-1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texistingColumnReorderEntityList.splice(indexOfInsertion, \r\n\t\t\t\t0, typeToBeAdded);\r\n\t\t} else {\r\n\t\t\texistingColumnReorderEntityList = existingColumnReorderEntityList.filter((item) => {\r\n\t\t\t\tif (item !== typeToBeAdded) return item;\r\n\t\t\t});\r\n\t\t\tif (existingLeftPinnedList.includes(typeToBeAdded)) {\r\n\t\t\t\texistingLeftPinnedList = existingLeftPinnedList.filter((item) => item !== typeToBeAdded);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tcolumnReorderEntityList: existingColumnReorderEntityList,\r\n\t\t\tisAllSelected: false,\r\n\t\t\tleftPinnedColumList: existingLeftPinnedList,\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Method to handle the like-search on key stroke.\r\n\t * @param {Event} e \r\n\t */\r\n\tfilterColumnReorderList = (e) => {\r\n\t\tvar searchKey = String(e.target.value).toLowerCase();\r\n\t\tvar existingList = this.props.columns.map(item=> item.name);\r\n\t\tlet filtererdColumnReorderList = [];\r\n\t\tif (searchKey.length > 0) {\r\n\t\t\tfiltererdColumnReorderList = existingList.filter((item) => {\r\n\t\t\t\treturn item.toLowerCase().includes(searchKey);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tfiltererdColumnReorderList = this.props.columns.map(item=> item.name);\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tcolumnSelectList: filtererdColumnReorderList,\r\n\t\t});\r\n\t};\r\n\r\n\tcreateColumnsArrayFromProps = (colsList) => {\r\n\t\treturn colsList.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: item,\r\n\t\t\t\ttext: (\r\n\t\t\t\t\t<div className='column__reorder' key={item}>\r\n\t\t\t\t\t\t<div className=''>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faAlignJustify}></FontAwesomeIcon>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='column__reorder__name'>{item}</div>\r\n\t\t\t\t\t\t<div className='column__wrap'>\r\n\t\t\t\t\t\t\t<div className='column__checkbox'>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\tchecked={this.state.leftPinnedColumList.includes(item)}\r\n\t\t\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\t\t\tthis.state.maxLeftPinnedColumn - this.state.leftPinnedColumList.length <= 0\r\n\t\t\t\t\t\t\t\t\t\t\t? this.state.leftPinnedColumList.includes(item)\r\n\t\t\t\t\t\t\t\t\t\t\t\t? false\r\n\t\t\t\t\t\t\t\t\t\t\t\t: true\r\n\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonChange={() => this.reArrangeLeftPinnedColumn(item)}\r\n\t\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='column__txt'>Pin Left</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Method to handle the position of columns Names when left pinned in coloumn selector view.\r\n\t * @param {String} columHeaderName \r\n\t */\r\n\treArrangeLeftPinnedColumn = (columHeaderName) => {\r\n\t\tvar existingLeftPinnedList = this.state.leftPinnedColumList;\r\n\t\tvar existingColumnReorderEntityList = this.state.columnReorderEntityList;\r\n\t\tif (!existingLeftPinnedList.includes(columHeaderName)) {\r\n\t\t\texistingLeftPinnedList.unshift(columHeaderName);\r\n\t\t} else {\r\n\t\t\texistingLeftPinnedList = existingLeftPinnedList.filter((item) => item !== columHeaderName);\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tleftPinnedColumList: existingLeftPinnedList,\r\n\t\t});\r\n\r\n\t\texistingLeftPinnedList.map((item) => {\r\n\t\t\texistingColumnReorderEntityList = existingColumnReorderEntityList.filter((subItem) => subItem !== item);\r\n\t\t\texistingColumnReorderEntityList.unshift(item);\r\n\t\t});\r\n\r\n\t\tthis.setState({\r\n\t\t\tcolumnReorderEntityList: existingColumnReorderEntityList,\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='columns--grid'ref={this.setWrapperRef}>\r\n\t\t\t\t<div className='column__grid'>\r\n\t\t\t\t\t<div className='column__chooser'>\r\n\t\t\t\t\t\t<div className='column__header'>\r\n\t\t\t\t\t\t\t<div className=''>\r\n\t\t\t\t\t\t\t\t<strong>Column Chooser</strong>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='column__body'>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tplaceholder='Search column'\r\n\t\t\t\t\t\t\t\t\tclassName='custom__ctrl'\r\n\t\t\t\t\t\t\t\t\tonChange={this.filterColumnReorderList}\r\n\t\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='column__selectAll'>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\tclassName='column__selectTxt'\r\n\t\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\t\tonClick={() => this.selectAllToColumnReOrderList()}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tSelect All\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{this.state.columnSelectList.map((item) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div className='column__wrap' key={item}>\r\n\t\t\t\t\t\t\t\t\t\t<div className='column__checkbox'>\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={this.state.columnReorderEntityList.includes(item)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => this.addToColumnReorderEntityList(item)}\r\n\t\t\t\t\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='column__txt'>{item}</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='column__settings'>\r\n\t\t\t\t\t\t<div className='column__header'>\r\n\t\t\t\t\t\t\t<div className='column__headerTxt'>\r\n\t\t\t\t\t\t\t\t<strong>Column Setting</strong>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='column__close'>\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\t\t\t\tclassName=\"icon-close\" \r\n\t\t\t\t\t\t\t\t\ticon={faTimes}\r\n\t\t\t\t\t\t\t\t\tonClick={() => this.props.closeColumnReOrdering()}\r\n\t\t\t\t\t\t\t\t></FontAwesomeIcon>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='column__headerTxt'>\r\n\t\t\t\t\t\t\t<strong>&nbsp; &nbsp; Selected Column Count : {this.state.columnReorderEntityList.length}</strong>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='column__headerTxt'>\r\n\t\t\t\t\t\t\t{this.state.maxLeftPinnedColumn - this.state.leftPinnedColumList.length > 0 ? (\r\n\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t&nbsp; &nbsp; Left Pinned Column Count Remaining :{\" \"}\r\n\t\t\t\t\t\t\t\t\t{this.state.maxLeftPinnedColumn - this.state.leftPinnedColumList.length}\r\n\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<strong style={{ color: \"red\" }}>&nbsp; &nbsp; Maximum Count Of Left Pin Columns REACHED</strong>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='column__body'>\r\n\t\t\t\t\t\t\t<DndProvider backend={TouchBackend} options={{ enableMouseEvents: true }}>\r\n\t\t\t\t\t\t\t\t<ColumnsList\r\n\t\t\t\t\t\t\t\t\tcolumnsArray={this.createColumnsArrayFromProps(this.state.columnReorderEntityList)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</DndProvider>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='column__footer'>\r\n\t\t\t\t\t\t\t<div className='column__btns'>\r\n\t\t\t\t\t\t\t\t<button className='btns' onClick={() => this.resetColumnReorderList()}>\r\n\t\t\t\t\t\t\t\t\tReset\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<button className='btns' onClick={() => this.props.closeColumnReOrdering()}>\r\n\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tclassName='btns btns__save'\r\n\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\tthis.props.updateTableAsPerRowChooser(\r\n\t\t\t\t\t\t\t\t\t\t\tthis.state.columnReorderEntityList,\r\n\t\t\t\t\t\t\t\t\t\t\tthis.state.leftPinnedColumList\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ColumnReordering;\r\n","export const ItemTypes = {\r\n  CARD: \"sort\",\r\n};\r\n","import React from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\n\r\nconst style = {\r\n  cursor: \"move\",\r\n};\r\n\r\nconst Card = ({ id, text, moveCard, findCard }) => {\r\n  const originalIndex = findCard(id).index;\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: { type: ItemTypes.CARD, id, originalIndex },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n    end: (dropResult, monitor) => {\r\n      const { id: droppedId, originalIndex } = monitor.getItem();\r\n      const didDrop = monitor.didDrop();\r\n      if (!didDrop) {\r\n        moveCard(droppedId, originalIndex);\r\n      }\r\n    },\r\n  });\r\n\r\n  const [, drop] = useDrop({\r\n    accept: ItemTypes.CARD,\r\n    canDrop: () => false,\r\n    hover({ id: draggedId }) {\r\n      if (draggedId !== id) {\r\n        const { index: overIndex } = findCard(id);\r\n        moveCard(draggedId, overIndex);\r\n      }\r\n    },\r\n  });\r\n\r\n  const opacity = isDragging ? 0.5 : 1;\r\n\r\n  return (\r\n    <div ref={(node) => drag(drop(node))} style={{ ...style, opacity }}>\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport Card from \"./SortItem\";\r\nimport update from \"immutability-helper\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\n\r\nconst SortingList = (props) => {\r\n  const [cards, setCards] = useState([...props.sortsArray]);\r\n\r\n  const moveCard = (id, atIndex) => {\r\n    const { card, index } = findCard(id);\r\n    setCards(\r\n      update(cards, {\r\n        $splice: [\r\n          [index, 1],\r\n          [atIndex, 0, card],\r\n        ],\r\n      })\r\n    );\r\n  };\r\n\r\n  const findCard = (id) => {\r\n    const card = cards.filter((c) => `${c.id}` === id)[0];\r\n    return {\r\n      card,\r\n      index: cards.indexOf(card),\r\n    };\r\n  };\r\n\r\n  const [, drop] = useDrop({ accept: ItemTypes.CARD });\r\n\r\n  React.useEffect(() => {\r\n    setCards(props.sortsArray);\r\n  }, [props.sortsArray]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div ref={drop} style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n        {cards.map((card) => (\r\n          <Card\r\n            key={card.id}\r\n            id={`${card.id}`}\r\n            text={card.text}\r\n            moveCard={moveCard}\r\n            findCard={findCard}\r\n          />\r\n        ))}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SortingList;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTimes,\r\n  faAlignJustify,\r\n  faTrash,\r\n  faPlus,\r\n  faCopy,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { TouchBackend } from \"react-dnd-touch-backend\";\r\nimport SortingList from \"./SortingList\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      rowList: [true],\r\n    };\r\n    this.setWrapperRef = this.setWrapperRef.bind(this);\r\n    this.handleClickOutside = this.handleClickOutside.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n\r\n  setWrapperRef(node) {\r\n    this.wrapperRef = node;\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n      this.props.closeSorting();\r\n    }\r\n  }\r\n  add = () => {\r\n    let rowList = [...this.state.rowList];\r\n    rowList.push(true);\r\n    this.setState({ rowList })\r\n  };\r\n\r\n  copy = (i) => {\r\n    let rowList = [...this.state.rowList];\r\n    console.log(rowList);\r\n  };\r\n\r\n  clearAll = () => {\r\n    this.setState({ rowList: [] });\r\n  };\r\n\r\n  remove = (i) => {\r\n    let rowList = [...this.state.rowList];\r\n    console.log(i)\r\n    rowList.splice(i, 1);\r\n    console.log()\r\n    this.setState({ rowList });\r\n  };\r\n  createColumnsArrayFromProps = (rowList) => {\r\n    console.log(this.state.rowList)\r\n    return rowList.map((i, index) => {\r\n      return {\r\n        id: index,\r\n        text: (\r\n          <div className=\"sort__bodyContent\" key={i}  >\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>&nbsp;</div >\r\n              </div >\r\n              <div className=\"sort__icon\">\r\n                <FontAwesomeIcon icon={faAlignJustify}></FontAwesomeIcon>\r\n              </div>\r\n            </div >\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>Sort by</div>\r\n              </div>\r\n              <div className=\"sort__file\">\r\n                <select className=\"custom__ctrl\">\r\n                  {this.props.columnFieldValue.map((item, index) => (\r\n                    <option key={index}>{item}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>Sort on</div>\r\n              </div>\r\n              <div className=\"sort__file\">\r\n                <select className=\"custom__ctrl\">\r\n                  <option>Value</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>Order</div>\r\n              </div>\r\n              <div className=\"sort__file\">\r\n                <select className=\"custom__ctrl\">\r\n                  <option>Ascending</option>\r\n                  <option>Descending</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>&nbsp;</div>\r\n              </div>\r\n              <div className=\"sort__icon\">\r\n                <FontAwesomeIcon\r\n                  icon={faCopy}\r\n                  title=\"Copy\"\r\n                  onClick={() => this.copy(i)}\r\n                ></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>&nbsp;</div>\r\n              </div>\r\n              <div className=\"sort__icon\">\r\n                <FontAwesomeIcon\r\n                  icon={faTrash}\r\n                  title=\"Delete\"\r\n                  onClick={() => this.remove(index)}\r\n                ></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n          </div >)\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.rowList)\r\n    let { rowList } = this.state.rowList;\r\n    return (\r\n      <div className=\"sorts--grid\" ref={this.setWrapperRef}>\r\n        <div className=\"sort__grid\">\r\n          <div className=\"sort__settings\">\r\n            <div className=\"sort__header\">\r\n              <div className=\"sort__headerTxt\">\r\n                <strong>Sort </strong>\r\n              </div>\r\n              <div className=\"sort__close\">\r\n                <FontAwesomeIcon\r\n                  className=\"icon-close\"\r\n                  icon={faTimes}\r\n                  onClick={() => this.props.closeSorting()}\r\n                ></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n            <div className=\"sort__body\">\r\n              <DndProvider\r\n                backend={TouchBackend}\r\n                options={{ enableMouseEvents: true }}\r\n              >\r\n                <SortingList\r\n                  sortsArray={this.createColumnsArrayFromProps(this.state.rowList)}\r\n                />\r\n              </DndProvider>\r\n              {/* {rowList.map((x, i) => {\r\n                return (\r\n                  <div className=\"sort__bodyContent\" key={i}>\r\n                    <div className=\"sort__reorder\">\r\n                      <div className=\"\">\r\n                        <div>&nbsp;</div>\r\n                      </div>\r\n                      <div className=\"sort__icon\">\r\n                        <FontAwesomeIcon\r\n                          icon={faAlignJustify}\r\n                        ></FontAwesomeIcon>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"sort__reorder\">\r\n                      <div className=\"\">\r\n                        <div>Sort by</div>\r\n                      </div>\r\n                      <div className=\"sort__file\">\r\n                        <select className=\"custom__ctrl\">\r\n                          {this.props.columnFieldValue.map((item, index) => (\r\n                            <option key={index}>{item}</option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"sort__reorder\">\r\n                      <div className=\"\">\r\n                        <div>Sort on</div>\r\n                      </div>\r\n                      <div className=\"sort__file\">\r\n                        <select className=\"custom__ctrl\">\r\n                          <option>Value</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"sort__reorder\">\r\n                      <div className=\"\">\r\n                        <div>Order</div>\r\n                      </div>\r\n                      <div className=\"sort__file\">\r\n                        <select className=\"custom__ctrl\">\r\n                          <option>Ascending</option>\r\n                          <option>Descending</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"sort__reorder\">\r\n                      <div className=\"\">\r\n                        <div>&nbsp;</div>\r\n                      </div>\r\n                      <div className=\"sort__icon\">\r\n                        <FontAwesomeIcon\r\n                          icon={faCopy}\r\n                          title=\"Copy\"\r\n                          onClick={() => this.copy(i)}\r\n                        ></FontAwesomeIcon>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"sort__reorder\">\r\n                      <div className=\"\">\r\n                        <div>&nbsp;</div>\r\n                      </div>\r\n                      <div className=\"sort__icon\">\r\n                        <FontAwesomeIcon\r\n                          icon={faTrash}\r\n                          title=\"Delete\"\r\n                          onClick={() => this.remove(i)}\r\n                        ></FontAwesomeIcon>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })} */}\r\n              <div className=\"sort__new\">\r\n                <div className=\"sort__section\">\r\n                  <FontAwesomeIcon\r\n                    icon={faPlus}\r\n                    className=\"sort__icon\"\r\n                  ></FontAwesomeIcon>\r\n                  <div className=\"sort__txt\" onClick={() => this.add()}>\r\n                    New Sort\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"sort__footer\">\r\n              <div className=\"sort__btns\">\r\n                <button className=\"btns\" onClick={this.clearAll}>\r\n                  Clear All\r\n                </button>\r\n                <button className=\"btns btns__save\">Ok</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <button onClick={() => this.add()}>Add New</button> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTimes,\r\n  faFilePdf,\r\n  faFileExcel,\r\n  faFileCsv,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nlet downLaodFileType = [];\r\nclass ExportData extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columnValueList: this.props.columnsList,\r\n      columnEntityList: [],\r\n      isAllSelected: false,\r\n      downLaodFileType: [],\r\n      filteredRow: [],\r\n      warning: \"\",\r\n      clickTag: \"none\",\r\n    };\r\n    this.setWrapperRef = this.setWrapperRef.bind(this);\r\n    this.handleClickOutside = this.handleClickOutside.bind(this);\r\n    this.selectDownLoadType = this.selectDownLoadType.bind(this);\r\n    this.exportValidation = this.exportValidation.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  setWrapperRef(node) {\r\n    this.wrapperRef = node;\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n      this.props.closeExport();\r\n    }\r\n  }\r\n\r\n  resetColumnExportList = () => {\r\n    this.setState({\r\n      columnEntityList: [],\r\n      isAllSelected: false,\r\n    });\r\n  };\r\n\r\n  selectAllToColumnList = () => {\r\n    this.resetColumnExportList();\r\n    this.setState({\r\n      columnEntityList: !this.state.isAllSelected ? this.props.columnsList : [],\r\n      isAllSelected: !this.state.isAllSelected,\r\n    });\r\n  };\r\n\r\n  addToColumnEntityList = (typeToBeAdded) => {\r\n    var existingColumnEntityList = this.state.columnEntityList;\r\n    if (!existingColumnEntityList.includes(typeToBeAdded)) {\r\n      existingColumnEntityList.push(typeToBeAdded);\r\n    } else {\r\n      existingColumnEntityList = existingColumnEntityList.filter((item) => {\r\n        return item !== typeToBeAdded \r\n      });\r\n    }\r\n    this.setState({\r\n      columnEntityList: existingColumnEntityList,\r\n      isAllSelected: false,\r\n    });\r\n  };\r\n\r\n  selectDownLoadType = (event) => {\r\n    if (\r\n      event.target.checked &&\r\n      !this.state.downLaodFileType.includes(event.target.value)\r\n    ) {\r\n      downLaodFileType.push(event.target.value);\r\n      this.setState({ downLaodFileType });\r\n    } else {\r\n      downLaodFileType.map(function (value, index) {\r\n        if (value === event.target.value) {\r\n          downLaodFileType = downLaodFileType.splice(index, value);\r\n        }\r\n      });\r\n      this.setState({ downLaodFileType });\r\n    }\r\n  };\r\n\r\n  exportRowData = () => {\r\n    const columnVlaueList = this.state.columnEntityList;\r\n    if (columnVlaueList.length > 0 && this.state.downLaodFileType.length > 0) {\r\n      this.props.rows.forEach((row) => {\r\n        const keys = Object.getOwnPropertyNames(row);\r\n        var filteredColumnVal = {};\r\n        keys.forEach(function (key) {\r\n          columnVlaueList.forEach((columnName) => {\r\n            if (columnName.key === key) filteredColumnVal[key] = row[key];\r\n          });\r\n        });\r\n        this.state.filteredRow.push(filteredColumnVal);\r\n      });\r\n\r\n      this.state.downLaodFileType.map((item) => {\r\n        if (item === \"pdf\") this.downloadPDF();\r\n        else if (item === \"excel\") this.downloadXLSFile();\r\n        else this.downloadCSVFile();\r\n      });\r\n    }\r\n  };\r\n\r\n  downloadPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"landscape\"; // portrait or landscape\r\n\r\n    const marginLeft = 300;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"iCargo Report\";\r\n    const headers = [\r\n      this.state.columnEntityList.map((column) => {\r\n        return column.name;\r\n      }),\r\n    ];\r\n    var dataValues = [];\r\n    this.props.rows.forEach((row) => {\r\n      const keys = Object.keys(row);\r\n      var filteredColumnVal = [];\r\n      this.state.columnEntityList.forEach((columnName) => {\r\n        keys.forEach((key) => {\r\n          if (columnName.key === key) filteredColumnVal.push(row[key]);\r\n        });\r\n      });\r\n      dataValues.push(filteredColumnVal);\r\n    });\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: dataValues,\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"report.pdf\");\r\n  };\r\n\r\n  downloadCSVFile = () => {\r\n    const fileType =\r\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n    const fileExtension = \".csv\";\r\n    const fileName = \"CSVDownload\";\r\n    const ws = XLSX.utils.json_to_sheet(this.state.filteredRow);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"csv\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  };\r\n\r\n  downloadXLSFile = () => {\r\n    const fileType =\r\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n    const fileExtension = \".xlsx\";\r\n    const fileName = \"XLSXDownload\";\r\n    const ws = XLSX.utils.json_to_sheet(this.state.filteredRow);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  };\r\n\r\n  columnSearchLogic = (e) => {\r\n    const searchKey = String(e.target.value).toLowerCase();\r\n    let filteredRows = this.props.columnsList.filter((item) => {\r\n      return item.name.toLowerCase().includes(searchKey);\r\n    });\r\n    if (!filteredRows.length) {\r\n      this.setState({ columnValueList: this.props.columnsList });\r\n    } else {\r\n      this.setState({ columnValueList: filteredRows });\r\n    }\r\n  };\r\n\r\n  exportValidation = () => {\r\n    let columnLength = this.state.columnEntityList.length;\r\n    let fileLength = this.state.downLaodFileType.length;\r\n    if (columnLength > 0 && fileLength > 0) {\r\n      this.exportRowData();\r\n      this.setState({ clickTag: \"none\" });\r\n    } else if (columnLength === 0) {\r\n      this.setState({ warning: \"Column\" });\r\n      this.setState({ clickTag: \"\" });\r\n    } else if (fileLength === 0) {\r\n      this.setState({ warning: \"File Type\" });\r\n      this.setState({ clickTag: \"\" });\r\n    }\r\n    if (columnLength === 0 && fileLength === 0) {\r\n      this.setState({ warning: \"File Type & Column\" });\r\n      this.setState({ clickTag: \"\" });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"exports--grid\" ref={this.setWrapperRef}>\r\n        <div className=\"export__grid\">\r\n          <div className=\"export__chooser\">\r\n            <div className=\"export__header\">\r\n              <div className=\"\">\r\n                <strong>Export Data</strong>\r\n              </div>\r\n            </div>\r\n            <div className=\"export__body\">\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search export\"\r\n                  className=\"custom__ctrl\"\r\n                  onChange={this.columnSearchLogic}\r\n                ></input>\r\n              </div>\r\n              <div className=\"export__selectAll\">\r\n                <div\r\n                  className=\"export__selectTxt\"\r\n                  onClick={() => this.selectAllToColumnList()}\r\n                >\r\n                  Select All\r\n                </div>\r\n              </div>\r\n              {this.state.columnValueList.length > 0\r\n                ? this.state.columnValueList.map((column, index) => {\r\n                    return (\r\n                      <div className=\"export__wrap\" key={column.key}>\r\n                        <div className=\"export__checkbox\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={this.state.columnEntityList.includes(\r\n                              column\r\n                            )}\r\n                            onChange={() => this.addToColumnEntityList(column)}\r\n                          ></input>\r\n                        </div>\r\n                        <div className=\"export__txt\">{column.name}</div>\r\n                      </div>\r\n                    );\r\n                  })\r\n                : \"\"}\r\n            </div>\r\n          </div>\r\n          <div className=\"export__settings\">\r\n            <div className=\"export__header\">\r\n              <div className=\"export__headerTxt\"></div>\r\n              <div className=\"export__close\">\r\n                <FontAwesomeIcon icon={faTimes} className=\"icon-close\" onClick={this.props.closeExport}></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n            <div className=\"export__as\">Export as</div>\r\n            <div className=\"export__body\">\r\n              <div className=\"export__reorder\">\r\n                <div className=\"\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"pdf\"\r\n                    value=\"pdf\"\r\n                    onChange={this.selectDownLoadType}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"export__file\">\r\n                  <FontAwesomeIcon\r\n                    icon={faFilePdf}\r\n                    className=\"temp\"\r\n                  ></FontAwesomeIcon>\r\n                </div>\r\n              </div>\r\n              <div className=\"export__reorder\">\r\n                <div className=\"\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"excel\"\r\n                    value=\"excel\"\r\n                    onChange={this.selectDownLoadType}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"export__file\">\r\n                  <FontAwesomeIcon\r\n                    icon={faFileExcel}\r\n                    className=\"temp\"\r\n                  ></FontAwesomeIcon>\r\n                </div>\r\n              </div>\r\n              <div className=\"export__reorder\">\r\n                <div className=\"\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"csv\"\r\n                    value=\"csv\"\r\n                    onChange={this.selectDownLoadType}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"export__file\">\r\n                  <FontAwesomeIcon\r\n                    icon={faFileCsv}\r\n                    className=\"temp\"\r\n                  ></FontAwesomeIcon>\r\n                </div>\r\n              </div>\r\n              <div className=\"exportWarning\">\r\n                <span\r\n                  style={{ display: this.state.clickTag }}\r\n                  className=\"alert alert-danger\"\r\n                >\r\n                  You haven't selected <strong>{this.state.warning}</strong>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"export__footer\">\r\n              <div className=\"export__btns\">\r\n                <button\r\n                  className=\"btns\"\r\n                  onClick={() => this.props.closeExport()}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className=\"btns btns__save\"\r\n                  onClick={(e) => {\r\n                    this.exportValidation();\r\n                  }}\r\n                >\r\n                  Export\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ExportData;\r\n","import React, { Component } from \"react\";\r\nimport ExtDataGrid from \"./common/extDataGrid\";\r\nimport { Toolbar, Data, Filters, Editors } from \"react-data-grid-addons\";\r\nimport { range } from \"lodash\";\r\nimport { applyFormula } from \"./utilities/utils\";\r\nimport { FormControl } from \"react-bootstrap\";\r\nimport DatePicker from \"./functions/DatePicker.js\";\r\n//import {onRowsSelected} from \"../components/functions/OnRowsSelected.js\"\r\nimport {\r\n  faSortAmountDown,\r\n  faColumns,\r\n  // faSyncAlt,\r\n  faShareAlt,\r\n  // faAlignLeft,\r\n  // faFilter,\r\n  faSortDown,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport ErrorMessage from \"./common/ErrorMessage\";\r\nimport ColumnReordering from \"./overlays/column_chooser/Chooser\";\r\nimport Sorting from \"./overlays/sorting/Sorting\";\r\nimport ExportData from \"./overlays/export_data/ExportData\";\r\n\r\nconst {\r\n  DraggableHeader: { DraggableContainer },\r\n} = require(\"react-data-grid-addons\");\r\n\r\nconst { DropDownEditor } = Editors;\r\n\r\nconst defaultParsePaste = (str) => str.split(/\\r\\n|\\n|\\r/).map((row) => row.split(\"\\t\"));\r\n\r\n// let newFilters = {};\r\n\r\nconst selectors = Data.Selectors;\r\n\r\nconst { AutoCompleteFilter, NumericFilter } = Filters;\r\nclass spreadsheet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const airportCodes = [];\r\n    this.props.airportCodes.forEach((item) => {\r\n      airportCodes.push({ id: item, value: item });\r\n    });\r\n    this.state = {\r\n      warningStatus:\"\",\r\n      height: 680,\r\n      displayNoRows: \"none\",\r\n      searchIconDisplay: \"\",\r\n      searchValue: \"\",\r\n      filter: {},\r\n      rows: this.props.rows,\r\n      selectedIndexes: [],\r\n      junk: {},\r\n      topLeft: {},\r\n      columnReorderingComponent: null,\r\n      exportComponent: null,\r\n      filteringRows: this.props.rows,\r\n      tempRows: this.props.rows,\r\n      sortingPanelComponent: null,\r\n      count: this.props.rows.length,\r\n      columns: this.props.columns.map((item) => {\r\n        if (item.editor === \"DatePicker\") {\r\n          item.editor = DatePicker;\r\n        } else if (item.editor === \"DropDown\") {\r\n          item.editor = <DropDownEditor options={airportCodes} />;\r\n        } else if (item.editor === \"Text\") {\r\n          item.editor = \"text\";\r\n        } else {\r\n          item.editor = null;\r\n        }\r\n        if (item.filterType === \"numeric\") {\r\n          item.filterRenderer = NumericFilter;\r\n        }\r\n        else {\r\n          item.filterRenderer = AutoCompleteFilter;\r\n        }\r\n        return item;\r\n      }),\r\n    };\r\n    document.addEventListener(\"copy\", this.handleCopy);\r\n    document.addEventListener(\"paste\", this.handlePaste);\r\n    this.handleSearchValue = this.handleSearchValue.bind(this);\r\n    this.clearSearchValue = this.clearSearchValue.bind(this);\r\n    this.handleFilterChange = this.handleFilterChange.bind(this);\r\n\r\n    this.formulaAppliedCols = this.props.columns.filter((item) => {\r\n      return item.formulaApplicable;\r\n    });\r\n  }\r\n\r\n  updateRows = (startIdx, newRows) => {\r\n    this.setState((state) => {\r\n      const rows = state.rows.slice();\r\n      for (let i = 0; i < newRows.length; i++) {\r\n        if (startIdx + i < rows.length) {\r\n          rows[startIdx + i] = {\r\n            ...rows[startIdx + i],\r\n            ...newRows[i],\r\n          };\r\n        }\r\n      }\r\n      return {\r\n        rows,\r\n      };\r\n    });\r\n  }\r\n\r\n  rowGetter = (i) => {\r\n    const { rows } = this.state;\r\n    return rows[i];\r\n  };\r\n\r\n  handleCopy = (e) => {\r\n    e.preventDefault();\r\n    const { topLeft, botRight } = this.state;\r\n    const text = range(topLeft.rowIdx, botRight.rowIdx + 1)\r\n      .map((rowIdx) =>\r\n        this.state.columns\r\n          .slice(topLeft.colIdx - 1, botRight.colIdx)\r\n          .map((col) => this.rowGetter(rowIdx)[col.key])\r\n          .join(\"\\t\")\r\n      )\r\n      .join(\"\\n\");\r\n    e.clipboardData.setData(\"text/plain\", text);\r\n  };\r\n\r\n  handlePaste = (e) => {\r\n    e.preventDefault();\r\n    const { topLeft } = this.state;\r\n    const newRows = [];\r\n    const pasteData = defaultParsePaste(e.clipboardData.getData(\"text/plain\"));\r\n    pasteData.forEach((row) => {\r\n      const rowData = {};\r\n      // Merge the values from pasting and the keys from the columns\r\n      this.state.columns.slice(topLeft.colIdx - 1, topLeft.colIdx - 1 + row.length).forEach((col, j) => {\r\n        rowData[col.key] = row[j];\r\n      });\r\n      newRows.push(rowData);\r\n    });\r\n    this.updateRows(topLeft.rowIdx, newRows);\r\n  };\r\n\r\n  setSelection = (args) => {\r\n    this.setState({\r\n      topLeft: {\r\n        rowIdx: args.topLeft.rowIdx,\r\n        colIdx: args.topLeft.idx,\r\n      },\r\n      botRight: {\r\n        rowIdx: args.bottomRight.rowIdx,\r\n        colIdx: args.bottomRight.idx,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleWarningStatus = () => {\r\n    this.setState({ warningStatus: \"invalid\" })\r\n  }\r\n  closeWarningStatus = () => {\r\n    this.setState({ warningStatus: \"\" })\r\n  }\r\n  componentWillReceiveProps(props) {\r\n    this.setState({\r\n      rows: props.rows,\r\n    });\r\n    this.setState({\r\n      status: props.status,\r\n    });\r\n    this.setState({\r\n      textValue: props.textValue,\r\n    });\r\n    this.setState({ count: props.count });\r\n    this.setState({warningStatus:props.status})\r\n  }\r\n\r\n  /**\r\n * Method To update the cell/cells with the edited values\r\n * @param {*} fromRow is the row from which this edit is performed\r\n * @param {*} toRow is the row upto which this edit is performed\r\n * @param {*} updated is the value of change\r\n * @param {*} action is type of edit action performed\r\n */\r\n  onGridRowsUpdated = ({ fromRow, toRow, updated, action }) => {\r\n    let columnName = \"\";\r\n    const filter = this.formulaAppliedCols.filter((item) => {\r\n      if (updated[item.key] !== null && updated[item.key] !== undefined) {\r\n        columnName = item.key;\r\n        return true;\r\n      } else return false;\r\n    });\r\n\r\n    if (filter.length > 0) {\r\n      updated = applyFormula(updated, columnName);\r\n    }\r\n\r\n    if (action !== \"COPY_PASTE\") {\r\n      this.setState((state) => {\r\n        const rows = state.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n          rows[i] = {\r\n            ...rows[i],\r\n            ...updated,\r\n          };\r\n        }\r\n\r\n        return {\r\n          rows,\r\n        };\r\n      });\r\n      this.setState((state) => {\r\n        const filteringRows = state.filteringRows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n          filteringRows[i] = {\r\n            ...filteringRows[i],\r\n            ...updated,\r\n          };\r\n        }\r\n\r\n        return {\r\n          filteringRows,\r\n        };\r\n      });\r\n      this.setState((state) => {\r\n        const tempRows = state.tempRows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n          tempRows[i] = {\r\n            ...tempRows[i],\r\n            ...updated,\r\n          };\r\n        }\r\n\r\n        return {\r\n          tempRows,\r\n        };\r\n      });\r\n    }\r\n    if (this.props.updateCellData) {\r\n      this.props.updateCellData(this.state.tempRows[fromRow], this.state.tempRows[toRow], updated, action);\r\n    }\r\n  };\r\n\t/**\r\n\t * Method To bulk/individual select of rows\r\n\t * @param {*} rows is the selected row\r\n\t */\r\n  onRowsSelected = (rows) => {\r\n    this.setState({\r\n      selectedIndexes: this.state.selectedIndexes.concat(rows.map((r) => r.rowIdx)),\r\n    });\r\n    if (this.props.selectBulkData) {\r\n      this.props.selectBulkData(rows);\r\n    }\r\n  };\r\n\t/**\r\n\t * Method To bulk/individual deselect of rows\r\n\t * @param {*} rows is the deselected row\r\n\t */\r\n  onRowsDeselected = (rows) => {\r\n    let rowIndexes = rows.map((r) => r.rowIdx);\r\n    this.setState({\r\n      selectedIndexes: this.state.selectedIndexes.filter((i) => rowIndexes.indexOf(i) === -1),\r\n    });\r\n  };\r\n\r\n\t/**\r\n\t * Method To filter the multiple columns\r\n\t * @param {*} value is the  incoming filtering event\r\n\t */\r\n  handleFilterChange = (value) => {\r\n    let junk = this.state.junk;\r\n    if (!(value.filterTerm == null) && !(value.filterTerm.length <= 0)) {\r\n      junk[value.column.key] = value;\r\n    } else {\r\n      delete junk[value.column.key];\r\n    }\r\n    this.setState({ junk });\r\n    const data = this.getrows(this.state.filteringRows, this.state.junk);\r\n    this.setState({\r\n      rows: data,\r\n      tempRows: data,\r\n      count: data.length,\r\n    });\r\n    if (data.length === 0) {\r\n      this.handleWarningStatus();\r\n    }\r\n    else {\r\n      this.closeWarningStatus();\r\n    }\r\n  };\r\n  getrows = (rows, filters) => {\r\n    if (Object.keys(filters).length <= 0) {\r\n      filters = {};\r\n    }\r\n    selectors.getRows({ rows: [], filters: {} });\r\n    return selectors.getRows({ rows: rows, filters: filters });\r\n  };\r\n\r\n  /**\r\n * Method To render the filter values for filtering rows\r\n * @param {*} rows is the row data to be considered for filtering\r\n * @param {*} columnId is the specific columnId for which the row datas are being considered\r\n */\r\n  getValidFilterValues(rows, columnId) {\r\n    return rows\r\n      .map((r) => r[columnId])\r\n      .filter((item, i, a) => {\r\n        return i === a.indexOf(item);\r\n      });\r\n  }\r\n  /**\r\n* Method To sort the rows for a particular column\r\n* @param {*} data is the row datas to be considered for sorting\r\n* @param {*} sortColumn is the specific column for which the row sort is being triggered\r\n* @param {*} sortDirection is the type of sort\r\n*/\r\n  sortRows = (data, sortColumn, sortDirection) => {\r\n    const comparer = (a, b) => {\r\n      if (sortDirection === \"ASC\") {\r\n        return a[sortColumn] > b[sortColumn] ? 1 : -1;\r\n      } else if (sortDirection === \"DESC\") {\r\n        return a[sortColumn] < b[sortColumn] ? 1 : -1;\r\n      }\r\n    };\r\n    this.setState({\r\n      rows: [...data].sort(comparer),\r\n    });\r\n    return sortDirection === \"NONE\" ? data : this.state.rows;\r\n  };\r\n  /**\r\n     * Method To swap the columns\r\n     * @param {*} source is source column\r\n     * @param {*} target is the target column \r\n     */\r\n  onHeaderDrop = (source, target) => {\r\n    const stateCopy = Object.assign({}, this.state);\r\n    const columnSourceIndex = this.state.columns.findIndex((i) => i.key === source);\r\n    const columnTargetIndex = this.state.columns.findIndex((i) => i.key === target);\r\n\r\n    stateCopy.columns.splice(columnTargetIndex, 0, stateCopy.columns.splice(columnSourceIndex, 1)[0]);\r\n\r\n    const emptyColumns = Object.assign({}, this.state, {\r\n      columns: [],\r\n    });\r\n    this.setState(emptyColumns);\r\n\r\n    const reorderedColumns = Object.assign({}, this.state, {\r\n      columns: stateCopy.columns,\r\n    });\r\n    this.setState(reorderedColumns);\r\n  };\r\n  updateTableAsPerRowChooser = (inComingColumnsHeaderList, pinnedColumnsList) => {\r\n    var existingColumnsHeaderList = this.props.columns;\r\n    existingColumnsHeaderList = existingColumnsHeaderList.filter((item) => {\r\n      return inComingColumnsHeaderList.includes(item.name);\r\n    });\r\n\r\n    var rePositionedArray = existingColumnsHeaderList;\r\n    var singleHeaderOneList;\r\n    if (pinnedColumnsList.length > 0) {\r\n      pinnedColumnsList\r\n        .slice(0)\r\n        .reverse()\r\n        .map((item, index) => {\r\n          singleHeaderOneList = existingColumnsHeaderList.filter((subItem) => item === subItem.name);\r\n          rePositionedArray = this.array_move(\r\n            existingColumnsHeaderList,\r\n            existingColumnsHeaderList.indexOf(singleHeaderOneList[0]),\r\n            index\r\n          );\r\n        });\r\n    }\r\n\r\n    existingColumnsHeaderList = rePositionedArray;\r\n\t\t/**\r\n       making all the frozen attribute as false for all the columns and then \r\n       setting items of pinnedColumnsList as frozen = true\r\n       */\r\n    existingColumnsHeaderList.map((headerItem, index) => {\r\n      if (headerItem.frozen !== undefined && headerItem.frozen === true) {\r\n        existingColumnsHeaderList[index][\"frozen\"] = false;\r\n      }\r\n      if (pinnedColumnsList.includes(headerItem.name)) {\r\n        existingColumnsHeaderList[index][\"frozen\"] = true;\r\n      }\r\n    });\r\n\r\n    console.log(\"existingColumnsHeaderList \", existingColumnsHeaderList);\r\n\r\n    this.setState({\r\n      columns: existingColumnsHeaderList,\r\n    });\r\n\r\n    this.closeColumnReOrdering();\r\n  };\r\n\r\n\t/**\r\n\t * Method To re-position a particular object in an Array from old_index to new_index\r\n\t * @param {*} arr inComing array\r\n\t * @param {*} old_index initial index\r\n\t * @param {*} new_index final index\r\n\t */\r\n  array_move = (arr, old_index, new_index) => {\r\n    if (new_index >= arr.length) {\r\n      var k = new_index - arr.length + 1;\r\n      while (k--) {\r\n        arr.push(undefined);\r\n      }\r\n    }\r\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\r\n    return arr;\r\n  };\r\n\r\n\t/**\r\n\t * Method to render the column Selector Pannel\r\n\t */\r\n  columnReorderingPannel = () => {\r\n    var headerNameList = [];\r\n    var existingPinnedHeadersList = [];\r\n    this.state.columns\r\n      .filter((item) => item.frozen !== undefined && item.frozen === true)\r\n      .map((item) => existingPinnedHeadersList.push(item.name));\r\n    this.state.columns.map((item) => headerNameList.push(item.name));\r\n    this.setState({\r\n      columnReorderingComponent: (\r\n        <ColumnReordering\r\n          maxLeftPinnedColumn={this.props.maxLeftPinnedColumn}\r\n          updateTableAsPerRowChooser={this.updateTableAsPerRowChooser}\r\n          headerKeys={headerNameList}\r\n          closeColumnReOrdering={this.closeColumnReOrdering}\r\n          existingPinnedHeadersList={existingPinnedHeadersList}\r\n          {...this.props}\r\n        />\r\n      ),\r\n    });\r\n  };\r\n\r\n\t/**\r\n\t * Method to stop the render the column Selector Pannel\r\n\t */\r\n  closeColumnReOrdering = () => {\r\n    this.setState({\r\n      columnReorderingComponent: null,\r\n    });\r\n  };\r\n  handleSearchValue = (value) => {\r\n\r\n    this.setState({ searchValue: value });\r\n  };\r\n  clearSearchValue = () => {\r\n    this.setState({ searchValue: \"\" });\r\n    this.setState({ filteringRows: this.state.filteringRows })\r\n  };\r\n\r\n  sortingPanel = () => {\r\n    let columnField = [];\r\n    this.state.columns.map((item) => columnField.push(item.name));\r\n    this.setState({\r\n      sortingPanelComponent: <Sorting columnFieldValue={columnField} closeSorting={this.closeSorting} />,\r\n    });\r\n  };\r\n\r\n  closeSorting = () => {\r\n    this.setState({\r\n      sortingPanelComponent: null,\r\n    });\r\n  };\r\n\r\n  //Export Data Logic\r\n  exportColumnData = () => {\r\n    this.setState({\r\n      exportComponent: (\r\n        <ExportData rows={this.state.rows} columnsList={this.state.columns} closeExport={this.closeExport} />\r\n      ),\r\n    });\r\n  };\r\n\r\n  closeExport = () => {\r\n    this.setState({\r\n      exportComponent: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='parentDiv'>\r\n          <div className='totalCount'>\r\n            Showing <strong> {this.state.count} </strong> records\r\n\t\t\t\t\t</div>\r\n          <div className='globalSearch'>\r\n            <i className=\"fa fa-search\"></i>\r\n            <FormControl\r\n              className=\"globalSeachInput\"\r\n              type='text'\r\n              placeholder=\"Search\"\r\n              onChange={(e) => {\r\n                this.handleSearchValue(e.target.value);\r\n                this.props.globalSearchLogic(e, this.state.tempRows);\r\n              }}\r\n              value={this.state.searchValue}\r\n            />\r\n          </div>\r\n          {/* <div className=\"filterIcons\">\r\n            <FontAwesomeIcon icon={faFilter} />\r\n          </div> */}\r\n          <div className='filterIcons' onClick={this.sortingPanel}>\r\n            <FontAwesomeIcon title='Group Sort' icon={faSortAmountDown} />\r\n            <FontAwesomeIcon icon={faSortDown} className='filterArrow' />\r\n          </div>\r\n          {this.state.sortingPanelComponent}\r\n          <div className='filterIcons' onClick={this.columnReorderingPannel}>\r\n            <FontAwesomeIcon title='Column Chooser' icon={faColumns} />\r\n            <FontAwesomeIcon icon={faSortDown} className='filterArrow' />\r\n          </div>\r\n          {this.state.columnReorderingComponent}\r\n          <div className='filterIcons'>\r\n            <FontAwesomeIcon title='Export' icon={faShareAlt} onClick={this.exportColumnData} />\r\n          </div>\r\n          {this.state.exportComponent}\r\n          {/* <div className=\"filterIcons\">\r\n            <FontAwesomeIcon title=\"Reload\" icon={faSyncAlt} />\r\n          </div> */}\r\n          {/* <div className=\"filterIcons\">\r\n            <FontAwesomeIcon icon={faAlignLeft} />\r\n          </div> */}\r\n        </div>\r\n        <ErrorMessage\r\n          className='errorDiv'\r\n          status={this.state.warningStatus}\r\n          closeWarningStatus={(e) => {\r\n            this.props.closeWarningStatus();\r\n            this.closeWarningStatus();\r\n          }}\r\n          clearSearchValue={this.clearSearchValue}\r\n        />\r\n        <DraggableContainer className='gridDiv' onHeaderDrop={this.onHeaderDrop}>\r\n          <ExtDataGrid\r\n            toolbar={<Toolbar enableFilter={true} />}\r\n            getValidFilterValues={(columnKey) => this.getValidFilterValues(this.state.filteringRows, columnKey)}\r\n            minHeight={this.state.height}\r\n            columns={this.state.columns}\r\n            rowGetter={(i) => this.state.rows[i]}\r\n            rowsCount={this.state.rows.length}\r\n            onGridRowsUpdated={this.onGridRowsUpdated}\r\n            enableCellSelect={true}\r\n            onClearFilters={() => {\r\n              this.setState({ junk: {} });\r\n            }}\r\n            onColumnResize={(idx, width) => console.log(`Column ${idx} has been resized to ${width}`)}\r\n            onAddFilter={(filter) => this.handleFilterChange(filter)}\r\n            rowSelection={{\r\n              showCheckbox: true,\r\n              enableShiftSelect: true,\r\n              onRowsSelected: this.onRowsSelected,\r\n              onRowsDeselected: this.onRowsDeselected,\r\n              selectBy: {\r\n                indexes: this.state.selectedIndexes,\r\n              },\r\n            }}\r\n            onGridSort={(sortColumn, sortDirection) => this.sortRows(this.state.rows, sortColumn, sortDirection)}\r\n          //**************************/\r\n          //--Todo-- This is commented aspart of fixing column filtering \r\n          // cellRangeSelection={{\r\n          //   onComplete: this.setSelection,\r\n          // }}\r\n          //***********************/\r\n          />\r\n        </DraggableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default spreadsheet;\r\n"],"names":["ExtDataGrid","componentDidMount","_mounted","dataGridComponent","document","getElementsByClassName","window","addEventListener","metricsUpdated","props","cellRangeSelection","onWindowMouseUp","componentWillUnmount","removeEventListener","ReactDataGrid","applyFormula","obj","columnName","item","toString","charAt","operation","split","value","substring","length","reduce","a","b","Number","Math","min","apply","max","console","log","DatePicker","state","Date","input","getInputNode","bind","getValue","onValueChanged","updated","date","dateTimeFormat","Intl","DateTimeFormat","year","month","day","formatToParts","column","key","ev","setState","target","render","React","ref","Component","SEARCH_NOT_FOUNT_ERROR","ErrorMessage","useState","status","setStatus","useEffect","FontAwesomeIcon","faTimes","e","closeWarningStatus","clearSearchValue","ItemTypes","COLUMN","style","cursor","ColumnItem","id","text","moveColumn","findColumn","originalIndex","index","useDrag","type","collect","monitor","isDragging","end","dropResult","getItem","droppedId","didDrop","drag","useDrop","accept","canDrop","hover","draggedId","overIndex","drop","opacity","node","ColumnsList","columnsArray","columns","setColumns","atIndex","update","$splice","filter","c","indexOf","display","flexWrap","map","ColumnReordering","resetColumnReorderList","columnReorderEntityList","isAllSelected","selectAllToColumnReOrderList","name","addToColumnReorderEntityList","typeToBeAdded","existingColumnReorderEntityList","existingLeftPinnedList","leftPinnedColumList","includes","indexOfInsertion","columnSelectList","findIndex","splice","filterColumnReorderList","searchKey","String","toLowerCase","existingList","filtererdColumnReorderList","createColumnsArrayFromProps","colsList","faAlignJustify","maxLeftPinnedColumn","reArrangeLeftPinnedColumn","columHeaderName","unshift","subItem","headerKeys","existingPinnedHeadersList","setWrapperRef","handleClickOutside","wrapperRef","event","contains","closeColumnReOrdering","color","DndProvider","TouchBackend","enableMouseEvents","updateTableAsPerRowChooser","CARD","Card","moveCard","findCard","SortingList","sortsArray","cards","setCards","card","App","add","rowList","push","copy","i","clearAll","remove","columnFieldValue","faCopy","faTrash","closeSorting","faPlus","downLaodFileType","ExportData","resetColumnExportList","columnEntityList","selectAllToColumnList","columnsList","addToColumnEntityList","existingColumnEntityList","selectDownLoadType","checked","exportRowData","columnVlaueList","rows","forEach","row","keys","Object","getOwnPropertyNames","filteredColumnVal","filteredRow","downloadPDF","downloadXLSFile","downloadCSVFile","unit","size","orientation","marginLeft","doc","jsPDF","setFontSize","title","headers","dataValues","content","startY","head","body","autoTable","save","fileType","fileExtension","fileName","ws","XLSX","json_to_sheet","wb","Sheets","data","SheetNames","excelBuffer","bookType","Blob","FileSaver","columnSearchLogic","filteredRows","columnValueList","exportValidation","columnLength","fileLength","clickTag","warning","closeExport","faFilePdf","faFileExcel","faFileCsv","require","DraggableContainer","DraggableHeader","DropDownEditor","Editors","defaultParsePaste","str","selectors","Data","Selectors","AutoCompleteFilter","Filters","NumericFilter","spreadsheet","updateRows","startIdx","newRows","slice","rowGetter","handleCopy","preventDefault","topLeft","botRight","range","rowIdx","colIdx","col","join","clipboardData","setData","handlePaste","pasteData","getData","rowData","j","setSelection","args","idx","bottomRight","handleWarningStatus","warningStatus","onGridRowsUpdated","fromRow","toRow","action","formulaAppliedCols","undefined","filteringRows","tempRows","updateCellData","onRowsSelected","selectedIndexes","concat","r","selectBulkData","onRowsDeselected","rowIndexes","handleFilterChange","junk","filterTerm","getrows","count","filters","getRows","sortRows","sortColumn","sortDirection","comparer","sort","onHeaderDrop","source","stateCopy","assign","columnSourceIndex","columnTargetIndex","emptyColumns","reorderedColumns","inComingColumnsHeaderList","pinnedColumnsList","existingColumnsHeaderList","rePositionedArray","singleHeaderOneList","reverse","array_move","headerItem","frozen","arr","old_index","new_index","k","columnReorderingPannel","headerNameList","columnReorderingComponent","handleSearchValue","searchValue","sortingPanel","columnField","sortingPanelComponent","Sorting","exportColumnData","exportComponent","airportCodes","height","displayNoRows","searchIconDisplay","editor","filterType","filterRenderer","formulaApplicable","componentWillReceiveProps","textValue","getValidFilterValues","columnId","FormControl","globalSearchLogic","faSortAmountDown","faSortDown","faColumns","faShareAlt","Toolbar","columnKey","width","showCheckbox","enableShiftSelect","selectBy","indexes"],"mappings":"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"}