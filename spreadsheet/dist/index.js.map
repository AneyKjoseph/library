{"version":3,"file":"index.js","sources":["../src/common/extDataGrid.js","../src/utilities/utils.js","../src/functions/DatePicker.js","../src/common/ErrorConstants.js","../src/common/ErrorMessage.js","../src/overlays/column_chooser/ItemTypes.js","../src/overlays/column_chooser/columnItem.js","../src/overlays/column_chooser/columnsList.js","../src/overlays/column_chooser/Chooser.js","../src/overlays/sorting/Sorting.js","../src/overlays/export_data/ExportData.js","../src/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport ReactDataGrid from \"react-data-grid\";\nimport { Toolbar, Data, Filters } from \"react-data-grid-addons\";\n\nclass ExtDataGrid extends ReactDataGrid {\n  componentDidMount() {\n    this._mounted = true;\n    this.dataGridComponent = document.getElementsByClassName(\n      \"react-grid-Container\"\n    )[0]; //assumes only one react datagrid component exists\n    window.addEventListener(\"resize\", this.metricsUpdated);\n    if (this.props.cellRangeSelection) {\n      this.dataGridComponent.addEventListener(\"mouseup\", this.onWindowMouseUp);\n    }\n    this.metricsUpdated();\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n    window.removeEventListener(\"resize\", this.metricsUpdated);\n    this.dataGridComponent.removeEventListener(\"mouseup\", this.onWindowMouseUp);\n  }\n}\n\nexport default ExtDataGrid;\n","export const applyFormula = (obj, columnName) => {\n  let item = obj[columnName].toString();\n  if (item && item.charAt(0) === \"=\") {\n    var operation = item.split(\"(\");\n    var value = operation[1]\n      .substring(0, operation[1].length - 1)\n      .split(/[,:]/);\n    switch (operation[0]) {\n      case \"=SUM\":\n      case \"=ADD\":\n      case \"=sum\":\n      case \"=add\":\n        obj[columnName] = value.reduce(function (a, b) {\n          return Number(a) + Number(b);\n        });\n        break;\n      case \"=MUL\":\n      case \"=mul\":\n        obj[columnName] = value.reduce(function (a, b) {\n          return Number(a) * Number(b);\n        });\n        break;\n      case \"=SUB\":\n      case \"=sub\":\n      case \"=DIFF\":\n      case \"=diff\":\n        obj[columnName] = value.reduce(function (a, b) {\n          return Number(a) - Number(b);\n        });\n        break;\n      case \"=min\":\n      case \"=MIN\":\n        obj[columnName] = Math.min.apply(Math, value);\n        break;\n      case \"=max\":\n      case \"=MAX\":\n        obj[columnName] = Math.max.apply(Math, value);\n        break;\n      default:\n        console.log(\"No Calculation\");\n    }\n  }\n  return obj;\n};","import React from 'react';\n\nexport default class DatePicker extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        value: new Date(),\n      };\n      //the variable to store component reference\n      this.input = null;\n  \n      this.getInputNode = this.getInputNode.bind(this);\n      this.getValue = this.getValue.bind(this);\n      this.onValueChanged = this.onValueChanged.bind(this);\n    }\n  \n    //returning the component with the reference, input\n    getInputNode() {\n      return this.input;\n    }\n    //returning updated object with the date value in the required format\n    getValue() {\n      var updated = {};\n      let date;\n      date = new Date(this.state.value);\n      const dateTimeFormat = new Intl.DateTimeFormat(\"en-US\", { year: \"numeric\", month: \"short\", day: \"2-digit\" });\n      const [{ value: month }, , { value: day }, , { value: year }] = dateTimeFormat.formatToParts(date);\n      updated[this.props.column.key] = `${day}-${month}-${year}`;\n      return updated;\n  \n    }\n  \n    onValueChanged(ev) {\n      this.setState({ value: ev.target.value });\n    }\n  \n    render() {\n      return (\n        <div>\n          <input\n            type=\"date\"\n            ref={(ref) => {\n              this.input = ref;\n            }}\n            value={this.state.value}\n            onChange={this.onValueChanged}\n          />\n        </div>\n      );\n    }\n  }","export const SEARCH_NOT_FOUNT_ERROR = \"No Search Matches. Please try again later.\";\r\n","import React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { SEARCH_NOT_FOUNT_ERROR } from \"./ErrorConstants\";\n\nconst ErrorMessage = (props) => {\n\n  const [status, setStatus] = useState(props.status);\n  useEffect(\n    () => {\n      setStatus(props.status)\n    }\n    , [props.status]);\n  if (status === \"invalid\") {\n    return (\n      <div id=\"errorMsg\">\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {SEARCH_NOT_FOUNT_ERROR}\n        </div>\n        <div className=\"notification-close\" >\n          <FontAwesomeIcon icon={faTimes}\n            onClick={(e) => {\n              props.closeWarningStatus();\n              props.clearSearchValue();\n            }} />\n        </div>\n      </div>\n    );\n  } else return <div></div>;\n};\nexport default ErrorMessage;\n","export const ItemTypes = {\r\n    COLUMN: \"column\"\r\n};\r\n","import React from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\n\r\nconst style = {\r\n\tcursor: \"move\",\r\n};\r\n\r\nconst ColumnItem = ({ id, text, moveColumn, findColumn }) => {\r\n\tconst originalIndex = findColumn(id).index;\r\n\r\n\tconst [{ isDragging }, drag] = useDrag({\r\n\t\titem: { type: ItemTypes.COLUMN, id, originalIndex },\r\n\t\tcollect: (monitor) => ({\r\n\t\t\tisDragging: monitor.isDragging(),\r\n\t\t}),\r\n\t\tend: (dropResult, monitor) => {\r\n\t\t\tconst { id: droppedId, originalIndex } = monitor.getItem();\r\n\t\t\tconst didDrop = monitor.didDrop();\r\n\t\t\tif (!didDrop) {\r\n\t\t\t\tmoveColumn(droppedId, originalIndex);\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n\r\n\tconst [, drop] = useDrop({\r\n\t\taccept: ItemTypes.COLUMN,\r\n\t\tcanDrop: () => false,\r\n\t\thover({ id: draggedId }) {\r\n\t\t\tif (draggedId !== id) {\r\n\t\t\t\tconst { index: overIndex } = findColumn(id);\r\n\t\t\t\tmoveColumn(draggedId, overIndex);\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n\r\n\tconst opacity = isDragging ? 0.1 : 1;\r\n\r\n\treturn (\r\n\t\t<div ref={(node) => drag(drop(node))} style={{ ...style, opacity }}>\r\n\t\t\t{text}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ColumnItem;\r\n","import React, { useState } from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport update from \"immutability-helper\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\nimport ColumnItem from \"./columnItem\";\r\n\r\nconst ColumnsList = (props) => {\r\n\tconst [columns, setColumns] = useState([...props.columnsArray]);\r\n\r\n\tconst moveColumn = (id, atIndex) => {\r\n\t\tconst { column, index } = findColumn(id);\r\n\t\tsetColumns(\r\n\t\t\tupdate(columns, {\r\n\t\t\t\t$splice: [\r\n\t\t\t\t\t[index, 1],\r\n\t\t\t\t\t[atIndex, 0, column],\r\n\t\t\t\t],\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst findColumn = (id) => {\r\n\t\tconst column = columns.filter((c) => `${c.id}` === id)[0];\r\n\t\treturn {\r\n\t\t\tcolumn,\r\n\t\t\tindex: columns.indexOf(column),\r\n\t\t};\r\n\t};\r\n\r\n\tconst [, drop] = useDrop({ accept: ItemTypes.COLUMN });\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetColumns(props.columnsArray);\r\n\t}, [props.columnsArray]);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div ref={drop} style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n\t\t\t\t{columns.map((column) => (\r\n\t\t\t\t\t<ColumnItem\r\n\t\t\t\t\t\tkey={column.id}\r\n\t\t\t\t\t\tid={`${column.id}`}\r\n\t\t\t\t\t\ttext={column.text}\r\n\t\t\t\t\t\tmoveColumn={moveColumn}\r\n\t\t\t\t\t\tfindColumn={findColumn}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default ColumnsList;\r\n","import React from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { TouchBackend } from \"react-dnd-touch-backend\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes, faAlignJustify } from \"@fortawesome/free-solid-svg-icons\";\nimport ColumnsList from \"./columnsList\";\n\nclass ColumnReordering extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columnReorderEntityList: this.props.headerKeys,\n      columnSelectList: this.props.headerKeys,\n      leftPinnedColumList: this.props.existingPinnedHeadersList,\n      isAllSelected: false,\n      maxLeftPinnedColumn: this.props.maxLeftPinnedColumn,\n    };\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      this.props.closeColumnReOrdering()\n    }\n  }\n\n\t/**\n\t * Method to reset the coloumn list onClick of Reset button\n\t */\n\tresetColumnReorderList = () => {\n\t\tthis.setState({\n\t\t\tcolumnReorderEntityList: [],\n\t\t\tisAllSelected: false,\n\t\t});\n\t};\n\n\t/**\n\t * Method to Select all options in the coloumn list onClick of Select All button\n\t */\n\tselectAllToColumnReOrderList = () => {\n\t\tthis.resetColumnReorderList();\n\t\tthis.setState({\n\t\t\tcolumnReorderEntityList: this.props.columns.map(item=> item.name),\n\t\t\tisAllSelected: true,\n\t\t});\n\t};\n\n\t/**\n\t * Method To add a column to columnReorderEntityList when selected.\n\t * @param {String} typeToBeAdded \n\t */\n\taddToColumnReorderEntityList = (typeToBeAdded) => {\n\t\tvar existingColumnReorderEntityList = this.state.columnReorderEntityList;\n\t\tvar existingLeftPinnedList = this.state.leftPinnedColumList;\n\t\tif (!existingColumnReorderEntityList.includes(typeToBeAdded)) {\n\t\t\texistingColumnReorderEntityList.push(typeToBeAdded);\n\t\t} else {\n\t\t\texistingColumnReorderEntityList = existingColumnReorderEntityList.filter((item) => {\n\t\t\t\tif (item !== typeToBeAdded) return item;\n\t\t\t});\n\t\t\tif (existingLeftPinnedList.includes(typeToBeAdded)) {\n\t\t\t\texistingLeftPinnedList = existingLeftPinnedList.filter((item) => item !== typeToBeAdded);\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\tcolumnReorderEntityList: existingColumnReorderEntityList,\n\t\t\tisAllSelected: false,\n\t\t\tleftPinnedColumList: existingLeftPinnedList,\n\t\t});\n\t};\n\n\t/**\n\t * Method to handle the like-search on key stroke.\n\t * @param {Event} e \n\t */\n\tfilterColumnReorderList = (e) => {\n\t\tvar searchKey = String(e.target.value).toLowerCase();\n\t\tvar existingList = this.props.columns.map(item=> item.name);\n\t\tlet filtererdColumnReorderList = [];\n\t\tif (searchKey.length > 0) {\n\t\t\tfiltererdColumnReorderList = existingList.filter((item) => {\n\t\t\t\treturn item.toLowerCase().includes(searchKey);\n\t\t\t});\n\t\t} else {\n\t\t\tfiltererdColumnReorderList = this.props.columns.map(item=> item.name);\n\t\t}\n\t\tthis.setState({\n\t\t\tcolumnSelectList: filtererdColumnReorderList,\n\t\t});\n\t};\n\n\tcreateColumnsArrayFromProps = (colsList) => {\n\t\treturn colsList.map((item) => {\n\t\t\treturn {\n\t\t\t\tid: item,\n\t\t\t\ttext: (\n\t\t\t\t\t<div className='column__reorder' key={item}>\n\t\t\t\t\t\t<div className=''>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faAlignJustify}></FontAwesomeIcon>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='column__reorder__name'>{item}</div>\n\t\t\t\t\t\t<div className='column__wrap'>\n\t\t\t\t\t\t\t<div className='column__checkbox'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\tchecked={this.state.leftPinnedColumList.includes(item)}\n\t\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t\tthis.state.maxLeftPinnedColumn - this.state.leftPinnedColumList.length <= 0\n\t\t\t\t\t\t\t\t\t\t\t? this.state.leftPinnedColumList.includes(item)\n\t\t\t\t\t\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t\t\t\t\t\t: true\n\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonChange={() => this.reArrangeLeftPinnedColumn(item)}\n\t\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='column__txt'>Pin Left</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t};\n\t\t});\n\t};\n\n\t/**\n\t * Method to handle the position of columns Names when left pinned in coloumn selector view.\n\t * @param {String} columHeaderName \n\t */\n\treArrangeLeftPinnedColumn = (columHeaderName) => {\n\t\tvar existingLeftPinnedList = this.state.leftPinnedColumList;\n\t\tvar existingColumnReorderEntityList = this.state.columnReorderEntityList;\n\t\tif (!existingLeftPinnedList.includes(columHeaderName)) {\n\t\t\texistingLeftPinnedList.unshift(columHeaderName);\n\t\t} else {\n\t\t\texistingLeftPinnedList = existingLeftPinnedList.filter((item) => item !== columHeaderName);\n\t\t}\n\t\tthis.setState({\n\t\t\tleftPinnedColumList: existingLeftPinnedList,\n\t\t});\n\n\t\texistingLeftPinnedList.map((item) => {\n\t\t\texistingColumnReorderEntityList = existingColumnReorderEntityList.filter((subItem) => subItem !== item);\n\t\t\texistingColumnReorderEntityList.unshift(item);\n\t\t});\n\n\t\tthis.setState({\n\t\t\tcolumnReorderEntityList: existingColumnReorderEntityList,\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='columns--grid'ref={this.setWrapperRef}>\n\t\t\t\t<div className='column__grid'>\n\t\t\t\t\t<div className='column__chooser'>\n\t\t\t\t\t\t<div className='column__header'>\n\t\t\t\t\t\t\t<div className=''>\n\t\t\t\t\t\t\t\t<strong>Column Chooser</strong>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='column__body'>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tplaceholder='Search column'\n\t\t\t\t\t\t\t\t\tclassName='custom__ctrl'\n\t\t\t\t\t\t\t\t\tonChange={this.filterColumnReorderList}\n\t\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='column__selectAll'>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\tclassName='column__selectTxt'\n\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\tonClick={() => this.selectAllToColumnReOrderList()}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSelect All\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{this.state.columnSelectList.map((item) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div className='column__wrap' key={item}>\n\t\t\t\t\t\t\t\t\t\t<div className='column__checkbox'>\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={this.state.columnReorderEntityList.includes(item)}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => this.addToColumnReorderEntityList(item)}\n\t\t\t\t\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='column__txt'>{item}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='column__settings'>\n\t\t\t\t\t\t<div className='column__header'>\n\t\t\t\t\t\t\t<div className='column__headerTxt'>\n\t\t\t\t\t\t\t\t<strong>Column Setting</strong>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='column__close'>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\tclassName=\"icon-close\" \n\t\t\t\t\t\t\t\t\ticon={faTimes}\n\t\t\t\t\t\t\t\t\tonClick={() => this.props.closeColumnReOrdering()}\n\t\t\t\t\t\t\t\t></FontAwesomeIcon>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='column__headerTxt'>\n\t\t\t\t\t\t\t<strong>&nbsp; &nbsp; Selected Column Count : {this.state.columnReorderEntityList.length}</strong>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='column__headerTxt'>\n\t\t\t\t\t\t\t{this.state.maxLeftPinnedColumn - this.state.leftPinnedColumList.length > 0 ? (\n\t\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t\t&nbsp; &nbsp; Left Pinned Column Count Remaining :{\" \"}\n\t\t\t\t\t\t\t\t\t{this.state.maxLeftPinnedColumn - this.state.leftPinnedColumList.length}\n\t\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<strong style={{ color: \"red\" }}>&nbsp; &nbsp; Maximum Count Of Left Pin Columns REACHED</strong>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='column__body'>\n\t\t\t\t\t\t\t<DndProvider backend={TouchBackend} options={{ enableMouseEvents: true }}>\n\t\t\t\t\t\t\t\t<ColumnsList\n\t\t\t\t\t\t\t\t\tcolumnsArray={this.createColumnsArrayFromProps(this.state.columnReorderEntityList)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</DndProvider>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='column__footer'>\n\t\t\t\t\t\t\t<div className='column__btns'>\n\t\t\t\t\t\t\t\t<button className='btns' onClick={() => this.resetColumnReorderList()}>\n\t\t\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button className='btns' onClick={() => this.props.closeColumnReOrdering()}>\n\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='btns btns__save'\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\tthis.props.updateTableAsPerRowChooser(\n\t\t\t\t\t\t\t\t\t\t\tthis.state.columnReorderEntityList,\n\t\t\t\t\t\t\t\t\t\t\tthis.state.leftPinnedColumList\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ColumnReordering;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTimes,\n  faAlignJustify,\n  faTrash,\n  faPlus,\n  faCopy,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { DndProvider } from \"react-dnd\";\nimport { TouchBackend } from \"react-dnd-touch-backend\";\nimport SortingList from \"./SortingList\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      rowList: [true],\n    };\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      this.props.closeSorting();\n    }\n  }\n  add = () => {\n    let rowList = [...this.state.rowList];\n    rowList.push(true);\n    this.setState({ rowList });\n  };\n\n  copy = (i) => {\n    let rowList = [...this.state.rowList];\n    console.log(rowList);\n  };\n\n  clearAll = () => {\n    this.setState({ rowList: [] });\n  };\n\n  remove = (i) => {\n    let rowList = [...this.state.rowList];\n    rowList.splice(i, 1);\n    this.setState({ rowList });\n  };\n\n  createColumnsArrayFromProps = (rowList) => {\n    return rowList.map((x, i) => {\n      return (\n        <div className=\"sort__bodyContent\" key={i}  >\n          <div className=\"sort__reorder\">\n            <div className=\"\">\n              <div>&nbsp;</div>\n            </div>\n            <div className=\"sort__icon\">\n              <FontAwesomeIcon icon={faAlignJustify}></FontAwesomeIcon>\n            </div>\n          </div>\n          <div className=\"sort__reorder\">\n            <div className=\"\">\n              <div>Sort by</div>\n            </div>\n            <div className=\"sort__file\">\n              <select className=\"custom__ctrl\">\n                {this.props.columnFieldValue.map((item, index) => (\n                  <option key={index}>{item}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n          <div className=\"sort__reorder\">\n            <div className=\"\">\n              <div>Sort on</div>\n            </div>\n            <div className=\"sort__file\">\n              <select className=\"custom__ctrl\">\n                <option>Value</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"sort__reorder\">\n            <div className=\"\">\n              <div>Order</div>\n            </div>\n            <div className=\"sort__file\">\n              <select className=\"custom__ctrl\">\n                <option>Ascending</option>\n                <option>Descending</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"sort__reorder\">\n            <div className=\"\">\n              <div>&nbsp;</div>\n            </div>\n            <div className=\"sort__icon\">\n              <FontAwesomeIcon\n                icon={faCopy}\n                title=\"Copy\"\n                onClick={() => this.copy(i)}\n              ></FontAwesomeIcon>\n            </div>\n          </div>\n          <div className=\"sort__reorder\">\n            <div className=\"\">\n              <div>&nbsp;</div>\n            </div>\n            <div className=\"sort__icon\">\n              <FontAwesomeIcon\n                icon={faTrash}\n                title=\"Delete\"\n                onClick={() => this.remove(i)}\n              ></FontAwesomeIcon>\n            </div>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  render() {\n    let { rowList } = this.state;\n    return (\n      <div className=\"sorts--grid\" ref={this.setWrapperRef}>\n        <div className=\"sort__grid\">\n          <div className=\"sort__settings\">\n            <div className=\"sort__header\">\n              <div className=\"sort__headerTxt\">\n                <strong>Sort </strong>\n              </div>\n              <div className=\"sort__close\">\n                <FontAwesomeIcon\n                  className=\"icon-close\" \n                  icon={faTimes}\n                  onClick={() => this.props.closeSorting()}\n                ></FontAwesomeIcon>\n              </div>\n            </div>\n            <div className=\"sort__body\">\n              {/* <DndProvider\n                backend={TouchBackend}\n                options={{ enableMouseEvents: true }}\n              >\n                <SortingList\n                  sortsArray={this.createColumnsArrayFromProps(\n                    this.state.rowList\n                  )}\n                />\n              </DndProvider> */}\n              {rowList.map((x, i) => {\n                return (\n                  <div className=\"sort__bodyContent\" key={i}>\n                    <div className=\"sort__reorder\">\n                      <div className=\"\">\n                        <div>&nbsp;</div>\n                      </div>\n                      <div className=\"sort__icon\">\n                        <FontAwesomeIcon\n                          icon={faAlignJustify}\n                        ></FontAwesomeIcon>\n                      </div>\n                    </div>\n                    <div className=\"sort__reorder\">\n                      <div className=\"\">\n                        <div>Sort by</div>\n                      </div>\n                      <div className=\"sort__file\">\n                        <select className=\"custom__ctrl\">\n                          {this.props.columnFieldValue.map((item, index) => (\n                            <option key={index}>{item}</option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"sort__reorder\">\n                      <div className=\"\">\n                        <div>Sort on</div>\n                      </div>\n                      <div className=\"sort__file\">\n                        <select className=\"custom__ctrl\">\n                          <option>Value</option>\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"sort__reorder\">\n                      <div className=\"\">\n                        <div>Order</div>\n                      </div>\n                      <div className=\"sort__file\">\n                        <select className=\"custom__ctrl\">\n                          <option>Ascending</option>\n                          <option>Descending</option>\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"sort__reorder\">\n                      <div className=\"\">\n                        <div>&nbsp;</div>\n                      </div>\n                      <div className=\"sort__icon\">\n                        <FontAwesomeIcon\n                          icon={faCopy}\n                          title=\"Copy\"\n                          onClick={() => this.copy(i)}\n                        ></FontAwesomeIcon>\n                      </div>\n                    </div>\n                    <div className=\"sort__reorder\">\n                      <div className=\"\">\n                        <div>&nbsp;</div>\n                      </div>\n                      <div className=\"sort__icon\">\n                        <FontAwesomeIcon\n                          icon={faTrash}\n                          title=\"Delete\"\n                          onClick={() => this.remove(i)}\n                        ></FontAwesomeIcon>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n              <div className=\"sort__new\">\n                <div className=\"sort__section\">\n                  <FontAwesomeIcon\n                    icon={faPlus}\n                    className=\"sort__icon\"\n                  ></FontAwesomeIcon>\n                  <div className=\"sort__txt\" onClick={() => this.add()}>\n                    New Sort\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"sort__footer\">\n              <div className=\"sort__btns\">\n                <button className=\"btns\" onClick={this.clearAll}>\n                  Clear All\n                </button>\n                <button className=\"btns btns__save\">Ok</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* <button onClick={() => this.add()}>Add New</button> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTimes,\n  faFilePdf,\n  faFileExcel,\n  faFileCsv,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\n\nlet downLaodFileType = [];\nclass ExportData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columnValueList: this.props.columnsList,\n      columnEntityList: [],\n      isAllSelected: false,\n      downLaodFileType: [],\n      filteredRow: [],\n      warning: \"\",\n      clickTag: \"none\",\n    };\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n    this.selectDownLoadType = this.selectDownLoadType.bind(this);\n    this.exportValidation = this.exportValidation.bind(this);\n  }\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      this.props.closeExport();\n    }\n  }\n\n  resetColumnExportList = () => {\n    this.setState({\n      columnEntityList: [],\n      isAllSelected: false,\n    });\n  };\n\n  selectAllToColumnList = () => {\n    this.resetColumnExportList();\n    this.setState({\n      columnEntityList: !this.state.isAllSelected ? this.props.columnsList : [],\n      isAllSelected: !this.state.isAllSelected,\n    });\n  };\n\n  addToColumnEntityList = (typeToBeAdded) => {\n    var existingColumnEntityList = this.state.columnEntityList;\n    if (!existingColumnEntityList.includes(typeToBeAdded)) {\n      existingColumnEntityList.push(typeToBeAdded);\n    } else {\n      existingColumnEntityList = existingColumnEntityList.filter((item) => {\n        return item !== typeToBeAdded \n      });\n    }\n    this.setState({\n      columnEntityList: existingColumnEntityList,\n      isAllSelected: false,\n    });\n  };\n\n  selectDownLoadType = (event) => {\n    if (\n      event.target.checked &&\n      !this.state.downLaodFileType.includes(event.target.value)\n    ) {\n      downLaodFileType.push(event.target.value);\n      this.setState({ downLaodFileType });\n    } else {\n      downLaodFileType.map(function (value, index) {\n        if (value === event.target.value) {\n          downLaodFileType = downLaodFileType.splice(index, value);\n        }\n      });\n      this.setState({ downLaodFileType });\n    }\n  };\n\n  exportRowData = () => {\n    const columnVlaueList = this.state.columnEntityList;\n    if (columnVlaueList.length > 0 && this.state.downLaodFileType.length > 0) {\n      this.props.rows.forEach((row) => {\n        const keys = Object.getOwnPropertyNames(row);\n        var filteredColumnVal = {};\n        keys.forEach(function (key) {\n          columnVlaueList.forEach((columnName) => {\n            if (columnName.key === key) filteredColumnVal[key] = row[key];\n          });\n        });\n        this.state.filteredRow.push(filteredColumnVal);\n      });\n\n      this.state.downLaodFileType.map((item) => {\n        if (item === \"pdf\") this.downloadPDF();\n        else if (item === \"excel\") this.downloadXLSFile();\n        else this.downloadCSVFile();\n      });\n    }\n  };\n\n  downloadPDF = () => {\n    const unit = \"pt\";\n    const size = \"A4\"; // Use A1, A2, A3 or A4\n    const orientation = \"landscape\"; // portrait or landscape\n\n    const marginLeft = 300;\n    const doc = new jsPDF(orientation, unit, size);\n\n    doc.setFontSize(15);\n\n    const title = \"iCargo Report\";\n    const headers = [\n      this.state.columnEntityList.map((column) => {\n        return column.name;\n      }),\n    ];\n    var dataValues = [];\n    this.props.rows.forEach((row) => {\n      const keys = Object.keys(row);\n      var filteredColumnVal = [];\n      this.state.columnEntityList.forEach((columnName) => {\n        keys.forEach((key) => {\n          if (columnName.key === key) filteredColumnVal.push(row[key]);\n        });\n      });\n      dataValues.push(filteredColumnVal);\n    });\n\n    let content = {\n      startY: 50,\n      head: headers,\n      body: dataValues,\n    };\n\n    doc.text(title, marginLeft, 40);\n    doc.autoTable(content);\n    doc.save(\"report.pdf\");\n  };\n\n  downloadCSVFile = () => {\n    const fileType =\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const fileExtension = \".csv\";\n    const fileName = \"CSVDownload\";\n    const ws = XLSX.utils.json_to_sheet(this.state.filteredRow);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"csv\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  downloadXLSFile = () => {\n    const fileType =\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const fileExtension = \".xlsx\";\n    const fileName = \"XLSXDownload\";\n    const ws = XLSX.utils.json_to_sheet(this.state.filteredRow);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  columnSearchLogic = (e) => {\n    const searchKey = String(e.target.value).toLowerCase();\n    let filteredRows = this.props.columnsList.filter((item) => {\n      return item.name.toLowerCase().includes(searchKey);\n    });\n    if (!filteredRows.length) {\n      this.setState({ columnValueList: this.props.columnsList });\n    } else {\n      this.setState({ columnValueList: filteredRows });\n    }\n  };\n\n  exportValidation = () => {\n    let columnLength = this.state.columnEntityList.length;\n    let fileLength = this.state.downLaodFileType.length;\n    if (columnLength > 0 && fileLength > 0) {\n      this.exportRowData();\n      this.setState({ clickTag: \"none\" });\n    } else if (columnLength === 0) {\n      this.setState({ warning: \"Column\" });\n      this.setState({ clickTag: \"\" });\n    } else if (fileLength === 0) {\n      this.setState({ warning: \"File Type\" });\n      this.setState({ clickTag: \"\" });\n    }\n    if (columnLength === 0 && fileLength === 0) {\n      this.setState({ warning: \"File Type & Column\" });\n      this.setState({ clickTag: \"\" });\n    }\n  };\n  render() {\n    return (\n      <div className=\"exports--grid\" ref={this.setWrapperRef}>\n        <div className=\"export__grid\">\n          <div className=\"export__chooser\">\n            <div className=\"export__header\">\n              <div className=\"\">\n                <strong>Export Data</strong>\n              </div>\n            </div>\n            <div className=\"export__body\">\n              <div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Search export\"\n                  className=\"custom__ctrl\"\n                  onChange={this.columnSearchLogic}\n                ></input>\n              </div>\n              <div className=\"export__selectAll\">\n                <div\n                  className=\"export__selectTxt\"\n                  onClick={() => this.selectAllToColumnList()}\n                >\n                  Select All\n                </div>\n              </div>\n              {this.state.columnValueList.length > 0\n                ? this.state.columnValueList.map((column, index) => {\n                    return (\n                      <div className=\"export__wrap\" key={column.key}>\n                        <div className=\"export__checkbox\">\n                          <input\n                            type=\"checkbox\"\n                            checked={this.state.columnEntityList.includes(\n                              column\n                            )}\n                            onChange={() => this.addToColumnEntityList(column)}\n                          ></input>\n                        </div>\n                        <div className=\"export__txt\">{column.name}</div>\n                      </div>\n                    );\n                  })\n                : \"\"}\n            </div>\n          </div>\n          <div className=\"export__settings\">\n            <div className=\"export__header\">\n              <div className=\"export__headerTxt\"></div>\n              <div className=\"export__close\">\n                <FontAwesomeIcon icon={faTimes} className=\"icon-close\" onClick={this.props.closeExport}></FontAwesomeIcon>\n              </div>\n            </div>\n            <div className=\"export__as\">Export as</div>\n            <div className=\"export__body\">\n              <div className=\"export__reorder\">\n                <div className=\"\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"pdf\"\n                    value=\"pdf\"\n                    onChange={this.selectDownLoadType}\n                  ></input>\n                </div>\n                <div className=\"export__file\">\n                  <FontAwesomeIcon\n                    icon={faFilePdf}\n                    className=\"temp\"\n                  ></FontAwesomeIcon>\n                </div>\n              </div>\n              <div className=\"export__reorder\">\n                <div className=\"\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"excel\"\n                    value=\"excel\"\n                    onChange={this.selectDownLoadType}\n                  ></input>\n                </div>\n                <div className=\"export__file\">\n                  <FontAwesomeIcon\n                    icon={faFileExcel}\n                    className=\"temp\"\n                  ></FontAwesomeIcon>\n                </div>\n              </div>\n              <div className=\"export__reorder\">\n                <div className=\"\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"csv\"\n                    value=\"csv\"\n                    onChange={this.selectDownLoadType}\n                  ></input>\n                </div>\n                <div className=\"export__file\">\n                  <FontAwesomeIcon\n                    icon={faFileCsv}\n                    className=\"temp\"\n                  ></FontAwesomeIcon>\n                </div>\n              </div>\n              <div className=\"exportWarning\">\n                <span\n                  style={{ display: this.state.clickTag }}\n                  className=\"alert alert-danger\"\n                >\n                  You haven't selected <strong>{this.state.warning}</strong>\n                </span>\n              </div>\n            </div>\n            <div className=\"export__footer\">\n              <div className=\"export__btns\">\n                <button\n                  className=\"btns\"\n                  onClick={() => this.props.closeExport()}\n                >\n                  Cancel\n                </button>\n                <button\n                  className=\"btns btns__save\"\n                  onClick={(e) => {\n                    this.exportValidation();\n                  }}\n                >\n                  Export\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ExportData;\n","import React, { Component } from \"react\";\nimport ExtDataGrid from \"./common/extDataGrid\";\nimport { Toolbar, Data, Filters, Editors } from \"react-data-grid-addons\";\nimport { range } from \"lodash\";\nimport { applyFormula } from \"./utilities/utils\";\nimport { FormControl } from \"react-bootstrap\";\nimport DatePicker from \"./functions/DatePicker.js\";\n//import {onRowsSelected} from \"../components/functions/OnRowsSelected.js\"\nimport {\n  faSortAmountDown,\n  faColumns,\n  // faSyncAlt,\n  faShareAlt,\n  // faAlignLeft,\n  // faFilter,\n  faSortDown,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ErrorMessage from \"./common/ErrorMessage\";\nimport ColumnReordering from \"./overlays/column_chooser/Chooser\";\nimport Sorting from \"./overlays/sorting/Sorting\";\nimport ExportData from \"./overlays/export_data/ExportData\";\n\nconst {\n  DraggableHeader: { DraggableContainer },\n} = require(\"react-data-grid-addons\");\n\nconst { DropDownEditor } = Editors;\n\nconst defaultParsePaste = (str) => str.split(/\\r\\n|\\n|\\r/).map((row) => row.split(\"\\t\"));\n\n// let newFilters = {};\n\nconst selectors = Data.Selectors;\n\nconst { AutoCompleteFilter, NumericFilter } = Filters;\nclass spreadsheet extends Component {\n  constructor(props) {\n    super(props);\n    const airportCodes = [];\n    this.props.airportCodes.forEach((item) => {\n      airportCodes.push({ id: item, value: item });\n    });\n    this.state = {\n      height: 680,\n      displayNoRows: \"none\",\n      searchIconDisplay: \"\",\n      searchValue: \"\",\n      filter: {},\n      rows: this.props.rows,\n      selectedIndexes: [],\n      junk: {},\n      topLeft: {},\n      columnReorderingComponent: null,\n      exportComponent: null,\n      filteringRows: this.props.rows,\n      tempRows: this.props.rows,\n      sortingPanelComponent: null,\n      count: this.props.rows.length,\n      columns: this.props.columns.map((item) => {\n        if (item.editor === \"DatePicker\") {\n          item.editor = DatePicker;\n        } else if (item.editor === \"DropDown\") {\n          item.editor = <DropDownEditor options={airportCodes} />;\n        } else if (item.editor === \"Text\") {\n          item.editor = \"text\";\n        } else {\n          item.editor = null;\n        }\n        if (item.name === \"Flight Model\") {\n          item.filterRenderer = NumericFilter;\n        }\n        else {\n          item.filterRenderer = AutoCompleteFilter;\n        }\n        return item;\n      }),\n    };\n    document.addEventListener(\"copy\", this.handleCopy);\n    document.addEventListener(\"paste\", this.handlePaste);\n    this.handleSearchValue = this.handleSearchValue.bind(this);\n    this.clearSearchValue = this.clearSearchValue.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n\n    this.formulaAppliedCols = this.props.columns.filter((item) => {\n      return item.formulaApplicable;\n    });\n  }\n\n  updateRows = (startIdx, newRows) => {\n    this.setState((state) => {\n      const rows = state.rows.slice();\n      for (let i = 0; i < newRows.length; i++) {\n        if (startIdx + i < rows.length) {\n          rows[startIdx + i] = {\n            ...rows[startIdx + i],\n            ...newRows[i],\n          };\n        }\n      }\n      return {\n        rows,\n      };\n    });\n  }\n\n  rowGetter = (i) => {\n    const { rows } = this.state;\n    return rows[i];\n  };\n\n  handleCopy = (e) => {\n    e.preventDefault();\n    const { topLeft, botRight } = this.state;\n    const text = range(topLeft.rowIdx, botRight.rowIdx + 1)\n      .map((rowIdx) =>\n        this.state.columns\n          .slice(topLeft.colIdx - 1, botRight.colIdx)\n          .map((col) => this.rowGetter(rowIdx)[col.key])\n          .join(\"\\t\")\n      )\n      .join(\"\\n\");\n    e.clipboardData.setData(\"text/plain\", text);\n  };\n\n  handlePaste = (e) => {\n    e.preventDefault();\n    const { topLeft } = this.state;\n    const newRows = [];\n    const pasteData = defaultParsePaste(e.clipboardData.getData(\"text/plain\"));\n    pasteData.forEach((row) => {\n      const rowData = {};\n      // Merge the values from pasting and the keys from the columns\n      this.state.columns.slice(topLeft.colIdx - 1, topLeft.colIdx - 1 + row.length).forEach((col, j) => {\n        rowData[col.key] = row[j];\n      });\n      newRows.push(rowData);\n    });\n    this.updateRows(topLeft.rowIdx, newRows);\n  };\n\n  setSelection = (args) => {\n    this.setState({\n      topLeft: {\n        rowIdx: args.topLeft.rowIdx,\n        colIdx: args.topLeft.idx,\n      },\n      botRight: {\n        rowIdx: args.bottomRight.rowIdx,\n        colIdx: args.bottomRight.idx,\n      },\n    });\n  };\n\n  sortRows = (data, sortColumn, sortDirection) => {\n    const comparer = (a, b) => {\n      if (sortDirection === \"ASC\") {\n        return a[sortColumn] > b[sortColumn] ? 1 : -1;\n      } else if (sortDirection === \"DESC\") {\n        return a[sortColumn] < b[sortColumn] ? 1 : -1;\n      }\n    };\n    this.setState({\n      rows: [...this.state.rows].sort(comparer),\n    });\n    return sortDirection === \"NONE\" ? data : this.state.rows;\n  };\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      rows: props.rows,\n    });\n    this.setState({\n      status: props.status,\n    });\n    this.setState({\n      textValue: props.textValue,\n    });\n    this.setState({ count: props.count });\n  }\n\n  /**\n * Method To update the cell/cells with the edited values\n * @param {*} fromRow is the row from which this edit is performed\n * @param {*} toRow is the row upto which this edit is performed\n * @param {*} updated is the value of change\n * @param {*} action is type of edit action performed\n */\n  onGridRowsUpdated = ({ fromRow, toRow, updated, action }) => {\n    let columnName = \"\";\n    const filter = this.formulaAppliedCols.filter((item) => {\n      if (updated[item.key] !== null && updated[item.key] !== undefined) {\n        columnName = item.key;\n        return true;\n      } else return false;\n    });\n\n    if (filter.length > 0) {\n      updated = applyFormula(updated, columnName);\n    }\n\n    if (action !== \"COPY_PASTE\") {\n      this.setState((state) => {\n        const rows = state.rows.slice();\n        for (let i = fromRow; i <= toRow; i++) {\n          rows[i] = {\n            ...rows[i],\n            ...updated,\n          };\n        }\n\n        return {\n          rows,\n        };\n      });\n      this.setState((state) => {\n        const filteringRows = state.filteringRows.slice();\n        for (let i = fromRow; i <= toRow; i++) {\n          filteringRows[i] = {\n            ...filteringRows[i],\n            ...updated,\n          };\n        }\n\n        return {\n          filteringRows,\n        };\n      });\n      this.setState((state) => {\n        const tempRows = state.tempRows.slice();\n        for (let i = fromRow; i <= toRow; i++) {\n          tempRows[i] = {\n            ...tempRows[i],\n            ...updated,\n          };\n        }\n\n        return {\n          tempRows,\n        };\n      });\n    }\n    if (this.props.updateCellData) {\n      this.props.updateCellData(this.state.tempRows[fromRow], this.state.tempRows[toRow], updated, action);\n    }\n  };\n\t/**\n\t * Method To bulk/individual select of rows\n\t * @param {*} rows is the selected row\n\t */\n  onRowsSelected = (rows) => {\n    this.setState({\n      selectedIndexes: this.state.selectedIndexes.concat(rows.map((r) => r.rowIdx)),\n    });\n    if (this.props.selectBulkData) {\n      this.props.selectBulkData(rows);\n    }\n  };\n\t/**\n\t * Method To bulk/individual deselect of rows\n\t * @param {*} rows is the deselected row\n\t */\n  onRowsDeselected = (rows) => {\n    let rowIndexes = rows.map((r) => r.rowIdx);\n    this.setState({\n      selectedIndexes: this.state.selectedIndexes.filter((i) => rowIndexes.indexOf(i) === -1),\n    });\n  };\n\n\t/**\n\t * Method To filter the multiple columns\n\t * @param {*} value is the  incoming filtering event\n\t */\n  handleFilterChange = (value) => {\n    let junk = this.state.junk;\n    if (!(value.filterTerm == null) && !(value.filterTerm.length <= 0)) {\n      junk[value.column.key] = value;\n    } else {\n      delete junk[value.column.key];\n    }\n    this.setState({ junk });\n    const data = this.getrows(this.state.filteringRows, this.state.junk);\n    this.setState({\n      rows: data,\n      tempRows: data,\n      count: data.length,\n    });\n    if (data.length === 0) {\n      this.props.handleWarningStatus();\n    }\n    else{\n      this.props.closeWarningStatus();\n    }\n  };\n  getrows = (rows, filters) => {\n    if (Object.keys(filters).length <= 0) {\n      filters = {};\n    }\n    selectors.getRows({ rows: [], filters: {} });\n    return selectors.getRows({ rows: rows, filters: filters });\n  };\n\n  /**\n * Method To render the filter values for filtering rows\n * @param {*} rows is the row data to be considered for filtering\n * @param {*} columnId is the specific columnId for which the row datas are being considered\n */\n  getValidFilterValues(rows, columnId) {\n    return rows\n      .map((r) => r[columnId])\n      .filter((item, i, a) => {\n        return i === a.indexOf(item);\n      });\n  }\n  /**\n* Method To sort the rows for a particular column\n* @param {*} data is the row datas to be considered for sorting\n* @param {*} sortColumn is the specific column for which the row sort is being triggered\n* @param {*} sortDirection is the type of sort\n*/\n  sortRows = (data, sortColumn, sortDirection) => {\n    const comparer = (a, b) => {\n      if (sortDirection === \"ASC\") {\n        return a[sortColumn] > b[sortColumn] ? 1 : -1;\n      } else if (sortDirection === \"DESC\") {\n        return a[sortColumn] < b[sortColumn] ? 1 : -1;\n      }\n    };\n    this.setState({\n      rows: [...data].sort(comparer),\n    });\n    return sortDirection === \"NONE\" ? data : this.state.rows;\n  };\n  /**\n     * Method To swap the columns\n     * @param {*} source is source column\n     * @param {*} target is the target column \n     */\n  onHeaderDrop = (source, target) => {\n    const stateCopy = Object.assign({}, this.state);\n    const columnSourceIndex = this.state.columns.findIndex((i) => i.key === source);\n    const columnTargetIndex = this.state.columns.findIndex((i) => i.key === target);\n\n    stateCopy.columns.splice(columnTargetIndex, 0, stateCopy.columns.splice(columnSourceIndex, 1)[0]);\n\n    const emptyColumns = Object.assign({}, this.state, {\n      columns: [],\n    });\n    this.setState(emptyColumns);\n\n    const reorderedColumns = Object.assign({}, this.state, {\n      columns: stateCopy.columns,\n    });\n    this.setState(reorderedColumns);\n  };\n  updateTableAsPerRowChooser = (inComingColumnsHeaderList, pinnedColumnsList) => {\n    var existingColumnsHeaderList = this.props.columns;\n    existingColumnsHeaderList = existingColumnsHeaderList.filter((item) => {\n      return inComingColumnsHeaderList.includes(item.name);\n    });\n\n    var rePositionedArray = existingColumnsHeaderList;\n    var singleHeaderOneList;\n    if (pinnedColumnsList.length > 0) {\n      pinnedColumnsList\n        .slice(0)\n        .reverse()\n        .map((item, index) => {\n          singleHeaderOneList = existingColumnsHeaderList.filter((subItem) => item === subItem.name);\n          rePositionedArray = this.array_move(\n            existingColumnsHeaderList,\n            existingColumnsHeaderList.indexOf(singleHeaderOneList[0]),\n            index\n          );\n        });\n    }\n\n    existingColumnsHeaderList = rePositionedArray;\n\t\t/**\n       making all the frozen attribute as false for all the columns and then \n       setting items of pinnedColumnsList as frozen = true\n       */\n    existingColumnsHeaderList.map((headerItem, index) => {\n      if (headerItem.frozen !== undefined && headerItem.frozen === true) {\n        existingColumnsHeaderList[index][\"frozen\"] = false;\n      }\n      if (pinnedColumnsList.includes(headerItem.name)) {\n        existingColumnsHeaderList[index][\"frozen\"] = true;\n      }\n    });\n\n    console.log(\"existingColumnsHeaderList \", existingColumnsHeaderList);\n\n    this.setState({\n      columns: existingColumnsHeaderList,\n    });\n\n    this.closeColumnReOrdering();\n  };\n\n\t/**\n\t * Method To re-position a particular object in an Array from old_index to new_index\n\t * @param {*} arr inComing array\n\t * @param {*} old_index initial index\n\t * @param {*} new_index final index\n\t */\n  array_move = (arr, old_index, new_index) => {\n    if (new_index >= arr.length) {\n      var k = new_index - arr.length + 1;\n      while (k--) {\n        arr.push(undefined);\n      }\n    }\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n    return arr;\n  };\n\n\t/**\n\t * Method to render the column Selector Pannel\n\t */\n  columnReorderingPannel = () => {\n    var headerNameList = [];\n    var existingPinnedHeadersList = [];\n    this.state.columns\n      .filter((item) => item.frozen !== undefined && item.frozen === true)\n      .map((item) => existingPinnedHeadersList.push(item.name));\n    this.state.columns.map((item) => headerNameList.push(item.name));\n    this.setState({\n      columnReorderingComponent: (\n        <ColumnReordering\n          maxLeftPinnedColumn={this.props.maxLeftPinnedColumn}\n          updateTableAsPerRowChooser={this.updateTableAsPerRowChooser}\n          headerKeys={headerNameList}\n          closeColumnReOrdering={this.closeColumnReOrdering}\n          existingPinnedHeadersList={existingPinnedHeadersList}\n          {...this.props}\n        />\n      ),\n    });\n  };\n\n\t/**\n\t * Method to stop the render the column Selector Pannel\n\t */\n  closeColumnReOrdering = () => {\n    this.setState({\n      columnReorderingComponent: null,\n    });\n  };\n  handleSearchValue = (value) => {\n\n    this.setState({ searchValue: value });\n  };\n  clearSearchValue = () => {\n    this.setState({ searchValue: \"\" });\n    this.setState({filteringRows:this.state.filteringRows})\n  };\n\n  sortingPanel = () => {\n    let columnField = [];\n    this.state.columns.map((item) => columnField.push(item.name));\n    this.setState({\n      sortingPanelComponent: <Sorting columnFieldValue={columnField} closeSorting={this.closeSorting} />,\n    });\n  };\n\n  closeSorting = () => {\n    this.setState({\n      sortingPanelComponent: null,\n    });\n  };\n\n  //Export Data Logic\n  exportColumnData = () => {\n    this.setState({\n      exportComponent: (\n        <ExportData rows={this.state.rows} columnsList={this.state.columns} closeExport={this.closeExport} />\n      ),\n    });\n  };\n\n  closeExport = () => {\n    this.setState({\n      exportComponent: null,\n    });\n  };\n  \n  render() {\n    return (\n      <div>\n        <div className='parentDiv'>\n          <div className='totalCount'>\n            Showing <strong> {this.state.count} </strong> records\n\t\t\t\t\t</div>\n          <div className='globalSearch'>\n            <i className=\"fa fa-search\"></i>\n            <FormControl\n              className=\"globalSeachInput\"\n              type='text'\n              placeholder=\"Search\"\n              onChange={(e) => {\n                this.handleSearchValue(e.target.value);\n                this.props.globalSearchLogic(e, this.state.tempRows);\n              }}\n              value={this.state.searchValue}\n            />\n          </div>\n          {/* <div className=\"filterIcons\">\n            <FontAwesomeIcon icon={faFilter} />\n          </div> */}\n          <div className='filterIcons' onClick={this.sortingPanel}>\n            <FontAwesomeIcon title='Group Sort' icon={faSortAmountDown} />\n            <FontAwesomeIcon icon={faSortDown} className='filterArrow' />\n          </div>\n          {this.state.sortingPanelComponent}\n          <div className='filterIcons' onClick={this.columnReorderingPannel}>\n            <FontAwesomeIcon title='Column Chooser' icon={faColumns} />\n            <FontAwesomeIcon icon={faSortDown} className='filterArrow' />\n          </div>\n          {this.state.columnReorderingComponent}\n          <div className='filterIcons'>\n            <FontAwesomeIcon title='Export' icon={faShareAlt} onClick={this.exportColumnData} />\n          </div>\n          {this.state.exportComponent}\n          {/* <div className=\"filterIcons\">\n            <FontAwesomeIcon title=\"Reload\" icon={faSyncAlt} />\n          </div> */}\n          {/* <div className=\"filterIcons\">\n            <FontAwesomeIcon icon={faAlignLeft} />\n          </div> */}\n        </div>\n        <ErrorMessage\n          className='errorDiv'\n          status={this.props.status}\n          closeWarningStatus={this.props.closeWarningStatus}\n          clearSearchValue={this.clearSearchValue}\n        />\n        <DraggableContainer className='gridDiv' onHeaderDrop={this.onHeaderDrop}>\n          <ExtDataGrid\n            toolbar={<Toolbar enableFilter={true} />}\n            getValidFilterValues={(columnKey) => this.getValidFilterValues(this.state.filteringRows, columnKey)}\n            minHeight={this.state.height}\n            columns={this.state.columns}\n            rowGetter={(i) => this.state.rows[i]}\n            rowsCount={this.state.rows.length}\n            onGridRowsUpdated={this.onGridRowsUpdated}\n            enableCellSelect={true}\n            onClearFilters={() => {\n              this.setState({ junk: {} });\n            }}\n            onColumnResize={(idx, width) => console.log(`Column ${idx} has been resized to ${width}`)}\n            onAddFilter={(filter) => this.handleFilterChange(filter)}\n            rowSelection={{\n              showCheckbox: true,\n              enableShiftSelect: true,\n              onRowsSelected: this.onRowsSelected,\n              onRowsDeselected: this.onRowsDeselected,\n              selectBy: {\n                indexes: this.state.selectedIndexes,\n              },\n            }}\n            onGridSort={(sortColumn, sortDirection) => this.sortRows(this.state.rows, sortColumn, sortDirection)}\n          //**************************/\n          //--Todo-- This is commented aspart of fixing column filtering \n          // cellRangeSelection={{\n          //   onComplete: this.setSelection,\n          // }}\n          //***********************/\n          />\n        </DraggableContainer>\n      </div>\n    );\n  }\n}\nexport default spreadsheet;\n"],"names":["ExtDataGrid","componentDidMount","_mounted","dataGridComponent","document","getElementsByClassName","window","addEventListener","metricsUpdated","props","cellRangeSelection","onWindowMouseUp","componentWillUnmount","removeEventListener","ReactDataGrid","applyFormula","obj","columnName","item","toString","charAt","operation","split","value","substring","length","reduce","a","b","Number","Math","min","apply","max","console","log","DatePicker","state","Date","input","getInputNode","bind","getValue","onValueChanged","updated","date","dateTimeFormat","Intl","DateTimeFormat","year","month","day","formatToParts","column","key","ev","setState","target","render","React","ref","Component","SEARCH_NOT_FOUNT_ERROR","ErrorMessage","useState","status","setStatus","useEffect","FontAwesomeIcon","faTimes","e","closeWarningStatus","clearSearchValue","ItemTypes","COLUMN","style","cursor","ColumnItem","id","text","moveColumn","findColumn","originalIndex","index","useDrag","type","collect","monitor","isDragging","end","dropResult","getItem","droppedId","didDrop","drag","useDrop","accept","canDrop","hover","draggedId","overIndex","drop","opacity","node","ColumnsList","columnsArray","columns","setColumns","atIndex","update","$splice","filter","c","indexOf","display","flexWrap","map","ColumnReordering","resetColumnReorderList","columnReorderEntityList","isAllSelected","selectAllToColumnReOrderList","name","addToColumnReorderEntityList","typeToBeAdded","existingColumnReorderEntityList","existingLeftPinnedList","leftPinnedColumList","includes","push","filterColumnReorderList","searchKey","String","toLowerCase","existingList","filtererdColumnReorderList","columnSelectList","createColumnsArrayFromProps","colsList","faAlignJustify","maxLeftPinnedColumn","reArrangeLeftPinnedColumn","columHeaderName","unshift","subItem","headerKeys","existingPinnedHeadersList","setWrapperRef","handleClickOutside","wrapperRef","event","contains","closeColumnReOrdering","color","DndProvider","TouchBackend","enableMouseEvents","updateTableAsPerRowChooser","App","add","rowList","copy","i","clearAll","remove","splice","x","columnFieldValue","faCopy","faTrash","closeSorting","faPlus","downLaodFileType","ExportData","resetColumnExportList","columnEntityList","selectAllToColumnList","columnsList","addToColumnEntityList","existingColumnEntityList","selectDownLoadType","checked","exportRowData","columnVlaueList","rows","forEach","row","keys","Object","getOwnPropertyNames","filteredColumnVal","filteredRow","downloadPDF","downloadXLSFile","downloadCSVFile","unit","size","orientation","marginLeft","doc","jsPDF","setFontSize","title","headers","dataValues","content","startY","head","body","autoTable","save","fileType","fileExtension","fileName","ws","XLSX","json_to_sheet","wb","Sheets","data","SheetNames","excelBuffer","bookType","Blob","FileSaver","columnSearchLogic","filteredRows","columnValueList","exportValidation","columnLength","fileLength","clickTag","warning","closeExport","faFilePdf","faFileExcel","faFileCsv","require","DraggableContainer","DraggableHeader","DropDownEditor","Editors","defaultParsePaste","str","selectors","Data","Selectors","AutoCompleteFilter","Filters","NumericFilter","spreadsheet","updateRows","startIdx","newRows","slice","rowGetter","handleCopy","preventDefault","topLeft","botRight","range","rowIdx","colIdx","col","join","clipboardData","setData","handlePaste","pasteData","getData","rowData","j","setSelection","args","idx","bottomRight","sortRows","sortColumn","sortDirection","comparer","sort","onGridRowsUpdated","fromRow","toRow","action","formulaAppliedCols","undefined","filteringRows","tempRows","updateCellData","onRowsSelected","selectedIndexes","concat","r","selectBulkData","onRowsDeselected","rowIndexes","handleFilterChange","junk","filterTerm","getrows","count","handleWarningStatus","filters","getRows","onHeaderDrop","source","stateCopy","assign","columnSourceIndex","findIndex","columnTargetIndex","emptyColumns","reorderedColumns","inComingColumnsHeaderList","pinnedColumnsList","existingColumnsHeaderList","rePositionedArray","singleHeaderOneList","reverse","array_move","headerItem","frozen","arr","old_index","new_index","k","columnReorderingPannel","headerNameList","columnReorderingComponent","handleSearchValue","searchValue","sortingPanel","columnField","sortingPanelComponent","Sorting","exportColumnData","exportComponent","airportCodes","height","displayNoRows","searchIconDisplay","editor","filterRenderer","formulaApplicable","componentWillReceiveProps","textValue","getValidFilterValues","columnId","FormControl","globalSearchLogic","faSortAmountDown","faSortDown","faColumns","faShareAlt","Toolbar","columnKey","width","showCheckbox","enableShiftSelect","selectBy","indexes"],"mappings":"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"}