{"version":3,"file":"index.modern.js","sources":["../src/common/extDataGrid.js","../src/utilities/utils.js","../src/functions/DatePicker.js","../src/common/ErrorConstants.js","../src/common/ErrorMessage.js","../src/overlays/column_chooser/ItemTypes.js","../src/overlays/column_chooser/columnItem.js","../src/overlays/column_chooser/columnsList.js","../src/overlays/column_chooser/Chooser.js","../src/overlays/sorting/ItemTypes.js","../src/overlays/sorting/SortItem.js","../src/overlays/sorting/SortingList.js","../src/overlays/sorting/Sorting.js","../src/overlays/export_data/ExportData.js","../src/index.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport { Toolbar, Data, Filters } from \"react-data-grid-addons\";\r\n\r\nclass ExtDataGrid extends ReactDataGrid {\r\n  componentDidMount() {\r\n    this._mounted = true;\r\n    this.dataGridComponent = document.getElementsByClassName(\r\n      \"react-grid-Container\"\r\n    )[0]; //assumes only one react datagrid component exists\r\n    window.addEventListener(\"resize\", this.metricsUpdated);\r\n    if (this.props.cellRangeSelection) {\r\n      this.dataGridComponent.addEventListener(\"mouseup\", this.onWindowMouseUp);\r\n    }\r\n    this.metricsUpdated();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._mounted = false;\r\n    window.removeEventListener(\"resize\", this.metricsUpdated);\r\n    this.dataGridComponent.removeEventListener(\"mouseup\", this.onWindowMouseUp);\r\n  }\r\n}\r\n\r\nexport default ExtDataGrid;\r\n","export const applyFormula = (obj, columnName) => {\r\n  let item = obj[columnName].toString();\r\n  if (item && item.charAt(0) === \"=\") {\r\n    var operation = item.split(\"(\");\r\n    var value = operation[1]\r\n      .substring(0, operation[1].length - 1)\r\n      .split(/[,:]/);\r\n    switch (operation[0]) {\r\n      case \"=SUM\":\r\n      case \"=ADD\":\r\n      case \"=sum\":\r\n      case \"=add\":\r\n        obj[columnName] = value.reduce(function (a, b) {\r\n          return Number(a) + Number(b);\r\n        });\r\n        break;\r\n      case \"=MUL\":\r\n      case \"=mul\":\r\n        obj[columnName] = value.reduce(function (a, b) {\r\n          return Number(a) * Number(b);\r\n        });\r\n        break;\r\n      case \"=SUB\":\r\n      case \"=sub\":\r\n      case \"=DIFF\":\r\n      case \"=diff\":\r\n        obj[columnName] = value.reduce(function (a, b) {\r\n          return Number(a) - Number(b);\r\n        });\r\n        break;\r\n      case \"=min\":\r\n      case \"=MIN\":\r\n        obj[columnName] = Math.min.apply(Math, value);\r\n        break;\r\n      case \"=max\":\r\n      case \"=MAX\":\r\n        obj[columnName] = Math.max.apply(Math, value);\r\n        break;\r\n      default:\r\n        console.log(\"No Calculation\");\r\n    }\r\n  }\r\n  return obj;\r\n};","import React from 'react';\r\n\r\nexport default class DatePicker extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: new Date(),\r\n      };\r\n      //the variable to store component reference\r\n      this.input = null;\r\n  \r\n      this.getInputNode = this.getInputNode.bind(this);\r\n      this.getValue = this.getValue.bind(this);\r\n      this.onValueChanged = this.onValueChanged.bind(this);\r\n    }\r\n  \r\n    //returning the component with the reference, input\r\n    getInputNode() {\r\n      return this.input;\r\n    }\r\n    //returning updated object with the date value in the required format\r\n    getValue() {\r\n      var updated = {};\r\n      let date;\r\n      date = new Date(this.state.value);\r\n      const dateTimeFormat = new Intl.DateTimeFormat(\"en-US\", { year: \"numeric\", month: \"short\", day: \"2-digit\" });\r\n      const [{ value: month }, , { value: day }, , { value: year }] = dateTimeFormat.formatToParts(date);\r\n      updated[this.props.column.key] = `${day}-${month}-${year}`;\r\n      return updated;\r\n  \r\n    }\r\n  \r\n    onValueChanged(ev) {\r\n      this.setState({ value: ev.target.value });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <input\r\n            type=\"date\"\r\n            ref={(ref) => {\r\n              this.input = ref;\r\n            }}\r\n            value={this.state.value}\r\n            onChange={this.onValueChanged}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }","export const SEARCH_NOT_FOUNT_ERROR = \"No Records Found!\";\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { SEARCH_NOT_FOUNT_ERROR } from \"./ErrorConstants\";\r\n\r\nconst ErrorMessage = (props) => {\r\n\r\n  const [status, setStatus] = useState(props.status);\r\n  useEffect(\r\n    () => {\r\n      setStatus(props.status)\r\n    }\r\n    , [props.status]);\r\n  if (status === \"invalid\") {\r\n    return (\r\n      <div id=\"errorMsg\">\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          {SEARCH_NOT_FOUNT_ERROR}\r\n        </div>\r\n        <div className=\"notification-close\" >\r\n          <FontAwesomeIcon icon={faTimes}\r\n            onClick={(e) => {\r\n              props.closeWarningStatus();\r\n              props.clearSearchValue();\r\n            }} />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else return <div></div>;\r\n};\r\nexport default ErrorMessage;\r\n","export const ItemTypes = {\r\n    COLUMN: \"column\"\r\n};\r\n","import React from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\n\r\nconst style = {\r\n\tcursor: \"move\",\r\n};\r\n\r\nconst ColumnItem = ({ id, text, moveColumn, findColumn }) => {\r\n\tconst originalIndex = findColumn(id).index;\r\n\r\n\tconst [{ isDragging }, drag] = useDrag({\r\n\t\titem: { type: ItemTypes.COLUMN, id, originalIndex },\r\n\t\tcollect: (monitor) => ({\r\n\t\t\tisDragging: monitor.isDragging(),\r\n\t\t}),\r\n\t\tend: (dropResult, monitor) => {\r\n\t\t\tconst { id: droppedId, originalIndex } = monitor.getItem();\r\n\t\t\tconst didDrop = monitor.didDrop();\r\n\t\t\tif (!didDrop) {\r\n\t\t\t\tmoveColumn(droppedId, originalIndex);\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n\r\n\tconst [, drop] = useDrop({\r\n\t\taccept: ItemTypes.COLUMN,\r\n\t\tcanDrop: () => false,\r\n\t\thover({ id: draggedId }) {\r\n\t\t\tif (draggedId !== id) {\r\n\t\t\t\tconst { index: overIndex } = findColumn(id);\r\n\t\t\t\tmoveColumn(draggedId, overIndex);\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n\r\n\tconst opacity = isDragging ? 0.1 : 1;\r\n\r\n\treturn (\r\n\t\t<div ref={(node) => drag(drop(node))} style={{ ...style, opacity }}>\r\n\t\t\t{text}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ColumnItem;\r\n","import React, { useState } from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport update from \"immutability-helper\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\nimport ColumnItem from \"./columnItem\";\r\n\r\nconst ColumnsList = (props) => {\r\n\tconst [columns, setColumns] = useState([...props.columnsArray]);\r\n\r\n\tconst moveColumn = (id, atIndex) => {\r\n\t\tconst { column, index } = findColumn(id);\r\n\t\tsetColumns(\r\n\t\t\tupdate(columns, {\r\n\t\t\t\t$splice: [\r\n\t\t\t\t\t[index, 1],\r\n\t\t\t\t\t[atIndex, 0, column],\r\n\t\t\t\t],\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst findColumn = (id) => {\r\n\t\tconst column = columns.filter((c) => `${c.id}` === id)[0];\r\n\t\treturn {\r\n\t\t\tcolumn,\r\n\t\t\tindex: columns.indexOf(column),\r\n\t\t};\r\n\t};\r\n\r\n\tconst [, drop] = useDrop({ accept: ItemTypes.COLUMN });\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetColumns(props.columnsArray);\r\n\t}, [props.columnsArray]);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div ref={drop} style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n\t\t\t\t{columns.map((column) => (\r\n\t\t\t\t\t<ColumnItem\r\n\t\t\t\t\t\tkey={column.id}\r\n\t\t\t\t\t\tid={`${column.id}`}\r\n\t\t\t\t\t\ttext={column.text}\r\n\t\t\t\t\t\tmoveColumn={moveColumn}\r\n\t\t\t\t\t\tfindColumn={findColumn}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default ColumnsList;\r\n","import React from \"react\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { TouchBackend } from \"react-dnd-touch-backend\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faAlignJustify } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ColumnsList from \"./columnsList\";\r\n\r\nclass ColumnReordering extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columnReorderEntityList: this.props.headerKeys,\r\n      columnSelectList: this.props.headerKeys,\r\n      leftPinnedColumList: this.props.existingPinnedHeadersList,\r\n      isAllSelected: false,\r\n      maxLeftPinnedColumn: this.props.maxLeftPinnedColumn,\r\n    };\r\n    this.setWrapperRef = this.setWrapperRef.bind(this);\r\n    this.handleClickOutside = this.handleClickOutside.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n\r\n  setWrapperRef(node) {\r\n    this.wrapperRef = node;\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n      this.props.closeColumnReOrdering()\r\n    }\r\n  }\r\n\r\n\t/**\r\n\t * Method to reset the coloumn list onClick of Reset button\r\n\t */\r\n\tresetColumnReorderList = () => {\r\n\t\tthis.setState({\r\n\t\t\tcolumnReorderEntityList: [],\r\n\t\t\tisAllSelected: false,\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Method to Select all options in the coloumn list onClick of Select All button\r\n\t */\r\n\tselectAllToColumnReOrderList = () => {\r\n\t\tthis.resetColumnReorderList();\r\n\t\tthis.setState({\r\n\t\t\tcolumnReorderEntityList: this.props.columns.map(item=> item.name),\r\n\t\t\tisAllSelected: true,\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Method To add a column to columnReorderEntityList when selected.\r\n\t * @param {String} typeToBeAdded \r\n\t */\r\n\taddToColumnReorderEntityList = (typeToBeAdded) => {\r\n\t\tvar existingColumnReorderEntityList = this.state.columnReorderEntityList;\r\n\t\tvar existingLeftPinnedList = this.state.leftPinnedColumList;\r\n\t\tif (!existingColumnReorderEntityList.includes(typeToBeAdded)) {\r\n\t\t\texistingColumnReorderEntityList.push(typeToBeAdded);\r\n\t\t} else {\r\n\t\t\texistingColumnReorderEntityList = existingColumnReorderEntityList.filter((item) => {\r\n\t\t\t\tif (item !== typeToBeAdded) return item;\r\n\t\t\t});\r\n\t\t\tif (existingLeftPinnedList.includes(typeToBeAdded)) {\r\n\t\t\t\texistingLeftPinnedList = existingLeftPinnedList.filter((item) => item !== typeToBeAdded);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tcolumnReorderEntityList: existingColumnReorderEntityList,\r\n\t\t\tisAllSelected: false,\r\n\t\t\tleftPinnedColumList: existingLeftPinnedList,\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Method to handle the like-search on key stroke.\r\n\t * @param {Event} e \r\n\t */\r\n\tfilterColumnReorderList = (e) => {\r\n\t\tvar searchKey = String(e.target.value).toLowerCase();\r\n\t\tvar existingList = this.props.columns.map(item=> item.name);\r\n\t\tlet filtererdColumnReorderList = [];\r\n\t\tif (searchKey.length > 0) {\r\n\t\t\tfiltererdColumnReorderList = existingList.filter((item) => {\r\n\t\t\t\treturn item.toLowerCase().includes(searchKey);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tfiltererdColumnReorderList = this.props.columns.map(item=> item.name);\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tcolumnSelectList: filtererdColumnReorderList,\r\n\t\t});\r\n\t};\r\n\r\n\tcreateColumnsArrayFromProps = (colsList) => {\r\n\t\treturn colsList.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: item,\r\n\t\t\t\ttext: (\r\n\t\t\t\t\t<div className='column__reorder' key={item}>\r\n\t\t\t\t\t\t<div className=''>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faAlignJustify}></FontAwesomeIcon>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='column__reorder__name'>{item}</div>\r\n\t\t\t\t\t\t<div className='column__wrap'>\r\n\t\t\t\t\t\t\t<div className='column__checkbox'>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\tchecked={this.state.leftPinnedColumList.includes(item)}\r\n\t\t\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\t\t\tthis.state.maxLeftPinnedColumn - this.state.leftPinnedColumList.length <= 0\r\n\t\t\t\t\t\t\t\t\t\t\t? this.state.leftPinnedColumList.includes(item)\r\n\t\t\t\t\t\t\t\t\t\t\t\t? false\r\n\t\t\t\t\t\t\t\t\t\t\t\t: true\r\n\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonChange={() => this.reArrangeLeftPinnedColumn(item)}\r\n\t\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='column__txt'>Pin Left</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Method to handle the position of columns Names when left pinned in coloumn selector view.\r\n\t * @param {String} columHeaderName \r\n\t */\r\n\treArrangeLeftPinnedColumn = (columHeaderName) => {\r\n\t\tvar existingLeftPinnedList = this.state.leftPinnedColumList;\r\n\t\tvar existingColumnReorderEntityList = this.state.columnReorderEntityList;\r\n\t\tif (!existingLeftPinnedList.includes(columHeaderName)) {\r\n\t\t\texistingLeftPinnedList.unshift(columHeaderName);\r\n\t\t} else {\r\n\t\t\texistingLeftPinnedList = existingLeftPinnedList.filter((item) => item !== columHeaderName);\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tleftPinnedColumList: existingLeftPinnedList,\r\n\t\t});\r\n\r\n\t\texistingLeftPinnedList.map((item) => {\r\n\t\t\texistingColumnReorderEntityList = existingColumnReorderEntityList.filter((subItem) => subItem !== item);\r\n\t\t\texistingColumnReorderEntityList.unshift(item);\r\n\t\t});\r\n\r\n\t\tthis.setState({\r\n\t\t\tcolumnReorderEntityList: existingColumnReorderEntityList,\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='columns--grid'ref={this.setWrapperRef}>\r\n\t\t\t\t<div className='column__grid'>\r\n\t\t\t\t\t<div className='column__chooser'>\r\n\t\t\t\t\t\t<div className='column__header'>\r\n\t\t\t\t\t\t\t<div className=''>\r\n\t\t\t\t\t\t\t\t<strong>Column Chooser</strong>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='column__body'>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tplaceholder='Search column'\r\n\t\t\t\t\t\t\t\t\tclassName='custom__ctrl'\r\n\t\t\t\t\t\t\t\t\tonChange={this.filterColumnReorderList}\r\n\t\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='column__selectAll'>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\tclassName='column__selectTxt'\r\n\t\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\t\tonClick={() => this.selectAllToColumnReOrderList()}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tSelect All\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{this.state.columnSelectList.map((item) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div className='column__wrap' key={item}>\r\n\t\t\t\t\t\t\t\t\t\t<div className='column__checkbox'>\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={this.state.columnReorderEntityList.includes(item)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => this.addToColumnReorderEntityList(item)}\r\n\t\t\t\t\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='column__txt'>{item}</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='column__settings'>\r\n\t\t\t\t\t\t<div className='column__header'>\r\n\t\t\t\t\t\t\t<div className='column__headerTxt'>\r\n\t\t\t\t\t\t\t\t<strong>Column Setting</strong>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='column__close'>\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\t\t\t\tclassName=\"icon-close\" \r\n\t\t\t\t\t\t\t\t\ticon={faTimes}\r\n\t\t\t\t\t\t\t\t\tonClick={() => this.props.closeColumnReOrdering()}\r\n\t\t\t\t\t\t\t\t></FontAwesomeIcon>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='column__headerTxt'>\r\n\t\t\t\t\t\t\t<strong>&nbsp; &nbsp; Selected Column Count : {this.state.columnReorderEntityList.length}</strong>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='column__headerTxt'>\r\n\t\t\t\t\t\t\t{this.state.maxLeftPinnedColumn - this.state.leftPinnedColumList.length > 0 ? (\r\n\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t&nbsp; &nbsp; Left Pinned Column Count Remaining :{\" \"}\r\n\t\t\t\t\t\t\t\t\t{this.state.maxLeftPinnedColumn - this.state.leftPinnedColumList.length}\r\n\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<strong style={{ color: \"red\" }}>&nbsp; &nbsp; Maximum Count Of Left Pin Columns REACHED</strong>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='column__body'>\r\n\t\t\t\t\t\t\t<DndProvider backend={TouchBackend} options={{ enableMouseEvents: true }}>\r\n\t\t\t\t\t\t\t\t<ColumnsList\r\n\t\t\t\t\t\t\t\t\tcolumnsArray={this.createColumnsArrayFromProps(this.state.columnReorderEntityList)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</DndProvider>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='column__footer'>\r\n\t\t\t\t\t\t\t<div className='column__btns'>\r\n\t\t\t\t\t\t\t\t<button className='btns' onClick={() => this.resetColumnReorderList()}>\r\n\t\t\t\t\t\t\t\t\tReset\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<button className='btns' onClick={() => this.props.closeColumnReOrdering()}>\r\n\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tclassName='btns btns__save'\r\n\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\tthis.props.updateTableAsPerRowChooser(\r\n\t\t\t\t\t\t\t\t\t\t\tthis.state.columnReorderEntityList,\r\n\t\t\t\t\t\t\t\t\t\t\tthis.state.leftPinnedColumList\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ColumnReordering;\r\n","export const ItemTypes = {\r\n  CARD: \"sort\",\r\n};\r\n","import React from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\n\r\nconst style = {\r\n  cursor: \"move\",\r\n};\r\n\r\nconst Card = ({ id, text, moveCard, findCard }) => {\r\n  const originalIndex = findCard(id).index;\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: { type: ItemTypes.CARD, id, originalIndex },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n    end: (dropResult, monitor) => {\r\n      const { id: droppedId, originalIndex } = monitor.getItem();\r\n      const didDrop = monitor.didDrop();\r\n      if (!didDrop) {\r\n        moveCard(droppedId, originalIndex);\r\n      }\r\n    },\r\n  });\r\n\r\n  const [, drop] = useDrop({\r\n    accept: ItemTypes.CARD,\r\n    canDrop: () => false,\r\n    hover({ id: draggedId }) {\r\n      if (draggedId !== id) {\r\n        const { index: overIndex } = findCard(id);\r\n        moveCard(draggedId, overIndex);\r\n      }\r\n    },\r\n  });\r\n\r\n  const opacity = isDragging ? 0.1 : 1;\r\n\r\n  return (\r\n    <div ref={(node) => drag(drop(node))} style={{ ...style, opacity }}>\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport Card from \"./SortItem\";\r\nimport update from \"immutability-helper\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\n\r\nconst SortingList = (props) => {\r\n  const [cards, setCards] = useState([...props.sortsArray]);\r\n\r\n  const moveCard = (id, atIndex) => {\r\n    const { card, index } = findCard(id);\r\n    setCards(\r\n      update(cards, {\r\n        $splice: [\r\n          [index, 1],\r\n          [atIndex, 0, card],\r\n        ],\r\n      })\r\n    );\r\n  };\r\n\r\n  const findCard = (id) => {\r\n    const card = cards.filter((c) => `${c.id}` === id)[0];\r\n    return {\r\n      card,\r\n      index: cards.indexOf(card),\r\n    };\r\n  };\r\n\r\n  const [, drop] = useDrop({ accept: ItemTypes.CARD });\r\n\r\n  useEffect(() => {\r\n    setCards(props.sortsArray);\r\n  }, [props.sortsArray]);\r\n  return (\r\n\r\n    <React.Fragment>\r\n      <div ref={drop} style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n        {cards.map((card) => (\r\n          <Card\r\n            key={card.id}\r\n            id={`${card.id}`}\r\n            text={card.text}\r\n            moveCard={moveCard}\r\n            findCard={findCard}\r\n          />\r\n        ))}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SortingList;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTimes,\r\n  faAlignJustify,\r\n  faTrash,\r\n  faPlus,\r\n  faCopy,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { TouchBackend } from \"react-dnd-touch-backend\";\r\nimport SortingList from \"./SortingList\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      rowList: [true],\r\n    };\r\n    this.setWrapperRef = this.setWrapperRef.bind(this);\r\n    this.handleClickOutside = this.handleClickOutside.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handleClickOutside);\r\n  }\r\n\r\n  setWrapperRef(node) {\r\n    this.wrapperRef = node;\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n      this.props.closeSorting();\r\n    }\r\n  }\r\n  add = () => {\r\n    let rowList = [...this.state.rowList];\r\n    rowList.push(true);\r\n    this.setState({ rowList });\r\n    };\r\n\r\n  copy = (i) => {\r\n    let rowList = [...this.state.rowList];\r\n    // rowList.push(true);\r\n    // this.setState({ rowList });\r\n  };\r\n\r\n  clearAll = () => {\r\n    this.setState({ rowList: [] });\r\n  };\r\n\r\n  remove = (i) => {\r\n    let rowList = [...this.state.rowList];\r\n    rowList.splice(i, 1);\r\n    this.setState({ rowList });\r\n  };\r\n\r\n  createColumnsArrayFromProps = (rowList) => {\r\n    return rowList.map((i, index) => {\r\n      return {\r\n        id: index,\r\n        text: (\r\n          <div className=\"sort__bodyContent\" key={i}  >\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>&nbsp;</div >\r\n              </div >\r\n              <div className=\"sort__icon\">\r\n                <FontAwesomeIcon icon={faAlignJustify}></FontAwesomeIcon>\r\n              </div>\r\n            </div >\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>Sort by</div>\r\n              </div>\r\n              <div className=\"sort__file\">\r\n                <select className=\"custom__ctrl\">\r\n                  {this.props.columnFieldValue.map((item, index) => (\r\n                    <option key={index}>{item}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>Sort on</div>\r\n              </div>\r\n              <div className=\"sort__file\">\r\n                <select className=\"custom__ctrl\">\r\n                  <option>Value</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>Order</div>\r\n              </div>\r\n              <div className=\"sort__file\">\r\n                <select className=\"custom__ctrl\">\r\n                  <option>Ascending</option>\r\n                  <option>Descending</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>&nbsp;</div>\r\n              </div>\r\n              <div className=\"sort__icon\">\r\n                <FontAwesomeIcon\r\n                  icon={faCopy}\r\n                  title=\"Copy\"\r\n                  onClick={() => this.copy(i)}\r\n                ></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n            <div className=\"sort__reorder\">\r\n              <div className=\"\">\r\n                <div>&nbsp;</div>\r\n              </div>\r\n              <div className=\"sort__icon\">\r\n                <FontAwesomeIcon\r\n                  icon={faTrash}\r\n                  title=\"Delete\"\r\n                  onClick={() => this.remove(index)}\r\n                ></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n          </div >)\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.rowList)\r\n    let { rowList } = this.state.rowList;\r\n    return (\r\n      <div className=\"sorts--grid\" ref={this.setWrapperRef}>\r\n        <div className=\"sort__grid\">\r\n          <div className=\"sort__settings\">\r\n            <div className=\"sort__header\">\r\n              <div className=\"sort__headerTxt\">\r\n                <strong>Sort </strong>\r\n              </div>\r\n              <div className=\"sort__close\">\r\n                <FontAwesomeIcon\r\n                  className=\"icon-close\"\r\n                  icon={faTimes}\r\n                  onClick={() => this.props.closeSorting()}\r\n                ></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n            <div className=\"sort__body\">\r\n              <DndProvider\r\n                backend={TouchBackend}\r\n                options={{ enableMouseEvents: true }}\r\n              >\r\n                <SortingList\r\n                  sortsArray={this.createColumnsArrayFromProps(this.state.rowList)}\r\n                />\r\n              </DndProvider>\r\n              {/* {rowList.map((x, i) => {\r\n                return (\r\n                  <div className=\"sort__bodyContent\" key={i}>\r\n                    <div className=\"sort__reorder\">\r\n                      <div className=\"\">\r\n                        <div>&nbsp;</div>\r\n                      </div>\r\n                      <div className=\"sort__icon\">\r\n                        <FontAwesomeIcon\r\n                          icon={faAlignJustify}\r\n                        ></FontAwesomeIcon>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"sort__reorder\">\r\n                      <div className=\"\">\r\n                        <div>Sort by</div>\r\n                      </div>\r\n                      <div className=\"sort__file\">\r\n                        <select className=\"custom__ctrl\">\r\n                          {this.props.columnFieldValue.map((item, index) => (\r\n                            <option key={index}>{item}</option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"sort__reorder\">\r\n                      <div className=\"\">\r\n                        <div>Sort on</div>\r\n                      </div>\r\n                      <div className=\"sort__file\">\r\n                        <select className=\"custom__ctrl\">\r\n                          <option>Value</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"sort__reorder\">\r\n                      <div className=\"\">\r\n                        <div>Order</div>\r\n                      </div>\r\n                      <div className=\"sort__file\">\r\n                        <select className=\"custom__ctrl\">\r\n                          <option>Ascending</option>\r\n                          <option>Descending</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"sort__reorder\">\r\n                      <div className=\"\">\r\n                        <div>&nbsp;</div>\r\n                      </div>\r\n                      <div className=\"sort__icon\">\r\n                        <FontAwesomeIcon\r\n                          icon={faCopy}\r\n                          title=\"Copy\"\r\n                          onClick={() => this.copy(i)}\r\n                        ></FontAwesomeIcon>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"sort__reorder\">\r\n                      <div className=\"\">\r\n                        <div>&nbsp;</div>\r\n                      </div>\r\n                      <div className=\"sort__icon\">\r\n                        <FontAwesomeIcon\r\n                          icon={faTrash}\r\n                          title=\"Delete\"\r\n                          onClick={() => this.remove(i)}\r\n                        ></FontAwesomeIcon>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })} */}\r\n              <div className=\"sort__new\">\r\n                <div className=\"sort__section\">\r\n                  <FontAwesomeIcon\r\n                    icon={faPlus}\r\n                    className=\"sort__icon\"\r\n                  ></FontAwesomeIcon>\r\n                  <div className=\"sort__txt\" onClick={() => this.add()}>\r\n                    New Sort\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"sort__footer\">\r\n              <div className=\"sort__btns\">\r\n                <button className=\"btns\" onClick={this.clearAll}>\r\n                  Clear All\r\n                </button>\r\n                <button className=\"btns btns__save\">Ok</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <button onClick={() => this.add()}>Add New</button> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTimes,\r\n  faFilePdf,\r\n  faFileExcel,\r\n  faFileCsv,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nlet downLaodFileType = [];\r\nclass ExportData extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columnValueList: this.props.columnsList,\r\n      columnEntityList: [],\r\n      isAllSelected: false,\r\n      downLaodFileType: [],\r\n      filteredRow: [],\r\n      warning: \"\",\r\n      clickTag: \"none\",\r\n    };\r\n    this.setWrapperRef = this.setWrapperRef.bind(this);\r\n    this.handleClickOutside = this.handleClickOutside.bind(this);\r\n    this.selectDownLoadType = this.selectDownLoadType.bind(this);\r\n    this.exportValidation = this.exportValidation.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  setWrapperRef(node) {\r\n    this.wrapperRef = node;\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n      this.props.closeExport();\r\n    }\r\n  }\r\n\r\n  resetColumnExportList = () => {\r\n    this.setState({\r\n      columnEntityList: [],\r\n      isAllSelected: false,\r\n    });\r\n  };\r\n\r\n  selectAllToColumnList = () => {\r\n    this.resetColumnExportList();\r\n    this.setState({\r\n      columnEntityList: !this.state.isAllSelected ? this.props.columnsList : [],\r\n      isAllSelected: !this.state.isAllSelected,\r\n    });\r\n  };\r\n\r\n  addToColumnEntityList = (typeToBeAdded) => {\r\n    var existingColumnEntityList = this.state.columnEntityList;\r\n    if (!existingColumnEntityList.includes(typeToBeAdded)) {\r\n      existingColumnEntityList.push(typeToBeAdded);\r\n    } else {\r\n      existingColumnEntityList = existingColumnEntityList.filter((item) => {\r\n        return item !== typeToBeAdded \r\n      });\r\n    }\r\n    this.setState({\r\n      columnEntityList: existingColumnEntityList,\r\n      isAllSelected: false,\r\n    });\r\n  };\r\n\r\n  selectDownLoadType = (event) => {\r\n    if (\r\n      event.target.checked &&\r\n      !this.state.downLaodFileType.includes(event.target.value)\r\n    ) {\r\n      downLaodFileType.push(event.target.value);\r\n      this.setState({ downLaodFileType });\r\n    } else {\r\n      downLaodFileType.map(function (value, index) {\r\n        if (value === event.target.value) {\r\n          downLaodFileType = downLaodFileType.splice(index, value);\r\n        }\r\n      });\r\n      this.setState({ downLaodFileType });\r\n    }\r\n  };\r\n\r\n  exportRowData = () => {\r\n    const columnVlaueList = this.state.columnEntityList;\r\n    if (columnVlaueList.length > 0 && this.state.downLaodFileType.length > 0) {\r\n      this.props.rows.forEach((row) => {\r\n        const keys = Object.getOwnPropertyNames(row);\r\n        var filteredColumnVal = {};\r\n        keys.forEach(function (key) {\r\n          columnVlaueList.forEach((columnName) => {\r\n            if (columnName.key === key) filteredColumnVal[key] = row[key];\r\n          });\r\n        });\r\n        this.state.filteredRow.push(filteredColumnVal);\r\n      });\r\n\r\n      this.state.downLaodFileType.map((item) => {\r\n        if (item === \"pdf\") this.downloadPDF();\r\n        else if (item === \"excel\") this.downloadXLSFile();\r\n        else this.downloadCSVFile();\r\n      });\r\n    }\r\n  };\r\n\r\n  downloadPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"landscape\"; // portrait or landscape\r\n\r\n    const marginLeft = 300;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"iCargo Report\";\r\n    const headers = [\r\n      this.state.columnEntityList.map((column) => {\r\n        return column.name;\r\n      }),\r\n    ];\r\n    var dataValues = [];\r\n    this.props.rows.forEach((row) => {\r\n      const keys = Object.keys(row);\r\n      var filteredColumnVal = [];\r\n      this.state.columnEntityList.forEach((columnName) => {\r\n        keys.forEach((key) => {\r\n          if (columnName.key === key) filteredColumnVal.push(row[key]);\r\n        });\r\n      });\r\n      dataValues.push(filteredColumnVal);\r\n    });\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: dataValues,\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"report.pdf\");\r\n  };\r\n\r\n  downloadCSVFile = () => {\r\n    const fileType =\r\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n    const fileExtension = \".csv\";\r\n    const fileName = \"CSVDownload\";\r\n    const ws = XLSX.utils.json_to_sheet(this.state.filteredRow);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"csv\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  };\r\n\r\n  downloadXLSFile = () => {\r\n    const fileType =\r\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n    const fileExtension = \".xlsx\";\r\n    const fileName = \"XLSXDownload\";\r\n    const ws = XLSX.utils.json_to_sheet(this.state.filteredRow);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  };\r\n\r\n  columnSearchLogic = (e) => {\r\n    const searchKey = String(e.target.value).toLowerCase();\r\n    let filteredRows = this.props.columnsList.filter((item) => {\r\n      return item.name.toLowerCase().includes(searchKey);\r\n    });\r\n    if (!filteredRows.length) {\r\n      this.setState({ columnValueList: this.props.columnsList });\r\n    } else {\r\n      this.setState({ columnValueList: filteredRows });\r\n    }\r\n  };\r\n\r\n  exportValidation = () => {\r\n    let columnLength = this.state.columnEntityList.length;\r\n    let fileLength = this.state.downLaodFileType.length;\r\n    if (columnLength > 0 && fileLength > 0) {\r\n      this.exportRowData();\r\n      this.setState({ clickTag: \"none\" });\r\n    } else if (columnLength === 0) {\r\n      this.setState({ warning: \"Column\" });\r\n      this.setState({ clickTag: \"\" });\r\n    } else if (fileLength === 0) {\r\n      this.setState({ warning: \"File Type\" });\r\n      this.setState({ clickTag: \"\" });\r\n    }\r\n    if (columnLength === 0 && fileLength === 0) {\r\n      this.setState({ warning: \"File Type & Column\" });\r\n      this.setState({ clickTag: \"\" });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"exports--grid\" ref={this.setWrapperRef}>\r\n        <div className=\"export__grid\">\r\n          <div className=\"export__chooser\">\r\n            <div className=\"export__header\">\r\n              <div className=\"\">\r\n                <strong>Export Data</strong>\r\n              </div>\r\n            </div>\r\n            <div className=\"export__body\">\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search export\"\r\n                  className=\"custom__ctrl\"\r\n                  onChange={this.columnSearchLogic}\r\n                ></input>\r\n              </div>\r\n              <div className=\"export__selectAll\">\r\n                <div\r\n                  className=\"export__selectTxt\"\r\n                  onClick={() => this.selectAllToColumnList()}\r\n                >\r\n                  Select All\r\n                </div>\r\n              </div>\r\n              {this.state.columnValueList.length > 0\r\n                ? this.state.columnValueList.map((column, index) => {\r\n                    return (\r\n                      <div className=\"export__wrap\" key={column.key}>\r\n                        <div className=\"export__checkbox\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={this.state.columnEntityList.includes(\r\n                              column\r\n                            )}\r\n                            onChange={() => this.addToColumnEntityList(column)}\r\n                          ></input>\r\n                        </div>\r\n                        <div className=\"export__txt\">{column.name}</div>\r\n                      </div>\r\n                    );\r\n                  })\r\n                : \"\"}\r\n            </div>\r\n          </div>\r\n          <div className=\"export__settings\">\r\n            <div className=\"export__header\">\r\n              <div className=\"export__headerTxt\"></div>\r\n              <div className=\"export__close\">\r\n                <FontAwesomeIcon icon={faTimes} className=\"icon-close\" onClick={this.props.closeExport}></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n            <div className=\"export__as\">Export as</div>\r\n            <div className=\"export__body\">\r\n              <div className=\"export__reorder\">\r\n                <div className=\"\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"pdf\"\r\n                    value=\"pdf\"\r\n                    onChange={this.selectDownLoadType}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"export__file\">\r\n                  <FontAwesomeIcon\r\n                    icon={faFilePdf}\r\n                    className=\"temp\"\r\n                  ></FontAwesomeIcon>\r\n                </div>\r\n              </div>\r\n              <div className=\"export__reorder\">\r\n                <div className=\"\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"excel\"\r\n                    value=\"excel\"\r\n                    onChange={this.selectDownLoadType}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"export__file\">\r\n                  <FontAwesomeIcon\r\n                    icon={faFileExcel}\r\n                    className=\"temp\"\r\n                  ></FontAwesomeIcon>\r\n                </div>\r\n              </div>\r\n              <div className=\"export__reorder\">\r\n                <div className=\"\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"csv\"\r\n                    value=\"csv\"\r\n                    onChange={this.selectDownLoadType}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"export__file\">\r\n                  <FontAwesomeIcon\r\n                    icon={faFileCsv}\r\n                    className=\"temp\"\r\n                  ></FontAwesomeIcon>\r\n                </div>\r\n              </div>\r\n              <div className=\"exportWarning\">\r\n                <span\r\n                  style={{ display: this.state.clickTag }}\r\n                  className=\"alert alert-danger\"\r\n                >\r\n                  You haven't selected <strong>{this.state.warning}</strong>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"export__footer\">\r\n              <div className=\"export__btns\">\r\n                <button\r\n                  className=\"btns\"\r\n                  onClick={() => this.props.closeExport()}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className=\"btns btns__save\"\r\n                  onClick={(e) => {\r\n                    this.exportValidation();\r\n                  }}\r\n                >\r\n                  Export\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ExportData;\r\n","import React, { Component } from \"react\";\r\nimport ExtDataGrid from \"./common/extDataGrid\";\r\nimport { Toolbar, Data, Filters, Editors } from \"react-data-grid-addons\";\r\nimport { range } from \"lodash\";\r\nimport { applyFormula } from \"./utilities/utils\";\r\nimport { FormControl } from \"react-bootstrap\";\r\nimport DatePicker from \"./functions/DatePicker.js\";\r\n//import {onRowsSelected} from \"../components/functions/OnRowsSelected.js\"\r\nimport {\r\n  faSortAmountDown,\r\n  faColumns,\r\n  // faSyncAlt,\r\n  faShareAlt,\r\n  // faAlignLeft,\r\n  // faFilter,\r\n  faSortDown,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport ErrorMessage from \"./common/ErrorMessage\";\r\nimport ColumnReordering from \"./overlays/column_chooser/Chooser\";\r\nimport Sorting from \"./overlays/sorting/Sorting\";\r\nimport ExportData from \"./overlays/export_data/ExportData\";\r\n\r\nconst {\r\n  DraggableHeader: { DraggableContainer },\r\n} = require(\"react-data-grid-addons\");\r\n\r\nconst { DropDownEditor } = Editors;\r\n\r\nconst defaultParsePaste = (str) => str.split(/\\r\\n|\\n|\\r/).map((row) => row.split(\"\\t\"));\r\n\r\n// let newFilters = {};\r\n\r\nconst selectors = Data.Selectors;\r\n\r\nconst { AutoCompleteFilter, NumericFilter } = Filters;\r\nclass spreadsheet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const airportCodes = [];\r\n    this.props.airportCodes.forEach((item) => {\r\n      airportCodes.push({ id: item, value: item });\r\n    });\r\n    this.state = {\r\n      warningStatus: \"\",\r\n      height: 680,\r\n      displayNoRows: \"none\",\r\n      searchIconDisplay: \"\",\r\n      searchValue: \"\",\r\n      filter: {},\r\n      rows: this.props.rows,\r\n      selectedIndexes: [],\r\n      junk: {},\r\n      topLeft: {},\r\n      columnReorderingComponent: null,\r\n      exportComponent: null,\r\n      filteringRows: this.props.rows,\r\n      tempRows: this.props.rows,\r\n      sortingPanelComponent: null,\r\n      count: this.props.count,\r\n      columns: this.props.columns.map((item) => {\r\n        if (item.editor === \"DatePicker\") {\r\n          item.editor = DatePicker;\r\n        } else if (item.editor === \"DropDown\") {\r\n          item.editor = <DropDownEditor options={airportCodes} />;\r\n        } else if (item.editor === \"Text\") {\r\n          item.editor = \"text\";\r\n        } else {\r\n          item.editor = null;\r\n        }\r\n        if (item.type === \"numeric\") {\r\n          item.filterRenderer = NumericFilter;\r\n        }\r\n        else {\r\n          item.filterRenderer = AutoCompleteFilter;\r\n        }\r\n        return item;\r\n      }),\r\n    };\r\n    document.addEventListener(\"copy\", this.handleCopy);\r\n    document.addEventListener(\"paste\", this.handlePaste);\r\n    this.handleSearchValue = this.handleSearchValue.bind(this);\r\n    this.clearSearchValue = this.clearSearchValue.bind(this);\r\n    this.handleFilterChange = this.handleFilterChange.bind(this);\r\n\r\n    this.formulaAppliedCols = this.props.columns.filter((item) => {\r\n      return item.formulaApplicable;\r\n    });\r\n  }\r\n\r\n  updateRows = (startIdx, newRows) => {\r\n    this.setState((state) => {\r\n      const rows = state.rows.slice();\r\n      for (let i = 0; i < newRows.length; i++) {\r\n        if (startIdx + i < rows.length) {\r\n          rows[startIdx + i] = {\r\n            ...rows[startIdx + i],\r\n            ...newRows[i],\r\n          };\r\n        }\r\n      }\r\n      return {\r\n        rows,\r\n      };\r\n    });\r\n  }\r\n\r\n  rowGetter = (i) => {\r\n    const { rows } = this.state;\r\n    return rows[i];\r\n  };\r\n\r\n  handleCopy = (e) => {\r\n    e.preventDefault();\r\n    const { topLeft, botRight } = this.state;\r\n    const text = range(topLeft.rowIdx, botRight.rowIdx + 1)\r\n      .map((rowIdx) =>\r\n        this.state.columns\r\n          .slice(topLeft.colIdx - 1, botRight.colIdx)\r\n          .map((col) => this.rowGetter(rowIdx)[col.key])\r\n          .join(\"\\t\")\r\n      )\r\n      .join(\"\\n\");\r\n    e.clipboardData.setData(\"text/plain\", text);\r\n  };\r\n\r\n  handlePaste = (e) => {\r\n    e.preventDefault();\r\n    const { topLeft } = this.state;\r\n    const newRows = [];\r\n    const pasteData = defaultParsePaste(e.clipboardData.getData(\"text/plain\"));\r\n    pasteData.forEach((row) => {\r\n      const rowData = {};\r\n      // Merge the values from pasting and the keys from the columns\r\n      this.state.columns.slice(topLeft.colIdx - 1, topLeft.colIdx - 1 + row.length).forEach((col, j) => {\r\n        rowData[col.key] = row[j];\r\n      });\r\n      newRows.push(rowData);\r\n    });\r\n    this.updateRows(topLeft.rowIdx, newRows);\r\n  };\r\n\r\n  setSelection = (args) => {\r\n    this.setState({\r\n      topLeft: {\r\n        rowIdx: args.topLeft.rowIdx,\r\n        colIdx: args.topLeft.idx,\r\n      },\r\n      botRight: {\r\n        rowIdx: args.bottomRight.rowIdx,\r\n        colIdx: args.bottomRight.idx,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleWarningStatus = () => {\r\n    this.setState({ warningStatus: \"invalid\" })\r\n  }\r\n  closeWarningStatus = () => {\r\n    this.setState({ warningStatus: \"\" })\r\n  }\r\n\r\n  sortRows = (data, sortColumn, sortDirection) => {\r\n    const comparer = (a, b) => {\r\n      if (sortDirection === \"ASC\") {\r\n        return a[sortColumn] > b[sortColumn] ? 1 : -1;\r\n      } else if (sortDirection === \"DESC\") {\r\n        return a[sortColumn] < b[sortColumn] ? 1 : -1;\r\n      }\r\n    };\r\n    this.setState({\r\n      rows: [...this.state.rows].sort(comparer),\r\n    });\r\n    return sortDirection === \"NONE\" ? data : this.state.rows;\r\n  };\r\n\r\n  componentWillReceiveProps(props) {\r\n    this.setState({\r\n      rows: props.rows,\r\n    });\r\n    this.setState({\r\n      status: props.status,\r\n    });\r\n    this.setState({\r\n      textValue: props.textValue,\r\n    });\r\n    this.setState({ count: props.count });\r\n    this.setState({ warningStatus: props.status })\r\n  }\r\n\r\n  /**\r\n * Method To update the cell/cells with the edited values\r\n * @param {*} fromRow is the row from which this edit is performed\r\n * @param {*} toRow is the row upto which this edit is performed\r\n * @param {*} updated is the value of change\r\n * @param {*} action is type of edit action performed\r\n */\r\n  onGridRowsUpdated = ({ fromRow, toRow, updated, action }) => {\r\n    let columnName = \"\";\r\n    const filter = this.formulaAppliedCols.filter((item) => {\r\n      if (updated[item.key] !== null && updated[item.key] !== undefined) {\r\n        columnName = item.key;\r\n        return true;\r\n      } else return false;\r\n    });\r\n\r\n    if (filter.length > 0) {\r\n      updated = applyFormula(updated, columnName);\r\n    }\r\n\r\n    if (action !== \"COPY_PASTE\") {\r\n      this.setState((state) => {\r\n        const rows = state.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n          rows[i] = {\r\n            ...rows[i],\r\n            ...updated,\r\n          };\r\n        }\r\n\r\n        return {\r\n          rows,\r\n        };\r\n      });\r\n      this.setState((state) => {\r\n        const filteringRows = state.filteringRows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n          filteringRows[i] = {\r\n            ...filteringRows[i],\r\n            ...updated,\r\n          };\r\n        }\r\n\r\n        return {\r\n          filteringRows,\r\n        };\r\n      });\r\n      this.setState((state) => {\r\n        const tempRows = state.tempRows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n          tempRows[i] = {\r\n            ...tempRows[i],\r\n            ...updated,\r\n          };\r\n        }\r\n\r\n        return {\r\n          tempRows,\r\n        };\r\n      });\r\n    }\r\n    if (this.props.updateCellData) {\r\n      this.props.updateCellData(this.state.tempRows[fromRow], this.state.tempRows[toRow], updated, action);\r\n    }\r\n  };\r\n\t/**\r\n\t * Method To bulk/individual select of rows\r\n\t * @param {*} rows is the selected row\r\n\t */\r\n  onRowsSelected = (rows) => {\r\n    this.setState({\r\n      selectedIndexes: this.state.selectedIndexes.concat(rows.map((r) => r.rowIdx)),\r\n    });\r\n    if (this.props.selectBulkData) {\r\n      this.props.selectBulkData(rows);\r\n    }\r\n  };\r\n\t/**\r\n\t * Method To bulk/individual deselect of rows\r\n\t * @param {*} rows is the deselected row\r\n\t */\r\n  onRowsDeselected = (rows) => {\r\n    let rowIndexes = rows.map((r) => r.rowIdx);\r\n    this.setState({\r\n      selectedIndexes: this.state.selectedIndexes.filter((i) => rowIndexes.indexOf(i) === -1),\r\n    });\r\n  };\r\n\r\n\t/**\r\n\t * Method To filter the multiple columns\r\n\t * @param {*} value is the  incoming filtering event\r\n\t */\r\n  handleFilterChange = (value) => {\r\n    console.log(value)\r\n    let junk = this.state.junk;\r\n    if (!(value.filterTerm == null) && !(value.filterTerm.length <= 0)) {\r\n      junk[value.column.key] = value;\r\n    } else {\r\n      delete junk[value.column.key];\r\n    }\r\n    this.setState({ junk });\r\n    const data = this.getrows(this.state.filteringRows, this.state.junk);\r\n\r\n    this.setState({\r\n      rows: data,\r\n      tempRows: data,\r\n      count: data.length,\r\n    });\r\n    if (this.state.count === 0) {\r\n      this.handleWarningStatus();\r\n    }\r\n    else {\r\n      this.closeWarningStatus();\r\n    }\r\n  };\r\n  getrows = (rows, filters) => {\r\n    console.log(filters)\r\n    if (Object.keys(filters).length <= 0) {\r\n      filters = {};\r\n    }\r\n    selectors.getRows({ rows: [], filters: {} });\r\n    return selectors.getRows({ rows: rows, filters: filters });\r\n  };\r\n\r\n  /**\r\n * Method To render the filter values for filtering rows\r\n * @param {*} rows is the row data to be considered for filtering\r\n * @param {*} columnId is the specific columnId for which the row datas are being considered\r\n */\r\n  getValidFilterValues(rows, columnId) {\r\n    return rows\r\n      .map((r) => r[columnId])\r\n      .filter((item, i, a) => {\r\n        return i === a.indexOf(item);\r\n      });\r\n  }\r\n  /**\r\n* Method To sort the rows for a particular column\r\n* @param {*} data is the row datas to be considered for sorting\r\n* @param {*} sortColumn is the specific column for which the row sort is being triggered\r\n* @param {*} sortDirection is the type of sort\r\n*/\r\n  sortRows = (data, sortColumn, sortDirection) => {\r\n    const comparer = (a, b) => {\r\n      if (sortDirection === \"ASC\") {\r\n        return a[sortColumn] > b[sortColumn] ? 1 : -1;\r\n      } else if (sortDirection === \"DESC\") {\r\n        return a[sortColumn] < b[sortColumn] ? 1 : -1;\r\n      }\r\n    };\r\n    this.setState({\r\n      rows: [...data].sort(comparer),\r\n    });\r\n    return sortDirection === \"NONE\" ? data : this.state.rows;\r\n  };\r\n  /**\r\n     * Method To swap the columns\r\n     * @param {*} source is source column\r\n     * @param {*} target is the target column \r\n     */\r\n  onHeaderDrop = (source, target) => {\r\n    const stateCopy = Object.assign({}, this.state);\r\n    const columnSourceIndex = this.state.columns.findIndex((i) => i.key === source);\r\n    const columnTargetIndex = this.state.columns.findIndex((i) => i.key === target);\r\n\r\n    stateCopy.columns.splice(columnTargetIndex, 0, stateCopy.columns.splice(columnSourceIndex, 1)[0]);\r\n\r\n    const emptyColumns = Object.assign({}, this.state, {\r\n      columns: [],\r\n    });\r\n    this.setState(emptyColumns);\r\n\r\n    const reorderedColumns = Object.assign({}, this.state, {\r\n      columns: stateCopy.columns,\r\n    });\r\n    this.setState(reorderedColumns);\r\n  };\r\n  updateTableAsPerRowChooser = (inComingColumnsHeaderList, pinnedColumnsList) => {\r\n    var existingColumnsHeaderList = this.props.columns;\r\n    existingColumnsHeaderList = existingColumnsHeaderList.filter((item) => {\r\n      return inComingColumnsHeaderList.includes(item.name);\r\n    });\r\n\r\n    var rePositionedArray = existingColumnsHeaderList;\r\n    var singleHeaderOneList;\r\n    if (pinnedColumnsList.length > 0) {\r\n      pinnedColumnsList\r\n        .slice(0)\r\n        .reverse()\r\n        .map((item, index) => {\r\n          singleHeaderOneList = existingColumnsHeaderList.filter((subItem) => item === subItem.name);\r\n          rePositionedArray = this.array_move(\r\n            existingColumnsHeaderList,\r\n            existingColumnsHeaderList.indexOf(singleHeaderOneList[0]),\r\n            index\r\n          );\r\n        });\r\n    }\r\n\r\n    existingColumnsHeaderList = rePositionedArray;\r\n\t\t/**\r\n       making all the frozen attribute as false for all the columns and then \r\n       setting items of pinnedColumnsList as frozen = true\r\n       */\r\n    existingColumnsHeaderList.map((headerItem, index) => {\r\n      if (headerItem.frozen !== undefined && headerItem.frozen === true) {\r\n        existingColumnsHeaderList[index][\"frozen\"] = false;\r\n      }\r\n      if (pinnedColumnsList.includes(headerItem.name)) {\r\n        existingColumnsHeaderList[index][\"frozen\"] = true;\r\n      }\r\n    });\r\n\r\n    console.log(\"existingColumnsHeaderList \", existingColumnsHeaderList);\r\n\r\n    this.setState({\r\n      columns: existingColumnsHeaderList,\r\n    });\r\n\r\n    this.closeColumnReOrdering();\r\n  };\r\n\r\n\t/**\r\n\t * Method To re-position a particular object in an Array from old_index to new_index\r\n\t * @param {*} arr inComing array\r\n\t * @param {*} old_index initial index\r\n\t * @param {*} new_index final index\r\n\t */\r\n  array_move = (arr, old_index, new_index) => {\r\n    if (new_index >= arr.length) {\r\n      var k = new_index - arr.length + 1;\r\n      while (k--) {\r\n        arr.push(undefined);\r\n      }\r\n    }\r\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\r\n    return arr;\r\n  };\r\n\r\n\t/**\r\n\t * Method to render the column Selector Pannel\r\n\t */\r\n  columnReorderingPannel = () => {\r\n    var headerNameList = [];\r\n    var existingPinnedHeadersList = [];\r\n    this.state.columns\r\n      .filter((item) => item.frozen !== undefined && item.frozen === true)\r\n      .map((item) => existingPinnedHeadersList.push(item.name));\r\n    this.state.columns.map((item) => headerNameList.push(item.name));\r\n    this.setState({\r\n      columnReorderingComponent: (\r\n        <ColumnReordering\r\n          maxLeftPinnedColumn={this.props.maxLeftPinnedColumn}\r\n          updateTableAsPerRowChooser={this.updateTableAsPerRowChooser}\r\n          headerKeys={headerNameList}\r\n          closeColumnReOrdering={this.closeColumnReOrdering}\r\n          existingPinnedHeadersList={existingPinnedHeadersList}\r\n          {...this.props}\r\n        />\r\n      ),\r\n    });\r\n  };\r\n\r\n\t/**\r\n\t * Method to stop the render the column Selector Pannel\r\n\t */\r\n  closeColumnReOrdering = () => {\r\n    this.setState({\r\n      columnReorderingComponent: null,\r\n    });\r\n  };\r\n  handleSearchValue = (value) => {\r\n\r\n    this.setState({ searchValue: value });\r\n  };\r\n  clearSearchValue = () => {\r\n    this.setState({ searchValue: \"\" });\r\n    //this.setState({filteringRows:this.state.rows})\r\n  };\r\n\r\n  sortingPanel = () => {\r\n    let columnField = [];\r\n    this.state.columns.map((item) => columnField.push(item.name));\r\n    this.setState({\r\n      sortingPanelComponent: <Sorting columnFieldValue={columnField} closeSorting={this.closeSorting} />,\r\n    });\r\n  };\r\n\r\n  closeSorting = () => {\r\n    this.setState({\r\n      sortingPanelComponent: null,\r\n    });\r\n  };\r\n\r\n  //Export Data Logic\r\n  exportColumnData = () => {\r\n    this.setState({\r\n      exportComponent: (\r\n        <ExportData rows={this.state.rows} columnsList={this.state.columns} closeExport={this.closeExport} />\r\n      ),\r\n    });\r\n  };\r\n\r\n  closeExport = () => {\r\n    this.setState({\r\n      exportComponent: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='parentDiv'>\r\n          <div className='totalCount'>\r\n            Showing <strong> {this.state.count} </strong> records\r\n\t\t\t\t\t</div>\r\n          <div className='globalSearch'>\r\n            <i className=\"fa fa-search\"></i>\r\n            <FormControl\r\n              className=\"globalSeachInput\"\r\n              type='text'\r\n              placeholder=\"Search\"\r\n              onChange={(e) => {\r\n                this.handleSearchValue(e.target.value);\r\n                this.props.globalSearchLogic(e, this.state.tempRows);\r\n              }}\r\n              value={this.state.searchValue}\r\n            />\r\n          </div>\r\n          {/* <div className=\"filterIcons\">\r\n            <FontAwesomeIcon icon={faFilter} />\r\n          </div> */}\r\n          <div className='filterIcons' onClick={this.sortingPanel}>\r\n            <FontAwesomeIcon title='Group Sort' icon={faSortAmountDown} />\r\n            <FontAwesomeIcon icon={faSortDown} className='filterArrow' />\r\n          </div>\r\n          {this.state.sortingPanelComponent}\r\n          <div className='filterIcons' onClick={this.columnReorderingPannel}>\r\n            <FontAwesomeIcon title='Column Chooser' icon={faColumns} />\r\n            <FontAwesomeIcon icon={faSortDown} className='filterArrow' />\r\n          </div>\r\n          {this.state.columnReorderingComponent}\r\n          <div className='filterIcons'>\r\n            <FontAwesomeIcon title='Export' icon={faShareAlt} onClick={this.exportColumnData} />\r\n          </div>\r\n          {this.state.exportComponent}\r\n          {/* <div className=\"filterIcons\">\r\n            <FontAwesomeIcon title=\"Reload\" icon={faSyncAlt} />\r\n          </div> */}\r\n          {/* <div className=\"filterIcons\">\r\n            <FontAwesomeIcon icon={faAlignLeft} />\r\n          </div> */}\r\n        </div>\r\n        <ErrorMessage\r\n          className='errorDiv'\r\n          status={this.state.warningStatus}\r\n          closeWarningStatus={this.props.closeWarningStatus}\r\n          clearSearchValue={this.clearSearchValue}\r\n        />\r\n        <DraggableContainer className='gridDiv' onHeaderDrop={this.onHeaderDrop}>\r\n          <ExtDataGrid\r\n            toolbar={<Toolbar enableFilter={true} />}\r\n            getValidFilterValues={(columnKey) => this.getValidFilterValues(this.state.filteringRows, columnKey)}\r\n            minHeight={this.state.height}\r\n            columns={this.state.columns}\r\n            rowGetter={(i) => this.state.rows[i]}\r\n            rowsCount={this.state.rows.length}\r\n            onGridRowsUpdated={this.onGridRowsUpdated}\r\n            enableCellSelect={true}\r\n            onClearFilters={() => {\r\n              this.setState({ junk: {} });\r\n            }}\r\n            onColumnResize={(idx, width) => console.log(`Column ${idx} has been resized to ${width}`)}\r\n            onAddFilter={(filter) => this.handleFilterChange(filter)}\r\n            rowSelection={{\r\n              showCheckbox: true,\r\n              enableShiftSelect: true,\r\n              onRowsSelected: this.onRowsSelected,\r\n              onRowsDeselected: this.onRowsDeselected,\r\n              selectBy: {\r\n                indexes: this.state.selectedIndexes,\r\n              },\r\n            }}\r\n            onGridSort={(sortColumn, sortDirection) => this.sortRows(this.state.rows, sortColumn, sortDirection)}\r\n          //**************************/\r\n          //--Todo-- This is commented aspart of fixing column filtering \r\n          // cellRangeSelection={{\r\n          //   onComplete: this.setSelection,\r\n          // }}\r\n          //***********************/\r\n          />\r\n        </DraggableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default spreadsheet;\r\n"],"names":["ExtDataGrid","ReactDataGrid","componentDidMount","_mounted","dataGridComponent","document","getElementsByClassName","window","addEventListener","metricsUpdated","props","cellRangeSelection","onWindowMouseUp","componentWillUnmount","removeEventListener","applyFormula","obj","columnName","item","toString","charAt","operation","split","value","substring","length","reduce","a","b","Number","Math","min","apply","max","console","log","DatePicker","React","Component","constructor","state","Date","input","getInputNode","bind","getValue","onValueChanged","updated","date","dateTimeFormat","Intl","DateTimeFormat","year","month","day","formatToParts","column","key","ev","setState","target","render","ref","SEARCH_NOT_FOUNT_ERROR","ErrorMessage","status","setStatus","useState","useEffect","faTimes","e","closeWarningStatus","clearSearchValue","ItemTypes","COLUMN","style","cursor","ColumnItem","id","text","moveColumn","findColumn","originalIndex","index","isDragging","drag","useDrag","type","collect","monitor","end","dropResult","droppedId","getItem","didDrop","drop","useDrop","accept","canDrop","hover","draggedId","overIndex","opacity","node","ColumnsList","columns","setColumns","columnsArray","atIndex","update","$splice","filter","c","indexOf","display","flexWrap","map","ColumnReordering","resetColumnReorderList","columnReorderEntityList","isAllSelected","selectAllToColumnReOrderList","name","addToColumnReorderEntityList","typeToBeAdded","existingColumnReorderEntityList","existingLeftPinnedList","leftPinnedColumList","includes","push","filterColumnReorderList","searchKey","String","toLowerCase","existingList","filtererdColumnReorderList","columnSelectList","createColumnsArrayFromProps","colsList","faAlignJustify","maxLeftPinnedColumn","reArrangeLeftPinnedColumn","columHeaderName","unshift","subItem","headerKeys","existingPinnedHeadersList","setWrapperRef","handleClickOutside","wrapperRef","event","contains","closeColumnReOrdering","color","TouchBackend","enableMouseEvents","updateTableAsPerRowChooser","CARD","Card","moveCard","findCard","SortingList","cards","setCards","sortsArray","card","App","add","rowList","copy","i","clearAll","remove","splice","columnFieldValue","faCopy","faTrash","closeSorting","faPlus","downLaodFileType","ExportData","resetColumnExportList","columnEntityList","selectAllToColumnList","columnsList","addToColumnEntityList","existingColumnEntityList","selectDownLoadType","checked","exportRowData","columnVlaueList","rows","forEach","row","keys","Object","getOwnPropertyNames","filteredColumnVal","filteredRow","downloadPDF","downloadXLSFile","downloadCSVFile","unit","size","orientation","marginLeft","doc","jsPDF","setFontSize","title","headers","dataValues","content","startY","head","body","autoTable","save","fileType","fileExtension","fileName","ws","XLSX","json_to_sheet","wb","Sheets","data","SheetNames","excelBuffer","bookType","Blob","FileSaver","columnSearchLogic","filteredRows","columnValueList","exportValidation","columnLength","fileLength","clickTag","warning","closeExport","faFilePdf","faFileExcel","faFileCsv","DraggableHeader","DraggableContainer","require","DropDownEditor","Editors","defaultParsePaste","str","selectors","Data","Selectors","AutoCompleteFilter","NumericFilter","Filters","spreadsheet","updateRows","startIdx","newRows","slice","rowGetter","handleCopy","preventDefault","topLeft","botRight","range","rowIdx","colIdx","col","join","clipboardData","setData","handlePaste","pasteData","getData","rowData","j","setSelection","args","idx","bottomRight","handleWarningStatus","warningStatus","sortRows","sortColumn","sortDirection","comparer","sort","onGridRowsUpdated","fromRow","toRow","action","formulaAppliedCols","undefined","filteringRows","tempRows","updateCellData","onRowsSelected","selectedIndexes","concat","r","selectBulkData","onRowsDeselected","rowIndexes","handleFilterChange","junk","filterTerm","getrows","count","filters","getRows","onHeaderDrop","source","stateCopy","assign","columnSourceIndex","findIndex","columnTargetIndex","emptyColumns","reorderedColumns","inComingColumnsHeaderList","pinnedColumnsList","existingColumnsHeaderList","rePositionedArray","singleHeaderOneList","reverse","array_move","headerItem","frozen","arr","old_index","new_index","k","columnReorderingPannel","headerNameList","columnReorderingComponent","handleSearchValue","searchValue","sortingPanel","columnField","sortingPanelComponent","Sorting","exportColumnData","exportComponent","airportCodes","height","displayNoRows","searchIconDisplay","editor","filterRenderer","formulaApplicable","componentWillReceiveProps","textValue","getValidFilterValues","columnId","globalSearchLogic","faSortAmountDown","faSortDown","faColumns","faShareAlt","columnKey","width","showCheckbox","enableShiftSelect","selectBy","indexes"],"mappings":"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"}