{"version":3,"file":"index.modern.js","sources":["../src/common/extDataGrid.js","../src/utilities/utils.js","../src/functions/DatePicker.js","../src/common/ErrorConstants.js","../src/common/ErrorMessage.js","../src/overlays/column_chooser/ItemTypes.js","../src/overlays/column_chooser/columnItem.js","../src/overlays/column_chooser/columnsList.js","../src/overlays/column_chooser/Chooser.js","../src/overlays/sorting/Sorting.js","../src/overlays/export_data/ExportData.js","../src/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport ReactDataGrid from \"react-data-grid\";\nimport { Toolbar, Data, Filters } from \"react-data-grid-addons\";\n\nclass ExtDataGrid extends ReactDataGrid {\n  componentDidMount() {\n    this._mounted = true;\n    this.dataGridComponent = document.getElementsByClassName(\n      \"react-grid-Container\"\n    )[0]; //assumes only one react datagrid component exists\n    window.addEventListener(\"resize\", this.metricsUpdated);\n    if (this.props.cellRangeSelection) {\n      this.dataGridComponent.addEventListener(\"mouseup\", this.onWindowMouseUp);\n    }\n    this.metricsUpdated();\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n    window.removeEventListener(\"resize\", this.metricsUpdated);\n    this.dataGridComponent.removeEventListener(\"mouseup\", this.onWindowMouseUp);\n  }\n}\n\nexport default ExtDataGrid;\n","export const applyFormula = (obj, columnName) => {\n  let item = obj[columnName].toString();\n  if (item && item.charAt(0) === \"=\") {\n    var operation = item.split(\"(\");\n    var value = operation[1]\n      .substring(0, operation[1].length - 1)\n      .split(/[,:]/);\n    switch (operation[0]) {\n      case \"=SUM\":\n      case \"=ADD\":\n      case \"=sum\":\n      case \"=add\":\n        obj[columnName] = value.reduce(function (a, b) {\n          return Number(a) + Number(b);\n        });\n        break;\n      case \"=MUL\":\n      case \"=mul\":\n        obj[columnName] = value.reduce(function (a, b) {\n          return Number(a) * Number(b);\n        });\n        break;\n      case \"=SUB\":\n      case \"=sub\":\n      case \"=DIFF\":\n      case \"=diff\":\n        obj[columnName] = value.reduce(function (a, b) {\n          return Number(a) - Number(b);\n        });\n        break;\n      case \"=min\":\n      case \"=MIN\":\n        obj[columnName] = Math.min.apply(Math, value);\n        break;\n      case \"=max\":\n      case \"=MAX\":\n        obj[columnName] = Math.max.apply(Math, value);\n        break;\n      default:\n        console.log(\"No Calculation\");\n    }\n  }\n  return obj;\n};","import React from 'react';\n\nexport default class DatePicker extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        value: new Date(),\n      };\n      //the variable to store component reference\n      this.input = null;\n  \n      this.getInputNode = this.getInputNode.bind(this);\n      this.getValue = this.getValue.bind(this);\n      this.onValueChanged = this.onValueChanged.bind(this);\n    }\n  \n    //returning the component with the reference, input\n    getInputNode() {\n      return this.input;\n    }\n    //returning updated object with the date value in the required format\n    getValue() {\n      var updated = {};\n      let date;\n      date = new Date(this.state.value);\n      const dateTimeFormat = new Intl.DateTimeFormat(\"en-US\", { year: \"numeric\", month: \"short\", day: \"2-digit\" });\n      const [{ value: month }, , { value: day }, , { value: year }] = dateTimeFormat.formatToParts(date);\n      updated[this.props.column.key] = `${day}-${month}-${year}`;\n      return updated;\n  \n    }\n  \n    onValueChanged(ev) {\n      this.setState({ value: ev.target.value });\n    }\n  \n    render() {\n      return (\n        <div>\n          <input\n            type=\"date\"\n            ref={(ref) => {\n              this.input = ref;\n            }}\n            value={this.state.value}\n            onChange={this.onValueChanged}\n          />\n        </div>\n      );\n    }\n  }","export const SEARCH_NOT_FOUNT_ERROR = \"No Search Matches. Please try again later.\";\r\n","import React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { SEARCH_NOT_FOUNT_ERROR } from \"./ErrorConstants\";\n\nconst ErrorMessage = (props) => {\n\n  const [status, setStatus] = useState(props.status);\n  useEffect(\n    () => {\n      setStatus(props.status)\n    }\n    , [props.status]);\n  if (status === \"invalid\") {\n    return (\n      <div id=\"errorMsg\">\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {SEARCH_NOT_FOUNT_ERROR}\n        </div>\n        <div className=\"notification-close\" >\n          <FontAwesomeIcon icon={faTimes}\n            onClick={(e) => {\n              props.closeWarningStatus();\n              props.clearSearchValue();\n            }} />\n        </div>\n      </div>\n    );\n  } else return <div></div>;\n};\nexport default ErrorMessage;\n","export const ItemTypes = {\r\n    COLUMN: \"column\"\r\n};\r\n","import React from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\n\r\nconst style = {\r\n\tcursor: \"move\",\r\n};\r\n\r\nconst ColumnItem = ({ id, text, moveColumn, findColumn }) => {\r\n\tconst originalIndex = findColumn(id).index;\r\n\r\n\tconst [{ isDragging }, drag] = useDrag({\r\n\t\titem: { type: ItemTypes.COLUMN, id, originalIndex },\r\n\t\tcollect: (monitor) => ({\r\n\t\t\tisDragging: monitor.isDragging(),\r\n\t\t}),\r\n\t\tend: (dropResult, monitor) => {\r\n\t\t\tconst { id: droppedId, originalIndex } = monitor.getItem();\r\n\t\t\tconst didDrop = monitor.didDrop();\r\n\t\t\tif (!didDrop) {\r\n\t\t\t\tmoveColumn(droppedId, originalIndex);\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n\r\n\tconst [, drop] = useDrop({\r\n\t\taccept: ItemTypes.COLUMN,\r\n\t\tcanDrop: () => false,\r\n\t\thover({ id: draggedId }) {\r\n\t\t\tif (draggedId !== id) {\r\n\t\t\t\tconst { index: overIndex } = findColumn(id);\r\n\t\t\t\tmoveColumn(draggedId, overIndex);\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n\r\n\tconst opacity = isDragging ? 0.1 : 1;\r\n\r\n\treturn (\r\n\t\t<div ref={(node) => drag(drop(node))} style={{ ...style, opacity }}>\r\n\t\t\t{text}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ColumnItem;\r\n","import React, { useState } from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport update from \"immutability-helper\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\nimport ColumnItem from \"./columnItem\";\r\n\r\nconst ColumnsList = (props) => {\r\n\tconst [columns, setColumns] = useState([...props.columnsArray]);\r\n\r\n\tconst moveColumn = (id, atIndex) => {\r\n\t\tconst { column, index } = findColumn(id);\r\n\t\tsetColumns(\r\n\t\t\tupdate(columns, {\r\n\t\t\t\t$splice: [\r\n\t\t\t\t\t[index, 1],\r\n\t\t\t\t\t[atIndex, 0, column],\r\n\t\t\t\t],\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst findColumn = (id) => {\r\n\t\tconst column = columns.filter((c) => `${c.id}` === id)[0];\r\n\t\treturn {\r\n\t\t\tcolumn,\r\n\t\t\tindex: columns.indexOf(column),\r\n\t\t};\r\n\t};\r\n\r\n\tconst [, drop] = useDrop({ accept: ItemTypes.COLUMN });\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetColumns(props.columnsArray);\r\n\t}, [props.columnsArray]);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div ref={drop} style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n\t\t\t\t{columns.map((column) => (\r\n\t\t\t\t\t<ColumnItem\r\n\t\t\t\t\t\tkey={column.id}\r\n\t\t\t\t\t\tid={`${column.id}`}\r\n\t\t\t\t\t\ttext={column.text}\r\n\t\t\t\t\t\tmoveColumn={moveColumn}\r\n\t\t\t\t\t\tfindColumn={findColumn}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default ColumnsList;\r\n","import React from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { TouchBackend } from \"react-dnd-touch-backend\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes, faAlignJustify } from \"@fortawesome/free-solid-svg-icons\";\nimport ColumnsList from \"./columnsList\";\n\nclass ColumnReordering extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columnReorderEntityList: this.props.headerKeys,\n      columnSelectList: this.props.headerKeys,\n      leftPinnedColumList: this.props.existingPinnedHeadersList,\n      isAllSelected: false,\n      maxLeftPinnedColumn: this.props.maxLeftPinnedColumn,\n    };\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      this.props.closeColumnReOrdering()\n    }\n  }\n\n\t/**\n\t * Method to reset the coloumn list onClick of Reset button\n\t */\n\tresetColumnReorderList = () => {\n\t\tthis.setState({\n\t\t\tcolumnReorderEntityList: [],\n\t\t\tisAllSelected: false,\n\t\t});\n\t};\n\n\t/**\n\t * Method to Select all options in the coloumn list onClick of Select All button\n\t */\n\tselectAllToColumnReOrderList = () => {\n\t\tthis.resetColumnReorderList();\n\t\tthis.setState({\n\t\t\tcolumnReorderEntityList: this.props.columns.map(item=> item.name),\n\t\t\tisAllSelected: true,\n\t\t});\n\t};\n\n\t/**\n\t * Method To add a column to columnReorderEntityList when selected.\n\t * @param {String} typeToBeAdded \n\t */\n\taddToColumnReorderEntityList = (typeToBeAdded) => {\n\t\tvar existingColumnReorderEntityList = this.state.columnReorderEntityList;\n\t\tvar existingLeftPinnedList = this.state.leftPinnedColumList;\n\t\tif (!existingColumnReorderEntityList.includes(typeToBeAdded)) {\n\t\t\texistingColumnReorderEntityList.push(typeToBeAdded);\n\t\t} else {\n\t\t\texistingColumnReorderEntityList = existingColumnReorderEntityList.filter((item) => {\n\t\t\t\tif (item !== typeToBeAdded) return item;\n\t\t\t});\n\t\t\tif (existingLeftPinnedList.includes(typeToBeAdded)) {\n\t\t\t\texistingLeftPinnedList = existingLeftPinnedList.filter((item) => item !== typeToBeAdded);\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\tcolumnReorderEntityList: existingColumnReorderEntityList,\n\t\t\tisAllSelected: false,\n\t\t\tleftPinnedColumList: existingLeftPinnedList,\n\t\t});\n\t};\n\n\t/**\n\t * Method to handle the like-search on key stroke.\n\t * @param {Event} e \n\t */\n\tfilterColumnReorderList = (e) => {\n\t\tvar searchKey = String(e.target.value).toLowerCase();\n\t\tvar existingList = this.props.columns.map(item=> item.name);\n\t\tlet filtererdColumnReorderList = [];\n\t\tif (searchKey.length > 0) {\n\t\t\tfiltererdColumnReorderList = existingList.filter((item) => {\n\t\t\t\treturn item.toLowerCase().includes(searchKey);\n\t\t\t});\n\t\t} else {\n\t\t\tfiltererdColumnReorderList = this.props.columns.map(item=> item.name);\n\t\t}\n\t\tthis.setState({\n\t\t\tcolumnSelectList: filtererdColumnReorderList,\n\t\t});\n\t};\n\n\tcreateColumnsArrayFromProps = (colsList) => {\n\t\treturn colsList.map((item) => {\n\t\t\treturn {\n\t\t\t\tid: item,\n\t\t\t\ttext: (\n\t\t\t\t\t<div className='column__reorder' key={item}>\n\t\t\t\t\t\t<div className=''>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faAlignJustify}></FontAwesomeIcon>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='column__reorder__name'>{item}</div>\n\t\t\t\t\t\t<div className='column__wrap'>\n\t\t\t\t\t\t\t<div className='column__checkbox'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\tchecked={this.state.leftPinnedColumList.includes(item)}\n\t\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t\tthis.state.maxLeftPinnedColumn - this.state.leftPinnedColumList.length <= 0\n\t\t\t\t\t\t\t\t\t\t\t? this.state.leftPinnedColumList.includes(item)\n\t\t\t\t\t\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t\t\t\t\t\t: true\n\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonChange={() => this.reArrangeLeftPinnedColumn(item)}\n\t\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='column__txt'>Pin Left</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t};\n\t\t});\n\t};\n\n\t/**\n\t * Method to handle the position of columns Names when left pinned in coloumn selector view.\n\t * @param {String} columHeaderName \n\t */\n\treArrangeLeftPinnedColumn = (columHeaderName) => {\n\t\tvar existingLeftPinnedList = this.state.leftPinnedColumList;\n\t\tvar existingColumnReorderEntityList = this.state.columnReorderEntityList;\n\t\tif (!existingLeftPinnedList.includes(columHeaderName)) {\n\t\t\texistingLeftPinnedList.unshift(columHeaderName);\n\t\t} else {\n\t\t\texistingLeftPinnedList = existingLeftPinnedList.filter((item) => item !== columHeaderName);\n\t\t}\n\t\tthis.setState({\n\t\t\tleftPinnedColumList: existingLeftPinnedList,\n\t\t});\n\n\t\texistingLeftPinnedList.map((item) => {\n\t\t\texistingColumnReorderEntityList = existingColumnReorderEntityList.filter((subItem) => subItem !== item);\n\t\t\texistingColumnReorderEntityList.unshift(item);\n\t\t});\n\n\t\tthis.setState({\n\t\t\tcolumnReorderEntityList: existingColumnReorderEntityList,\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='columns--grid'ref={this.setWrapperRef}>\n\t\t\t\t<div className='column__grid'>\n\t\t\t\t\t<div className='column__chooser'>\n\t\t\t\t\t\t<div className='column__header'>\n\t\t\t\t\t\t\t<div className=''>\n\t\t\t\t\t\t\t\t<strong>Column Chooser</strong>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='column__body'>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tplaceholder='Search column'\n\t\t\t\t\t\t\t\t\tclassName='custom__ctrl'\n\t\t\t\t\t\t\t\t\tonChange={this.filterColumnReorderList}\n\t\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='column__selectAll'>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\tclassName='column__selectTxt'\n\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\tonClick={() => this.selectAllToColumnReOrderList()}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSelect All\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{this.state.columnSelectList.map((item) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div className='column__wrap' key={item}>\n\t\t\t\t\t\t\t\t\t\t<div className='column__checkbox'>\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={this.state.columnReorderEntityList.includes(item)}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={() => this.addToColumnReorderEntityList(item)}\n\t\t\t\t\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='column__txt'>{item}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='column__settings'>\n\t\t\t\t\t\t<div className='column__header'>\n\t\t\t\t\t\t\t<div className='column__headerTxt'>\n\t\t\t\t\t\t\t\t<strong>Column Setting</strong>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='column__close'>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\tclassName=\"icon-close\" \n\t\t\t\t\t\t\t\t\ticon={faTimes}\n\t\t\t\t\t\t\t\t\tonClick={() => this.props.closeColumnReOrdering()}\n\t\t\t\t\t\t\t\t></FontAwesomeIcon>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='column__headerTxt'>\n\t\t\t\t\t\t\t<strong>&nbsp; &nbsp; Selected Column Count : {this.state.columnReorderEntityList.length}</strong>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='column__headerTxt'>\n\t\t\t\t\t\t\t{this.state.maxLeftPinnedColumn - this.state.leftPinnedColumList.length > 0 ? (\n\t\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t\t&nbsp; &nbsp; Left Pinned Column Count Remaining :{\" \"}\n\t\t\t\t\t\t\t\t\t{this.state.maxLeftPinnedColumn - this.state.leftPinnedColumList.length}\n\t\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<strong style={{ color: \"red\" }}>&nbsp; &nbsp; Maximum Count Of Left Pin Columns REACHED</strong>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='column__body'>\n\t\t\t\t\t\t\t<DndProvider backend={TouchBackend} options={{ enableMouseEvents: true }}>\n\t\t\t\t\t\t\t\t<ColumnsList\n\t\t\t\t\t\t\t\t\tcolumnsArray={this.createColumnsArrayFromProps(this.state.columnReorderEntityList)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</DndProvider>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='column__footer'>\n\t\t\t\t\t\t\t<div className='column__btns'>\n\t\t\t\t\t\t\t\t<button className='btns' onClick={() => this.resetColumnReorderList()}>\n\t\t\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button className='btns' onClick={() => this.props.closeColumnReOrdering()}>\n\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='btns btns__save'\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\tthis.props.updateTableAsPerRowChooser(\n\t\t\t\t\t\t\t\t\t\t\tthis.state.columnReorderEntityList,\n\t\t\t\t\t\t\t\t\t\t\tthis.state.leftPinnedColumList\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ColumnReordering;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTimes,\n  faAlignJustify,\n  faTrash,\n  faPlus,\n  faCopy,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { DndProvider } from \"react-dnd\";\nimport { TouchBackend } from \"react-dnd-touch-backend\";\nimport SortingList from \"./SortingList\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      rowList: [true],\n    };\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      this.props.closeSorting();\n    }\n  }\n  add = () => {\n    let rowList = [...this.state.rowList];\n    rowList.push(true);\n    this.setState({ rowList });\n  };\n\n  copy = (i) => {\n    let rowList = [...this.state.rowList];\n    console.log(rowList);\n  };\n\n  clearAll = () => {\n    this.setState({ rowList: [] });\n  };\n\n  remove = (i) => {\n    let rowList = [...this.state.rowList];\n    rowList.splice(i, 1);\n    this.setState({ rowList });\n  };\n\n  createColumnsArrayFromProps = (rowList) => {\n    return rowList.map((x, i) => {\n      return (\n        <div className=\"sort__bodyContent\" key={i}  >\n          <div className=\"sort__reorder\">\n            <div className=\"\">\n              <div>&nbsp;</div>\n            </div>\n            <div className=\"sort__icon\">\n              <FontAwesomeIcon icon={faAlignJustify}></FontAwesomeIcon>\n            </div>\n          </div>\n          <div className=\"sort__reorder\">\n            <div className=\"\">\n              <div>Sort by</div>\n            </div>\n            <div className=\"sort__file\">\n              <select className=\"custom__ctrl\">\n                {this.props.columnFieldValue.map((item, index) => (\n                  <option key={index}>{item}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n          <div className=\"sort__reorder\">\n            <div className=\"\">\n              <div>Sort on</div>\n            </div>\n            <div className=\"sort__file\">\n              <select className=\"custom__ctrl\">\n                <option>Value</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"sort__reorder\">\n            <div className=\"\">\n              <div>Order</div>\n            </div>\n            <div className=\"sort__file\">\n              <select className=\"custom__ctrl\">\n                <option>Ascending</option>\n                <option>Descending</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"sort__reorder\">\n            <div className=\"\">\n              <div>&nbsp;</div>\n            </div>\n            <div className=\"sort__icon\">\n              <FontAwesomeIcon\n                icon={faCopy}\n                title=\"Copy\"\n                onClick={() => this.copy(i)}\n              ></FontAwesomeIcon>\n            </div>\n          </div>\n          <div className=\"sort__reorder\">\n            <div className=\"\">\n              <div>&nbsp;</div>\n            </div>\n            <div className=\"sort__icon\">\n              <FontAwesomeIcon\n                icon={faTrash}\n                title=\"Delete\"\n                onClick={() => this.remove(i)}\n              ></FontAwesomeIcon>\n            </div>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  render() {\n    let { rowList } = this.state;\n    return (\n      <div className=\"sorts--grid\" ref={this.setWrapperRef}>\n        <div className=\"sort__grid\">\n          <div className=\"sort__settings\">\n            <div className=\"sort__header\">\n              <div className=\"sort__headerTxt\">\n                <strong>Sort </strong>\n              </div>\n              <div className=\"sort__close\">\n                <FontAwesomeIcon\n                  className=\"icon-close\" \n                  icon={faTimes}\n                  onClick={() => this.props.closeSorting()}\n                ></FontAwesomeIcon>\n              </div>\n            </div>\n            <div className=\"sort__body\">\n              {/* <DndProvider\n                backend={TouchBackend}\n                options={{ enableMouseEvents: true }}\n              >\n                <SortingList\n                  sortsArray={this.createColumnsArrayFromProps(\n                    this.state.rowList\n                  )}\n                />\n              </DndProvider> */}\n              {rowList.map((x, i) => {\n                return (\n                  <div className=\"sort__bodyContent\" key={i}>\n                    <div className=\"sort__reorder\">\n                      <div className=\"\">\n                        <div>&nbsp;</div>\n                      </div>\n                      <div className=\"sort__icon\">\n                        <FontAwesomeIcon\n                          icon={faAlignJustify}\n                        ></FontAwesomeIcon>\n                      </div>\n                    </div>\n                    <div className=\"sort__reorder\">\n                      <div className=\"\">\n                        <div>Sort by</div>\n                      </div>\n                      <div className=\"sort__file\">\n                        <select className=\"custom__ctrl\">\n                          {this.props.columnFieldValue.map((item, index) => (\n                            <option key={index}>{item}</option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"sort__reorder\">\n                      <div className=\"\">\n                        <div>Sort on</div>\n                      </div>\n                      <div className=\"sort__file\">\n                        <select className=\"custom__ctrl\">\n                          <option>Value</option>\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"sort__reorder\">\n                      <div className=\"\">\n                        <div>Order</div>\n                      </div>\n                      <div className=\"sort__file\">\n                        <select className=\"custom__ctrl\">\n                          <option>Ascending</option>\n                          <option>Descending</option>\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"sort__reorder\">\n                      <div className=\"\">\n                        <div>&nbsp;</div>\n                      </div>\n                      <div className=\"sort__icon\">\n                        <FontAwesomeIcon\n                          icon={faCopy}\n                          title=\"Copy\"\n                          onClick={() => this.copy(i)}\n                        ></FontAwesomeIcon>\n                      </div>\n                    </div>\n                    <div className=\"sort__reorder\">\n                      <div className=\"\">\n                        <div>&nbsp;</div>\n                      </div>\n                      <div className=\"sort__icon\">\n                        <FontAwesomeIcon\n                          icon={faTrash}\n                          title=\"Delete\"\n                          onClick={() => this.remove(i)}\n                        ></FontAwesomeIcon>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n              <div className=\"sort__new\">\n                <div className=\"sort__section\">\n                  <FontAwesomeIcon\n                    icon={faPlus}\n                    className=\"sort__icon\"\n                  ></FontAwesomeIcon>\n                  <div className=\"sort__txt\" onClick={() => this.add()}>\n                    New Sort\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"sort__footer\">\n              <div className=\"sort__btns\">\n                <button className=\"btns\" onClick={this.clearAll}>\n                  Clear All\n                </button>\n                <button className=\"btns btns__save\">Ok</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* <button onClick={() => this.add()}>Add New</button> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTimes,\n  faFilePdf,\n  faFileExcel,\n  faFileCsv,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\n\nlet downLaodFileType = [];\nclass ExportData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columnValueList: this.props.columnsList,\n      columnEntityList: [],\n      isAllSelected: false,\n      downLaodFileType: [],\n      filteredRow: [],\n      warning: \"\",\n      clickTag: \"none\",\n    };\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n    this.selectDownLoadType = this.selectDownLoadType.bind(this);\n    this.exportValidation = this.exportValidation.bind(this);\n  }\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      this.props.closeExport();\n    }\n  }\n\n  resetColumnExportList = () => {\n    this.setState({\n      columnEntityList: [],\n      isAllSelected: false,\n    });\n  };\n\n  selectAllToColumnList = () => {\n    this.resetColumnExportList();\n    this.setState({\n      columnEntityList: !this.state.isAllSelected ? this.props.columnsList : [],\n      isAllSelected: !this.state.isAllSelected,\n    });\n  };\n\n  addToColumnEntityList = (typeToBeAdded) => {\n    var existingColumnEntityList = this.state.columnEntityList;\n    if (!existingColumnEntityList.includes(typeToBeAdded)) {\n      existingColumnEntityList.push(typeToBeAdded);\n    } else {\n      existingColumnEntityList = existingColumnEntityList.filter((item) => {\n        return item !== typeToBeAdded \n      });\n    }\n    this.setState({\n      columnEntityList: existingColumnEntityList,\n      isAllSelected: false,\n    });\n  };\n\n  selectDownLoadType = (event) => {\n    if (\n      event.target.checked &&\n      !this.state.downLaodFileType.includes(event.target.value)\n    ) {\n      downLaodFileType.push(event.target.value);\n      this.setState({ downLaodFileType });\n    } else {\n      downLaodFileType.map(function (value, index) {\n        if (value === event.target.value) {\n          downLaodFileType = downLaodFileType.splice(index, value);\n        }\n      });\n      this.setState({ downLaodFileType });\n    }\n  };\n\n  exportRowData = () => {\n    const columnVlaueList = this.state.columnEntityList;\n    if (columnVlaueList.length > 0 && this.state.downLaodFileType.length > 0) {\n      this.props.rows.forEach((row) => {\n        const keys = Object.getOwnPropertyNames(row);\n        var filteredColumnVal = {};\n        keys.forEach(function (key) {\n          columnVlaueList.forEach((columnName) => {\n            if (columnName.key === key) filteredColumnVal[key] = row[key];\n          });\n        });\n        this.state.filteredRow.push(filteredColumnVal);\n      });\n\n      this.state.downLaodFileType.map((item) => {\n        if (item === \"pdf\") this.downloadPDF();\n        else if (item === \"excel\") this.downloadXLSFile();\n        else this.downloadCSVFile();\n      });\n    }\n  };\n\n  downloadPDF = () => {\n    const unit = \"pt\";\n    const size = \"A4\"; // Use A1, A2, A3 or A4\n    const orientation = \"landscape\"; // portrait or landscape\n\n    const marginLeft = 300;\n    const doc = new jsPDF(orientation, unit, size);\n\n    doc.setFontSize(15);\n\n    const title = \"iCargo Report\";\n    const headers = [\n      this.state.columnEntityList.map((column) => {\n        return column.name;\n      }),\n    ];\n    var dataValues = [];\n    this.props.rows.forEach((row) => {\n      const keys = Object.keys(row);\n      var filteredColumnVal = [];\n      this.state.columnEntityList.forEach((columnName) => {\n        keys.forEach((key) => {\n          if (columnName.key === key) filteredColumnVal.push(row[key]);\n        });\n      });\n      dataValues.push(filteredColumnVal);\n    });\n\n    let content = {\n      startY: 50,\n      head: headers,\n      body: dataValues,\n    };\n\n    doc.text(title, marginLeft, 40);\n    doc.autoTable(content);\n    doc.save(\"report.pdf\");\n  };\n\n  downloadCSVFile = () => {\n    const fileType =\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const fileExtension = \".csv\";\n    const fileName = \"CSVDownload\";\n    const ws = XLSX.utils.json_to_sheet(this.state.filteredRow);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"csv\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  downloadXLSFile = () => {\n    const fileType =\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const fileExtension = \".xlsx\";\n    const fileName = \"XLSXDownload\";\n    const ws = XLSX.utils.json_to_sheet(this.state.filteredRow);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  columnSearchLogic = (e) => {\n    const searchKey = String(e.target.value).toLowerCase();\n    let filteredRows = this.props.columnsList.filter((item) => {\n      return item.name.toLowerCase().includes(searchKey);\n    });\n    if (!filteredRows.length) {\n      this.setState({ columnValueList: this.props.columnsList });\n    } else {\n      this.setState({ columnValueList: filteredRows });\n    }\n  };\n\n  exportValidation = () => {\n    let columnLength = this.state.columnEntityList.length;\n    let fileLength = this.state.downLaodFileType.length;\n    if (columnLength > 0 && fileLength > 0) {\n      this.exportRowData();\n      this.setState({ clickTag: \"none\" });\n    } else if (columnLength === 0) {\n      this.setState({ warning: \"Column\" });\n      this.setState({ clickTag: \"\" });\n    } else if (fileLength === 0) {\n      this.setState({ warning: \"File Type\" });\n      this.setState({ clickTag: \"\" });\n    }\n    if (columnLength === 0 && fileLength === 0) {\n      this.setState({ warning: \"File Type & Column\" });\n      this.setState({ clickTag: \"\" });\n    }\n  };\n  render() {\n    return (\n      <div className=\"exports--grid\" ref={this.setWrapperRef}>\n        <div className=\"export__grid\">\n          <div className=\"export__chooser\">\n            <div className=\"export__header\">\n              <div className=\"\">\n                <strong>Export Data</strong>\n              </div>\n            </div>\n            <div className=\"export__body\">\n              <div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Search export\"\n                  className=\"custom__ctrl\"\n                  onChange={this.columnSearchLogic}\n                ></input>\n              </div>\n              <div className=\"export__selectAll\">\n                <div\n                  className=\"export__selectTxt\"\n                  onClick={() => this.selectAllToColumnList()}\n                >\n                  Select All\n                </div>\n              </div>\n              {this.state.columnValueList.length > 0\n                ? this.state.columnValueList.map((column, index) => {\n                    return (\n                      <div className=\"export__wrap\" key={column.key}>\n                        <div className=\"export__checkbox\">\n                          <input\n                            type=\"checkbox\"\n                            checked={this.state.columnEntityList.includes(\n                              column\n                            )}\n                            onChange={() => this.addToColumnEntityList(column)}\n                          ></input>\n                        </div>\n                        <div className=\"export__txt\">{column.name}</div>\n                      </div>\n                    );\n                  })\n                : \"\"}\n            </div>\n          </div>\n          <div className=\"export__settings\">\n            <div className=\"export__header\">\n              <div className=\"export__headerTxt\"></div>\n              <div className=\"export__close\">\n                <FontAwesomeIcon icon={faTimes} className=\"icon-close\" onClick={this.props.closeExport}></FontAwesomeIcon>\n              </div>\n            </div>\n            <div className=\"export__as\">Export as</div>\n            <div className=\"export__body\">\n              <div className=\"export__reorder\">\n                <div className=\"\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"pdf\"\n                    value=\"pdf\"\n                    onChange={this.selectDownLoadType}\n                  ></input>\n                </div>\n                <div className=\"export__file\">\n                  <FontAwesomeIcon\n                    icon={faFilePdf}\n                    className=\"temp\"\n                  ></FontAwesomeIcon>\n                </div>\n              </div>\n              <div className=\"export__reorder\">\n                <div className=\"\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"excel\"\n                    value=\"excel\"\n                    onChange={this.selectDownLoadType}\n                  ></input>\n                </div>\n                <div className=\"export__file\">\n                  <FontAwesomeIcon\n                    icon={faFileExcel}\n                    className=\"temp\"\n                  ></FontAwesomeIcon>\n                </div>\n              </div>\n              <div className=\"export__reorder\">\n                <div className=\"\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"csv\"\n                    value=\"csv\"\n                    onChange={this.selectDownLoadType}\n                  ></input>\n                </div>\n                <div className=\"export__file\">\n                  <FontAwesomeIcon\n                    icon={faFileCsv}\n                    className=\"temp\"\n                  ></FontAwesomeIcon>\n                </div>\n              </div>\n              <div className=\"exportWarning\">\n                <span\n                  style={{ display: this.state.clickTag }}\n                  className=\"alert alert-danger\"\n                >\n                  You haven't selected <strong>{this.state.warning}</strong>\n                </span>\n              </div>\n            </div>\n            <div className=\"export__footer\">\n              <div className=\"export__btns\">\n                <button\n                  className=\"btns\"\n                  onClick={() => this.props.closeExport()}\n                >\n                  Cancel\n                </button>\n                <button\n                  className=\"btns btns__save\"\n                  onClick={(e) => {\n                    this.exportValidation();\n                  }}\n                >\n                  Export\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ExportData;\n","import React, { Component } from \"react\";\nimport ExtDataGrid from \"./common/extDataGrid\";\nimport { Toolbar, Data, Filters, Editors } from \"react-data-grid-addons\";\nimport { range } from \"lodash\";\nimport { applyFormula } from \"./utilities/utils\";\nimport { FormControl } from \"react-bootstrap\";\nimport DatePicker from \"./functions/DatePicker.js\";\n//import {onRowsSelected} from \"../components/functions/OnRowsSelected.js\"\nimport {\n  faSortAmountDown,\n  faColumns,\n  // faSyncAlt,\n  faShareAlt,\n  // faAlignLeft,\n  // faFilter,\n  faSortDown,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ErrorMessage from \"./common/ErrorMessage\";\nimport ColumnReordering from \"./overlays/column_chooser/Chooser\";\nimport Sorting from \"./overlays/sorting/Sorting\";\nimport ExportData from \"./overlays/export_data/ExportData\";\n\nconst {\n  DraggableHeader: { DraggableContainer },\n} = require(\"react-data-grid-addons\");\n\nconst { DropDownEditor } = Editors;\n\nconst defaultParsePaste = (str) => str.split(/\\r\\n|\\n|\\r/).map((row) => row.split(\"\\t\"));\n\n// let newFilters = {};\n\nconst selectors = Data.Selectors;\n\nconst { AutoCompleteFilter, NumericFilter } = Filters;\nclass spreadsheet extends Component {\n  constructor(props) {\n    super(props);\n    const airportCodes = [];\n    this.props.airportCodes.forEach((item) => {\n      airportCodes.push({ id: item, value: item });\n    });\n    this.state = {\n      height: 680,\n      displayNoRows: \"none\",\n      searchIconDisplay: \"\",\n      searchValue: \"\",\n      filter: {},\n      rows: this.props.rows,\n      selectedIndexes: [],\n      junk: {},\n      topLeft: {},\n      columnReorderingComponent: null,\n      exportComponent: null,\n      filteringRows: this.props.rows,\n      tempRows: this.props.rows,\n      sortingPanelComponent: null,\n      count: this.props.rows.length,\n      columns: this.props.columns.map((item) => {\n        if (item.editor === \"DatePicker\") {\n          item.editor = DatePicker;\n        } else if (item.editor === \"DropDown\") {\n          item.editor = <DropDownEditor options={airportCodes} />;\n        } else if (item.editor === \"Text\") {\n          item.editor = \"text\";\n        } else {\n          item.editor = null;\n        }\n        if (item.name === \"Flight Model\") {\n          item.filterRenderer = NumericFilter;\n        }\n        else {\n          item.filterRenderer = AutoCompleteFilter;\n        }\n        return item;\n      }),\n    };\n    document.addEventListener(\"copy\", this.handleCopy);\n    document.addEventListener(\"paste\", this.handlePaste);\n    this.handleSearchValue = this.handleSearchValue.bind(this);\n    this.clearSearchValue = this.clearSearchValue.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n\n    this.formulaAppliedCols = this.props.columns.filter((item) => {\n      return item.formulaApplicable;\n    });\n  }\n\n  updateRows = (startIdx, newRows) => {\n    this.setState((state) => {\n      const rows = state.rows.slice();\n      for (let i = 0; i < newRows.length; i++) {\n        if (startIdx + i < rows.length) {\n          rows[startIdx + i] = {\n            ...rows[startIdx + i],\n            ...newRows[i],\n          };\n        }\n      }\n      return {\n        rows,\n      };\n    });\n  }\n\n  rowGetter = (i) => {\n    const { rows } = this.state;\n    return rows[i];\n  };\n\n  handleCopy = (e) => {\n    e.preventDefault();\n    const { topLeft, botRight } = this.state;\n    const text = range(topLeft.rowIdx, botRight.rowIdx + 1)\n      .map((rowIdx) =>\n        this.state.columns\n          .slice(topLeft.colIdx - 1, botRight.colIdx)\n          .map((col) => this.rowGetter(rowIdx)[col.key])\n          .join(\"\\t\")\n      )\n      .join(\"\\n\");\n    e.clipboardData.setData(\"text/plain\", text);\n  };\n\n  handlePaste = (e) => {\n    e.preventDefault();\n    const { topLeft } = this.state;\n    const newRows = [];\n    const pasteData = defaultParsePaste(e.clipboardData.getData(\"text/plain\"));\n    pasteData.forEach((row) => {\n      const rowData = {};\n      // Merge the values from pasting and the keys from the columns\n      this.state.columns.slice(topLeft.colIdx - 1, topLeft.colIdx - 1 + row.length).forEach((col, j) => {\n        rowData[col.key] = row[j];\n      });\n      newRows.push(rowData);\n    });\n    this.updateRows(topLeft.rowIdx, newRows);\n  };\n\n  setSelection = (args) => {\n    this.setState({\n      topLeft: {\n        rowIdx: args.topLeft.rowIdx,\n        colIdx: args.topLeft.idx,\n      },\n      botRight: {\n        rowIdx: args.bottomRight.rowIdx,\n        colIdx: args.bottomRight.idx,\n      },\n    });\n  };\n\n  sortRows = (data, sortColumn, sortDirection) => {\n    const comparer = (a, b) => {\n      if (sortDirection === \"ASC\") {\n        return a[sortColumn] > b[sortColumn] ? 1 : -1;\n      } else if (sortDirection === \"DESC\") {\n        return a[sortColumn] < b[sortColumn] ? 1 : -1;\n      }\n    };\n    this.setState({\n      rows: [...this.state.rows].sort(comparer),\n    });\n    return sortDirection === \"NONE\" ? data : this.state.rows;\n  };\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      rows: props.rows,\n    });\n    this.setState({\n      status: props.status,\n    });\n    this.setState({\n      textValue: props.textValue,\n    });\n    this.setState({ count: props.count });\n  }\n\n  /**\n * Method To update the cell/cells with the edited values\n * @param {*} fromRow is the row from which this edit is performed\n * @param {*} toRow is the row upto which this edit is performed\n * @param {*} updated is the value of change\n * @param {*} action is type of edit action performed\n */\n  onGridRowsUpdated = ({ fromRow, toRow, updated, action }) => {\n    let columnName = \"\";\n    const filter = this.formulaAppliedCols.filter((item) => {\n      if (updated[item.key] !== null && updated[item.key] !== undefined) {\n        columnName = item.key;\n        return true;\n      } else return false;\n    });\n\n    if (filter.length > 0) {\n      updated = applyFormula(updated, columnName);\n    }\n\n    if (action !== \"COPY_PASTE\") {\n      this.setState((state) => {\n        const rows = state.rows.slice();\n        for (let i = fromRow; i <= toRow; i++) {\n          rows[i] = {\n            ...rows[i],\n            ...updated,\n          };\n        }\n\n        return {\n          rows,\n        };\n      });\n      this.setState((state) => {\n        const filteringRows = state.filteringRows.slice();\n        for (let i = fromRow; i <= toRow; i++) {\n          filteringRows[i] = {\n            ...filteringRows[i],\n            ...updated,\n          };\n        }\n\n        return {\n          filteringRows,\n        };\n      });\n      this.setState((state) => {\n        const tempRows = state.tempRows.slice();\n        for (let i = fromRow; i <= toRow; i++) {\n          tempRows[i] = {\n            ...tempRows[i],\n            ...updated,\n          };\n        }\n\n        return {\n          tempRows,\n        };\n      });\n    }\n    if (this.props.updateCellData) {\n      this.props.updateCellData(this.state.tempRows[fromRow], this.state.tempRows[toRow], updated, action);\n    }\n  };\n\t/**\n\t * Method To bulk/individual select of rows\n\t * @param {*} rows is the selected row\n\t */\n  onRowsSelected = (rows) => {\n    this.setState({\n      selectedIndexes: this.state.selectedIndexes.concat(rows.map((r) => r.rowIdx)),\n    });\n    if (this.props.selectBulkData) {\n      this.props.selectBulkData(rows);\n    }\n  };\n\t/**\n\t * Method To bulk/individual deselect of rows\n\t * @param {*} rows is the deselected row\n\t */\n  onRowsDeselected = (rows) => {\n    let rowIndexes = rows.map((r) => r.rowIdx);\n    this.setState({\n      selectedIndexes: this.state.selectedIndexes.filter((i) => rowIndexes.indexOf(i) === -1),\n    });\n  };\n\n\t/**\n\t * Method To filter the multiple columns\n\t * @param {*} value is the  incoming filtering event\n\t */\n  handleFilterChange = (value) => {\n    let junk = this.state.junk;\n    if (!(value.filterTerm == null) && !(value.filterTerm.length <= 0)) {\n      junk[value.column.key] = value;\n    } else {\n      delete junk[value.column.key];\n    }\n    this.setState({ junk });\n    const data = this.getrows(this.state.filteringRows, this.state.junk);\n    this.setState({\n      rows: data,\n      tempRows: data,\n      count: data.length,\n    });\n    if (data.length === 0) {\n      this.props.handleWarningStatus();\n    }\n    else{\n      this.props.closeWarningStatus();\n    }\n  };\n  getrows = (rows, filters) => {\n    if (Object.keys(filters).length <= 0) {\n      filters = {};\n    }\n    selectors.getRows({ rows: [], filters: {} });\n    return selectors.getRows({ rows: rows, filters: filters });\n  };\n\n  /**\n * Method To render the filter values for filtering rows\n * @param {*} rows is the row data to be considered for filtering\n * @param {*} columnId is the specific columnId for which the row datas are being considered\n */\n  getValidFilterValues(rows, columnId) {\n    return rows\n      .map((r) => r[columnId])\n      .filter((item, i, a) => {\n        return i === a.indexOf(item);\n      });\n  }\n  /**\n* Method To sort the rows for a particular column\n* @param {*} data is the row datas to be considered for sorting\n* @param {*} sortColumn is the specific column for which the row sort is being triggered\n* @param {*} sortDirection is the type of sort\n*/\n  sortRows = (data, sortColumn, sortDirection) => {\n    const comparer = (a, b) => {\n      if (sortDirection === \"ASC\") {\n        return a[sortColumn] > b[sortColumn] ? 1 : -1;\n      } else if (sortDirection === \"DESC\") {\n        return a[sortColumn] < b[sortColumn] ? 1 : -1;\n      }\n    };\n    this.setState({\n      rows: [...data].sort(comparer),\n    });\n    return sortDirection === \"NONE\" ? data : this.state.rows;\n  };\n  /**\n     * Method To swap the columns\n     * @param {*} source is source column\n     * @param {*} target is the target column \n     */\n  onHeaderDrop = (source, target) => {\n    const stateCopy = Object.assign({}, this.state);\n    const columnSourceIndex = this.state.columns.findIndex((i) => i.key === source);\n    const columnTargetIndex = this.state.columns.findIndex((i) => i.key === target);\n\n    stateCopy.columns.splice(columnTargetIndex, 0, stateCopy.columns.splice(columnSourceIndex, 1)[0]);\n\n    const emptyColumns = Object.assign({}, this.state, {\n      columns: [],\n    });\n    this.setState(emptyColumns);\n\n    const reorderedColumns = Object.assign({}, this.state, {\n      columns: stateCopy.columns,\n    });\n    this.setState(reorderedColumns);\n  };\n  updateTableAsPerRowChooser = (inComingColumnsHeaderList, pinnedColumnsList) => {\n    var existingColumnsHeaderList = this.props.columns;\n    existingColumnsHeaderList = existingColumnsHeaderList.filter((item) => {\n      return inComingColumnsHeaderList.includes(item.name);\n    });\n\n    var rePositionedArray = existingColumnsHeaderList;\n    var singleHeaderOneList;\n    if (pinnedColumnsList.length > 0) {\n      pinnedColumnsList\n        .slice(0)\n        .reverse()\n        .map((item, index) => {\n          singleHeaderOneList = existingColumnsHeaderList.filter((subItem) => item === subItem.name);\n          rePositionedArray = this.array_move(\n            existingColumnsHeaderList,\n            existingColumnsHeaderList.indexOf(singleHeaderOneList[0]),\n            index\n          );\n        });\n    }\n\n    existingColumnsHeaderList = rePositionedArray;\n\t\t/**\n       making all the frozen attribute as false for all the columns and then \n       setting items of pinnedColumnsList as frozen = true\n       */\n    existingColumnsHeaderList.map((headerItem, index) => {\n      if (headerItem.frozen !== undefined && headerItem.frozen === true) {\n        existingColumnsHeaderList[index][\"frozen\"] = false;\n      }\n      if (pinnedColumnsList.includes(headerItem.name)) {\n        existingColumnsHeaderList[index][\"frozen\"] = true;\n      }\n    });\n\n    console.log(\"existingColumnsHeaderList \", existingColumnsHeaderList);\n\n    this.setState({\n      columns: existingColumnsHeaderList,\n    });\n\n    this.closeColumnReOrdering();\n  };\n\n\t/**\n\t * Method To re-position a particular object in an Array from old_index to new_index\n\t * @param {*} arr inComing array\n\t * @param {*} old_index initial index\n\t * @param {*} new_index final index\n\t */\n  array_move = (arr, old_index, new_index) => {\n    if (new_index >= arr.length) {\n      var k = new_index - arr.length + 1;\n      while (k--) {\n        arr.push(undefined);\n      }\n    }\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n    return arr;\n  };\n\n\t/**\n\t * Method to render the column Selector Pannel\n\t */\n  columnReorderingPannel = () => {\n    var headerNameList = [];\n    var existingPinnedHeadersList = [];\n    this.state.columns\n      .filter((item) => item.frozen !== undefined && item.frozen === true)\n      .map((item) => existingPinnedHeadersList.push(item.name));\n    this.state.columns.map((item) => headerNameList.push(item.name));\n    this.setState({\n      columnReorderingComponent: (\n        <ColumnReordering\n          maxLeftPinnedColumn={this.props.maxLeftPinnedColumn}\n          updateTableAsPerRowChooser={this.updateTableAsPerRowChooser}\n          headerKeys={headerNameList}\n          closeColumnReOrdering={this.closeColumnReOrdering}\n          existingPinnedHeadersList={existingPinnedHeadersList}\n          {...this.props}\n        />\n      ),\n    });\n  };\n\n\t/**\n\t * Method to stop the render the column Selector Pannel\n\t */\n  closeColumnReOrdering = () => {\n    this.setState({\n      columnReorderingComponent: null,\n    });\n  };\n  handleSearchValue = (value) => {\n\n    this.setState({ searchValue: value });\n  };\n  clearSearchValue = () => {\n    this.setState({ searchValue: \"\" });\n    this.setState({filteringRows:this.state.filteringRows})\n  };\n\n  sortingPanel = () => {\n    let columnField = [];\n    this.state.columns.map((item) => columnField.push(item.name));\n    this.setState({\n      sortingPanelComponent: <Sorting columnFieldValue={columnField} closeSorting={this.closeSorting} />,\n    });\n  };\n\n  closeSorting = () => {\n    this.setState({\n      sortingPanelComponent: null,\n    });\n  };\n\n  //Export Data Logic\n  exportColumnData = () => {\n    this.setState({\n      exportComponent: (\n        <ExportData rows={this.state.rows} columnsList={this.state.columns} closeExport={this.closeExport} />\n      ),\n    });\n  };\n\n  closeExport = () => {\n    this.setState({\n      exportComponent: null,\n    });\n  };\n  \n  render() {\n    return (\n      <div>\n        <div className='parentDiv'>\n          <div className='totalCount'>\n            Showing <strong> {this.state.count} </strong> records\n\t\t\t\t\t</div>\n          <div className='globalSearch'>\n            <i className=\"fa fa-search\"></i>\n            <FormControl\n              className=\"globalSeachInput\"\n              type='text'\n              placeholder=\"Search\"\n              onChange={(e) => {\n                this.handleSearchValue(e.target.value);\n                this.props.globalSearchLogic(e, this.state.tempRows);\n              }}\n              value={this.state.searchValue}\n            />\n          </div>\n          {/* <div className=\"filterIcons\">\n            <FontAwesomeIcon icon={faFilter} />\n          </div> */}\n          <div className='filterIcons' onClick={this.sortingPanel}>\n            <FontAwesomeIcon title='Group Sort' icon={faSortAmountDown} />\n            <FontAwesomeIcon icon={faSortDown} className='filterArrow' />\n          </div>\n          {this.state.sortingPanelComponent}\n          <div className='filterIcons' onClick={this.columnReorderingPannel}>\n            <FontAwesomeIcon title='Column Chooser' icon={faColumns} />\n            <FontAwesomeIcon icon={faSortDown} className='filterArrow' />\n          </div>\n          {this.state.columnReorderingComponent}\n          <div className='filterIcons'>\n            <FontAwesomeIcon title='Export' icon={faShareAlt} onClick={this.exportColumnData} />\n          </div>\n          {this.state.exportComponent}\n          {/* <div className=\"filterIcons\">\n            <FontAwesomeIcon title=\"Reload\" icon={faSyncAlt} />\n          </div> */}\n          {/* <div className=\"filterIcons\">\n            <FontAwesomeIcon icon={faAlignLeft} />\n          </div> */}\n        </div>\n        <ErrorMessage\n          className='errorDiv'\n          status={this.props.status}\n          closeWarningStatus={this.props.closeWarningStatus}\n          clearSearchValue={this.clearSearchValue}\n        />\n        <DraggableContainer className='gridDiv' onHeaderDrop={this.onHeaderDrop}>\n          <ExtDataGrid\n            toolbar={<Toolbar enableFilter={true} />}\n            getValidFilterValues={(columnKey) => this.getValidFilterValues(this.state.filteringRows, columnKey)}\n            minHeight={this.state.height}\n            columns={this.state.columns}\n            rowGetter={(i) => this.state.rows[i]}\n            rowsCount={this.state.rows.length}\n            onGridRowsUpdated={this.onGridRowsUpdated}\n            enableCellSelect={true}\n            onClearFilters={() => {\n              this.setState({ junk: {} });\n            }}\n            onColumnResize={(idx, width) => console.log(`Column ${idx} has been resized to ${width}`)}\n            onAddFilter={(filter) => this.handleFilterChange(filter)}\n            rowSelection={{\n              showCheckbox: true,\n              enableShiftSelect: true,\n              onRowsSelected: this.onRowsSelected,\n              onRowsDeselected: this.onRowsDeselected,\n              selectBy: {\n                indexes: this.state.selectedIndexes,\n              },\n            }}\n            onGridSort={(sortColumn, sortDirection) => this.sortRows(this.state.rows, sortColumn, sortDirection)}\n          //**************************/\n          //--Todo-- This is commented aspart of fixing column filtering \n          // cellRangeSelection={{\n          //   onComplete: this.setSelection,\n          // }}\n          //***********************/\n          />\n        </DraggableContainer>\n      </div>\n    );\n  }\n}\nexport default spreadsheet;\n"],"names":["ExtDataGrid","ReactDataGrid","componentDidMount","_mounted","dataGridComponent","document","getElementsByClassName","window","addEventListener","metricsUpdated","props","cellRangeSelection","onWindowMouseUp","componentWillUnmount","removeEventListener","applyFormula","obj","columnName","item","toString","charAt","operation","split","value","substring","length","reduce","a","b","Number","Math","min","apply","max","console","log","DatePicker","React","Component","constructor","state","Date","input","getInputNode","bind","getValue","onValueChanged","updated","date","dateTimeFormat","Intl","DateTimeFormat","year","month","day","formatToParts","column","key","ev","setState","target","render","ref","SEARCH_NOT_FOUNT_ERROR","ErrorMessage","status","setStatus","useState","useEffect","faTimes","e","closeWarningStatus","clearSearchValue","ItemTypes","COLUMN","style","cursor","ColumnItem","id","text","moveColumn","findColumn","originalIndex","index","isDragging","drag","useDrag","type","collect","monitor","end","dropResult","droppedId","getItem","didDrop","drop","useDrop","accept","canDrop","hover","draggedId","overIndex","opacity","node","ColumnsList","columns","setColumns","columnsArray","atIndex","update","$splice","filter","c","indexOf","display","flexWrap","map","ColumnReordering","resetColumnReorderList","columnReorderEntityList","isAllSelected","selectAllToColumnReOrderList","name","addToColumnReorderEntityList","typeToBeAdded","existingColumnReorderEntityList","existingLeftPinnedList","leftPinnedColumList","includes","push","filterColumnReorderList","searchKey","String","toLowerCase","existingList","filtererdColumnReorderList","columnSelectList","createColumnsArrayFromProps","colsList","faAlignJustify","maxLeftPinnedColumn","reArrangeLeftPinnedColumn","columHeaderName","unshift","subItem","headerKeys","existingPinnedHeadersList","setWrapperRef","handleClickOutside","wrapperRef","event","contains","closeColumnReOrdering","color","TouchBackend","enableMouseEvents","updateTableAsPerRowChooser","App","add","rowList","copy","i","clearAll","remove","splice","x","columnFieldValue","faCopy","faTrash","closeSorting","faPlus","downLaodFileType","ExportData","resetColumnExportList","columnEntityList","selectAllToColumnList","columnsList","addToColumnEntityList","existingColumnEntityList","selectDownLoadType","checked","exportRowData","columnVlaueList","rows","forEach","row","keys","Object","getOwnPropertyNames","filteredColumnVal","filteredRow","downloadPDF","downloadXLSFile","downloadCSVFile","unit","size","orientation","marginLeft","doc","jsPDF","setFontSize","title","headers","dataValues","content","startY","head","body","autoTable","save","fileType","fileExtension","fileName","ws","XLSX","json_to_sheet","wb","Sheets","data","SheetNames","excelBuffer","bookType","Blob","FileSaver","columnSearchLogic","filteredRows","columnValueList","exportValidation","columnLength","fileLength","clickTag","warning","closeExport","faFilePdf","faFileExcel","faFileCsv","DraggableHeader","DraggableContainer","require","DropDownEditor","Editors","defaultParsePaste","str","selectors","Data","Selectors","AutoCompleteFilter","NumericFilter","Filters","spreadsheet","updateRows","startIdx","newRows","slice","rowGetter","handleCopy","preventDefault","topLeft","botRight","range","rowIdx","colIdx","col","join","clipboardData","setData","handlePaste","pasteData","getData","rowData","j","setSelection","args","idx","bottomRight","sortRows","sortColumn","sortDirection","comparer","sort","onGridRowsUpdated","fromRow","toRow","action","formulaAppliedCols","undefined","filteringRows","tempRows","updateCellData","onRowsSelected","selectedIndexes","concat","r","selectBulkData","onRowsDeselected","rowIndexes","handleFilterChange","junk","filterTerm","getrows","count","handleWarningStatus","filters","getRows","onHeaderDrop","source","stateCopy","assign","columnSourceIndex","findIndex","columnTargetIndex","emptyColumns","reorderedColumns","inComingColumnsHeaderList","pinnedColumnsList","existingColumnsHeaderList","rePositionedArray","singleHeaderOneList","reverse","array_move","headerItem","frozen","arr","old_index","new_index","k","columnReorderingPannel","headerNameList","columnReorderingComponent","handleSearchValue","searchValue","sortingPanel","columnField","sortingPanelComponent","Sorting","exportColumnData","exportComponent","airportCodes","height","displayNoRows","searchIconDisplay","editor","filterRenderer","formulaApplicable","componentWillReceiveProps","textValue","getValidFilterValues","columnId","globalSearchLogic","faSortAmountDown","faSortDown","faColumns","faShareAlt","columnKey","width","showCheckbox","enableShiftSelect","selectBy","indexes"],"mappings":"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"}