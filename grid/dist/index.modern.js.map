{"version":3,"file":"index.modern.js","sources":["../src/Functions/RowSelector.js","../src/Functions/DefaultColumnFilter.js","../src/Functions/GlobalFilter.js","../src/Overlays/managecolumns/ItemTypes.js","../src/Overlays/managecolumns/columnItem.js","../src/Overlays/managecolumns/columnsList.js","../src/Overlays/managecolumns/index.js","../src/index.js"],"sourcesContent":["import React, { forwardRef, useRef, useEffect, useState, memo } from \"react\";\r\n\r\nconst RowSelector = memo(\r\n    forwardRef(({ indeterminate, ...rest }, ref) => {\r\n        const [checkValue, setCheckValue] = useState(indeterminate);\r\n        const defaultRef = useRef();\r\n        const resolvedRef = ref || defaultRef;\r\n        const onChange = () => {\r\n            setCheckValue(!indeterminate);\r\n        };\r\n        useEffect(() => {\r\n            resolvedRef.current.indeterminate = indeterminate;\r\n        }, [resolvedRef, indeterminate]);\r\n        return (\r\n            <div className=\"check-wrap\">\r\n                <input type=\"checkbox\" checked={checkValue} onChange={onChange} ref={resolvedRef} {...rest} />\r\n            </div>\r\n        );\r\n    })\r\n);\r\n\r\nexport default RowSelector;\r\n","import React, { memo } from \"react\";\r\n\r\nconst DefaultColumnFilter = memo(({ column: { filterValue, setFilter } }) => {\r\n    return (\r\n        <input\r\n            className=\"txt\"\r\n            value={filterValue || \"\"}\r\n            onChange={(e) => {\r\n                setFilter(e.target.value || undefined);\r\n            }}\r\n            placeholder=\"Search\"\r\n        />\r\n    );\r\n});\r\n\r\nexport default DefaultColumnFilter;\r\n","import React, { memo, useState } from \"react\";\r\nimport { useAsyncDebounce } from \"react-table\";\r\n\r\nconst GlobalFilter = memo(({ globalFilter, setGlobalFilter }) => {\r\n    const [value, setValue] = useState(globalFilter);\r\n\r\n    const onChange = useAsyncDebounce((value) => {\r\n        setGlobalFilter(value || undefined);\r\n    }, 200);\r\n\r\n    return (\r\n        <div className=\"txt-wrap\">\r\n            <input\r\n                type=\"text\"\r\n                value={value || \"\"}\r\n                onChange={(e) => {\r\n                    setValue(e.target.value);\r\n                    onChange(e.target.value);\r\n                }}\r\n                className=\"txt\"\r\n                placeholder=\"Search\"\r\n            />\r\n            <i className=\"fa fa-search fa-6\" aria-hidden=\"true\"></i>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default GlobalFilter;\r\n","export const ItemTypes = {\r\n    COLUMN: \"column\"\r\n};\r\n","import React from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\n\r\nconst style = {\r\n    cursor: \"move\"\r\n};\r\n\r\nconst ColumnItem = ({ id, text, moveColumn, findColumn }) => {\r\n    const originalIndex = findColumn(id).index;\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        item: { type: ItemTypes.COLUMN, id, originalIndex },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging()\r\n        }),\r\n        end: (dropResult, monitor) => {\r\n            const { id: droppedId, originalIndex } = monitor.getItem();\r\n            const didDrop = monitor.didDrop();\r\n            if (!didDrop) {\r\n                moveColumn(droppedId, originalIndex);\r\n            }\r\n        }\r\n    });\r\n\r\n    const [, drop] = useDrop({\r\n        accept: ItemTypes.COLUMN,\r\n        canDrop: () => false,\r\n        hover({ id: draggedId }) {\r\n            if (draggedId !== id) {\r\n                const { index: overIndex } = findColumn(id);\r\n                moveColumn(draggedId, overIndex);\r\n            }\r\n        }\r\n    });\r\n\r\n    const opacity = isDragging ? 0.5 : 1;\r\n\r\n    return (\r\n        <div ref={(node) => drag(drop(node))} style={{ ...style, opacity }}>\r\n            {text}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ColumnItem;\r\n","import React, { useState } from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport update from \"immutability-helper\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\nimport ColumnItem from \"./columnItem\";\r\n\r\nconst ColumnsArray = [\r\n    {\r\n        id: 1,\r\n        text: (\r\n            <div className=\"column__reorder\">\r\n                <div className=\"\">\r\n                    <i className=\"fa fa-align-justify\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\"\">AWB Number 1</div>\r\n                <div className=\"column__wrap\">\r\n                    <div className=\"column__checkbox\">\r\n                        <input type=\"checkbox\"></input>\r\n                    </div>\r\n                    <div className=\"column__txt\">Pin Left</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 2,\r\n        text: (\r\n            <div className=\"column__reorder\">\r\n                <div className=\"\">\r\n                    <i className=\"fa fa-align-justify\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\"\">AWB Number 2</div>\r\n                <div className=\"column__wrap\">\r\n                    <div className=\"column__checkbox\">\r\n                        <input type=\"checkbox\"></input>\r\n                    </div>\r\n                    <div className=\"column__txt\">Pin Left</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 3,\r\n        text: (\r\n            <div className=\"column__reorder\">\r\n                <div className=\"\">\r\n                    <i className=\"fa fa-align-justify\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\"\">AWB Number 3</div>\r\n                <div className=\"column__wrap\">\r\n                    <div className=\"column__checkbox\">\r\n                        <input type=\"checkbox\"></input>\r\n                    </div>\r\n                    <div className=\"column__txt\">Pin Left</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 4,\r\n        text: (\r\n            <div className=\"column__reorder\">\r\n                <div className=\"\">\r\n                    <i className=\"fa fa-align-justify\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\"\">AWB Number 4</div>\r\n                <div className=\"column__wrap\">\r\n                    <div className=\"column__checkbox\">\r\n                        <input type=\"checkbox\"></input>\r\n                    </div>\r\n                    <div className=\"column__txt\">Pin Left</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 5,\r\n        text: (\r\n            <div className=\"column__reorder\">\r\n                <div className=\"\">\r\n                    <i className=\"fa fa-align-justify\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\"\">AWB Number 5</div>\r\n                <div className=\"column__wrap\">\r\n                    <div className=\"column__checkbox\">\r\n                        <input type=\"checkbox\"></input>\r\n                    </div>\r\n                    <div className=\"column__txt\">Pin Left</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 6,\r\n        text: (\r\n            <div className=\"column__reorder\">\r\n                <div className=\"\">\r\n                    <i className=\"fa fa-align-justify\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\"\">AWB Number 6</div>\r\n                <div className=\"column__wrap\">\r\n                    <div className=\"column__checkbox\">\r\n                        <input type=\"checkbox\"></input>\r\n                    </div>\r\n                    <div className=\"column__txt\">Pin Left</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 7,\r\n        text: (\r\n            <div className=\"column__reorder\">\r\n                <div className=\"\">\r\n                    <i className=\"fa fa-align-justify\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\"\">AWB Number 7</div>\r\n                <div className=\"column__wrap\">\r\n                    <div className=\"column__checkbox\">\r\n                        <input type=\"checkbox\"></input>\r\n                    </div>\r\n                    <div className=\"column__txt\">Pin Left</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 8,\r\n        text: (\r\n            <div className=\"column__reorder\">\r\n                <div className=\"\">\r\n                    <i className=\"fa fa-align-justify\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\"\">AWB Number 8</div>\r\n                <div className=\"column__wrap\">\r\n                    <div className=\"column__checkbox\">\r\n                        <input type=\"checkbox\"></input>\r\n                    </div>\r\n                    <div className=\"column__txt\">Pin Left</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 9,\r\n        text: (\r\n            <div className=\"column__reorder\">\r\n                <div className=\"\">\r\n                    <i className=\"fa fa-align-justify\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\"\">AWB Number 9</div>\r\n                <div className=\"column__wrap\">\r\n                    <div className=\"column__checkbox\">\r\n                        <input type=\"checkbox\"></input>\r\n                    </div>\r\n                    <div className=\"column__txt\">Pin Left</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n];\r\n\r\nconst ColumnsList = () => {\r\n    const [columns, setColumns] = useState(ColumnsArray);\r\n\r\n    const moveColumn = (id, atIndex) => {\r\n        const { column, index } = findColumn(id);\r\n        setColumns(\r\n            update(columns, {\r\n                $splice: [\r\n                    [index, 1],\r\n                    [atIndex, 0, column]\r\n                ]\r\n            })\r\n        );\r\n    };\r\n\r\n    const findColumn = (id) => {\r\n        const column = columns.filter((c) => `${c.id}` === id)[0];\r\n        return {\r\n            column,\r\n            index: columns.indexOf(column)\r\n        };\r\n    };\r\n\r\n    const [, drop] = useDrop({ accept: ItemTypes.COLUMN });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div ref={drop} style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                {columns.map((column) => (\r\n                    <ColumnItem\r\n                        key={column.id}\r\n                        id={`${column.id}`}\r\n                        text={column.text}\r\n                        moveColumn={moveColumn}\r\n                        findColumn={findColumn}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ColumnsList;\r\n","import React from \"react\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport { TouchBackend } from \"react-dnd-touch-backend\";\r\nimport MultiBackend, { TouchTransition } from \"react-dnd-multi-backend\";\r\nimport ColumnsList from \"./columnsList\";\r\n\r\nconst ColumnReordering = (props) => {\r\n    const { isManageColumnOpen, manageColumns } = props;\r\n\r\n    const HTML5toTouch = {\r\n        backends: [\r\n            {\r\n                backend: HTML5Backend\r\n            },\r\n            {\r\n                backend: TouchBackend,\r\n                options: { enableMouseEvents: true },\r\n                preview: true,\r\n                transition: TouchTransition\r\n            }\r\n        ]\r\n    };\r\n\r\n    if (isManageColumnOpen) {\r\n        return (\r\n            <div className=\"columns--grid\">\r\n                <div className=\"column__grid\">\r\n                    <div className=\"column__chooser\">\r\n                        <div className=\"column__header\">\r\n                            <div className=\"\">\r\n                                <strong>Column Chooser</strong>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"column__body\">\r\n                            <div>\r\n                                <input type=\"text\" placeholder=\"Search column\" className=\"custom__ctrl\"></input>\r\n                            </div>\r\n                            <div className=\"column__selectAll\">\r\n                                <a href=\"\" className=\"column__selectTxt\">\r\n                                    Select All\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"column__wrap\">\r\n                                <div className=\"column__checkbox\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                </div>\r\n                                <div className=\"column__txt\">AWB Number</div>\r\n                            </div>\r\n                            <div className=\"column__wrap\">\r\n                                <div className=\"column__checkbox\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                </div>\r\n                                <div className=\"column__txt\">AWB Number</div>\r\n                            </div>\r\n                            <div className=\"column__wrap\">\r\n                                <div className=\"column__checkbox\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                </div>\r\n                                <div className=\"column__txt\">AWB Number</div>\r\n                            </div>\r\n                            <div className=\"column__wrap\">\r\n                                <div className=\"column__checkbox\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                </div>\r\n                                <div className=\"column__txt\">AWB Number</div>\r\n                            </div>\r\n                            <div className=\"column__wrap\">\r\n                                <div className=\"column__checkbox\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                </div>\r\n                                <div className=\"column__txt\">AWB Number</div>\r\n                            </div>\r\n                            <div className=\"column__wrap\">\r\n                                <div className=\"column__checkbox\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                </div>\r\n                                <div className=\"column__txt\">AWB Number</div>\r\n                            </div>\r\n                            <div className=\"column__wrap\">\r\n                                <div className=\"column__checkbox\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                </div>\r\n                                <div className=\"column__txt\">AWB Number</div>\r\n                            </div>\r\n                            <div className=\"column__wrap\">\r\n                                <div className=\"column__checkbox\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                </div>\r\n                                <div className=\"column__txt\">AWB Number</div>\r\n                            </div>\r\n                            <div className=\"column__wrap\">\r\n                                <div className=\"column__checkbox\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                </div>\r\n                                <div className=\"column__txt\">AWB Number</div>\r\n                            </div>\r\n                            <div className=\"column__wrap\">\r\n                                <div className=\"column__checkbox\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                </div>\r\n                                <div className=\"column__txt\">AWB Number</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column__settings\">\r\n                        <div className=\"column__header\">\r\n                            <div className=\"column__headerTxt\">\r\n                                <strong>Column Setting</strong>\r\n                            </div>\r\n                            <div className=\"column__close\" onClick={manageColumns}>\r\n                                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"column__body\">\r\n                            <DndProvider backend={MultiBackend} options={HTML5toTouch}>\r\n                                <ColumnsList />\r\n                            </DndProvider>\r\n                        </div>\r\n                        <div className=\"column__footer\">\r\n                            <div className=\"column__btns\">\r\n                                <button className=\"btns\">Reset</button>\r\n                                <button className=\"btns\" onClick={manageColumns}>\r\n                                    Cancel\r\n                                </button>\r\n                                <button className=\"btns btns__save\">Save</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <div></div>;\r\n    }\r\n};\r\n\r\nexport default ColumnReordering;\r\n","import React, { useCallback, useState, memo, useEffect, createRef, useMemo } from \"react\";\r\nimport {\r\n    useTable,\r\n    useResizeColumns,\r\n    useFlexLayout,\r\n    useRowSelect,\r\n    useSortBy,\r\n    useFilters,\r\n    useGlobalFilter,\r\n    useExpanded\r\n} from \"react-table\";\r\nimport { VariableSizeList as List } from \"react-window\";\r\nimport AutoSizer from \"react-virtualized-auto-sizer\";\r\nimport InfiniteLoader from \"react-window-infinite-loader\";\r\nimport RowSelector from \"./Functions/RowSelector\";\r\nimport DefaultColumnFilter from \"./Functions/DefaultColumnFilter\";\r\nimport GlobalFilter from \"./Functions/GlobalFilter\";\r\nimport ColumnReordering from \"./Overlays/managecolumns\";\r\n\r\nconst listRef = createRef(null);\r\n\r\nconst Grid = memo((props) => {\r\n    const {\r\n        title,\r\n        gridHeight,\r\n        gridWidth,\r\n        columns,\r\n        data,\r\n        globalSearchLogic,\r\n        updateCellData,\r\n        selectBulkData,\r\n        calculateRowHeight,\r\n        renderExpandedContent,\r\n        hasNextPage,\r\n        isNextPageLoading,\r\n        loadNextPage\r\n    } = props;\r\n\r\n    //Display error message if data or columns configuration is missing.\r\n    if (!(data && data.length > 0) || !(columns && columns.length > 0)) {\r\n        return <h2 style={{ marginTop: \"50px\", textAlign: \"center\" }}>Invalid Data or Columns Configuration</h2>;\r\n    }\r\n\r\n    //Variables used for handling infinite loading\r\n    const itemCount = hasNextPage ? data.length + 1 : data.length;\r\n    const loadMoreItems = isNextPageLoading ? () => {} : loadNextPage ? loadNextPage : () => {};\r\n    const isItemLoaded = (index) => !hasNextPage || index < data.length;\r\n\r\n    //Local state value for checking if column filter is open/closed\r\n    const [isFilterOpen, setFilterOpen] = useState(false);\r\n\r\n    //Toggle column filter state value based on UI clicks\r\n    const toggleColumnFilter = () => {\r\n        setFilterOpen(!isFilterOpen);\r\n    };\r\n\r\n    //Local state value for hiding/unhiding column management overlay\r\n    const [isManageColumnOpen, setManageColumnOpen] = useState(false);\r\n\r\n    //Toggle column manage overlay show/hide state value based on UI clicks\r\n    const manageColumns = () => {\r\n        setManageColumnOpen(!isManageColumnOpen);\r\n    };\r\n\r\n    //Column filter added for all columns by default\r\n    const defaultColumn = useMemo(\r\n        () => ({\r\n            Filter: DefaultColumnFilter\r\n        }),\r\n        []\r\n    );\r\n\r\n    //Initialize react-table instance with the values received through properties\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        selectedFlatRows,\r\n        state,\r\n        setGlobalFilter\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n            defaultColumn,\r\n            updateCellData,\r\n            globalFilter: (rows, columns, filterValue) => {\r\n                //Call global search function defined in application, if it is present\r\n                if (globalSearchLogic && typeof globalSearchLogic === \"function\") {\r\n                    return globalSearchLogic(rows, columns, filterValue);\r\n                } else {\r\n                    return rows;\r\n                }\r\n            },\r\n            autoResetFilters: false,\r\n            autoResetGlobalFilter: false,\r\n            autoResetSortBy: false,\r\n            autoResetExpanded: false,\r\n            autoResetSelectedRows: false\r\n        },\r\n        useFilters,\r\n        useGlobalFilter,\r\n        useSortBy,\r\n        useExpanded,\r\n        useRowSelect,\r\n        useFlexLayout,\r\n        useResizeColumns,\r\n        (hooks) => {\r\n            //Add checkbox for all rows in grid, with different properties for header row and body rows\r\n            hooks.allColumns.push((columns) => [\r\n                {\r\n                    id: \"selection\",\r\n                    disableResizing: true,\r\n                    disableFilters: true,\r\n                    disableSortBy: true,\r\n                    minWidth: 35,\r\n                    width: 35,\r\n                    maxWidth: 35,\r\n                    Header: ({ getToggleAllRowsSelectedProps }) => <RowSelector {...getToggleAllRowsSelectedProps()} />,\r\n                    Cell: ({ row }) => <RowSelector {...row.getToggleRowSelectedProps()} />\r\n                },\r\n                ...columns\r\n            ]);\r\n        }\r\n    );\r\n\r\n    //Export selected row data and pass it to the callback method\r\n    const bulkSelector = () => {\r\n        if (selectBulkData) {\r\n            selectBulkData(selectedFlatRows);\r\n        }\r\n    };\r\n\r\n    //This code is to handle the row height calculation while expanding a row or resizing a column\r\n    useEffect(() => {\r\n        if (listRef && listRef.current) {\r\n            listRef.current.resetAfterIndex(0, true);\r\n        }\r\n    });\r\n\r\n    //Render each row and cells in each row, using attributes from react window list.\r\n    const RenderRow = useCallback(\r\n        ({ index, style }) => {\r\n            if (isItemLoaded(index)) {\r\n                const row = rows[index];\r\n                prepareRow(row);\r\n                return (\r\n                    <div {...row.getRowProps({ style })} className=\"table-row tr\">\r\n                        <div className=\"table-row-wrap\">\r\n                            {row.cells.map((cell) => {\r\n                                return (\r\n                                    <div {...cell.getCellProps()} className=\"table-cell td\">\r\n                                        {cell.render(\"Cell\")}\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        {/*Check if row eapand icon is clicked, and if yes, call function to bind content to the expanded region*/}\r\n                        {row.isExpanded ? (\r\n                            <div className=\"expand\">{renderExpandedContent ? renderExpandedContent(row) : null}</div>\r\n                        ) : null}\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n        [prepareRow, rows, renderExpandedContent]\r\n    );\r\n\r\n    //Render table title, global search component, button to show/hide column filter, button to export selected row data & the grid\r\n    //Use properties and methods provided by react-table\r\n    //Autosizer used for calculating grid height (don't consider window width and column resizing value changes)\r\n    //Infinite loader used for lazy loading, with the properties passed here and other values calculated at the top\r\n    //React window list is used for implementing virtualization, specifying the item count in a frame and height of each rows in it.\r\n    return (\r\n        <div className=\"wrapper\" style={{ width: gridWidth ? gridWidth : \"100%\" }}>\r\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n            <div className=\"table-filter\">\r\n                <div className=\"results\">\r\n                    <div className=\"name\">\r\n                        <strong>{rows.length}</strong>\r\n                        <span> {title ? title : \"Rows\"}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"filter-utilities\">\r\n                    <ColumnReordering isManageColumnOpen={isManageColumnOpen} manageColumns={manageColumns} />\r\n                    <GlobalFilter globalFilter={state.globalFilter} setGlobalFilter={setGlobalFilter} />\r\n                    <div className=\"filter-icon keyword-search\" onClick={toggleColumnFilter}>\r\n                        <i className=\"fa fa-filter\" aria-hidden=\"true\"></i>\r\n                    </div>\r\n                    <div className=\"filter-icon bulk-select\" onClick={bulkSelector}>\r\n                        <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\r\n                    </div>\r\n                    <div className=\"filter-icon manage-columns\" onClick={manageColumns}>\r\n                        <i className=\"fa fa-columns\" aria-hidden=\"true\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div\r\n                className=\"tableContainer table-outer\"\r\n                style={{ height: gridHeight ? gridHeight : \"50vh\", overflowX: \"auto\", overflowY: \"hidden\" }}\r\n            >\r\n                <AutoSizer disableWidth disableResizing>\r\n                    {({ height }) => (\r\n                        <div {...getTableProps()} className=\"table\">\r\n                            <div className=\"thead table-row table-row--head\">\r\n                                {headerGroups.map((headerGroup) => (\r\n                                    <div {...headerGroup.getHeaderGroupProps()} className=\"tr\">\r\n                                        {headerGroup.headers.map((column) => (\r\n                                            <div {...column.getHeaderProps()} className=\"table-cell column-heading th\">\r\n                                                <div {...column.getSortByToggleProps()}>\r\n                                                    {column.render(\"Header\")}\r\n                                                    <span>\r\n                                                        {column.isSorted ? (\r\n                                                            column.isSortedDesc ? (\r\n                                                                <i className=\"fa fa-sort-desc\" aria-hidden=\"true\"></i>\r\n                                                            ) : (\r\n                                                                <i className=\"fa fa-sort-asc\" aria-hidden=\"true\"></i>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            \"\"\r\n                                                        )}\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div className={`txt-wrap column-filter ${isFilterOpen ? \"open\" : \"\"}`}>\r\n                                                    {!column.disableFilters ? column.render(\"Filter\") : null}\r\n                                                </div>\r\n                                                {column.canResize && <div {...column.getResizerProps()} className=\"resizer\" />}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div {...getTableBodyProps()} className=\"tbody\">\r\n                                <InfiniteLoader isItemLoaded={isItemLoaded} itemCount={itemCount} loadMoreItems={loadMoreItems}>\r\n                                    {({ onItemsRendered, ref }) => (\r\n                                        <List\r\n                                            ref={(list) => {\r\n                                                ref(list);\r\n                                                listRef.current = list;\r\n                                            }}\r\n                                            style={{ overflowX: \"hidden\" }}\r\n                                            height={height - 60}\r\n                                            itemCount={rows.length}\r\n                                            itemSize={(index) => {\r\n                                                if (calculateRowHeight && typeof calculateRowHeight === \"function\") {\r\n                                                    return calculateRowHeight(rows, index, headerGroups);\r\n                                                } else {\r\n                                                    return 70;\r\n                                                }\r\n                                            }}\r\n                                            onItemsRendered={onItemsRendered}\r\n                                            overscanCount={20}\r\n                                        >\r\n                                            {RenderRow}\r\n                                        </List>\r\n                                    )}\r\n                                </InfiniteLoader>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </AutoSizer>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Grid;\r\n"],"names":["RowSelector","memo","forwardRef","indeterminate","rest","ref","checkValue","setCheckValue","useState","defaultRef","useRef","resolvedRef","onChange","useEffect","current","DefaultColumnFilter","column","filterValue","setFilter","e","target","value","undefined","GlobalFilter","globalFilter","setGlobalFilter","setValue","useAsyncDebounce","ItemTypes","COLUMN","style","cursor","ColumnItem","id","text","moveColumn","findColumn","originalIndex","index","isDragging","drag","useDrag","item","type","collect","monitor","end","dropResult","droppedId","getItem","didDrop","drop","useDrop","accept","canDrop","hover","draggedId","overIndex","opacity","node","ColumnsArray","ColumnsList","columns","setColumns","atIndex","update","$splice","filter","c","indexOf","display","flexWrap","map","ColumnReordering","props","isManageColumnOpen","manageColumns","HTML5toTouch","backends","backend","HTML5Backend","TouchBackend","options","enableMouseEvents","preview","transition","TouchTransition","MultiBackend","listRef","createRef","Grid","title","gridHeight","gridWidth","data","globalSearchLogic","updateCellData","selectBulkData","calculateRowHeight","renderExpandedContent","hasNextPage","isNextPageLoading","loadNextPage","length","marginTop","textAlign","itemCount","loadMoreItems","isItemLoaded","isFilterOpen","setFilterOpen","toggleColumnFilter","setManageColumnOpen","defaultColumn","useMemo","Filter","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","selectedFlatRows","state","useTable","autoResetFilters","autoResetGlobalFilter","autoResetSortBy","autoResetExpanded","autoResetSelectedRows","useFilters","useGlobalFilter","useSortBy","useExpanded","useRowSelect","useFlexLayout","useResizeColumns","hooks","allColumns","push","disableResizing","disableFilters","disableSortBy","minWidth","width","maxWidth","Header","getToggleAllRowsSelectedProps","Cell","row","getToggleRowSelectedProps","bulkSelector","resetAfterIndex","RenderRow","useCallback","getRowProps","cells","cell","getCellProps","render","isExpanded","height","overflowX","overflowY","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","canResize","getResizerProps","onItemsRendered","List","list"],"mappings":"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"}