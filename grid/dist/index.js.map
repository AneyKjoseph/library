{"version":3,"file":"index.js","sources":["../src/Functions/RowSelector.js","../src/Functions/DefaultColumnFilter.js","../src/Functions/GlobalFilter.js","../src/Overlays/managecolumns/ItemTypes.js","../src/Overlays/managecolumns/columnItem.js","../src/Overlays/managecolumns/columnsList.js","../src/Overlays/managecolumns/index.js","../src/index.js"],"sourcesContent":["import React, { forwardRef, useRef, useEffect, useState, memo } from \"react\";\r\n\r\nconst RowSelector = memo(\r\n    forwardRef(({ indeterminate, ...rest }, ref) => {\r\n        const [checkValue, setCheckValue] = useState(indeterminate);\r\n        const defaultRef = useRef();\r\n        const resolvedRef = ref || defaultRef;\r\n        const onChange = () => {\r\n            setCheckValue(!indeterminate);\r\n        };\r\n        useEffect(() => {\r\n            resolvedRef.current.indeterminate = indeterminate;\r\n        }, [resolvedRef, indeterminate]);\r\n        return (\r\n            <div className=\"check-wrap\">\r\n                <input type=\"checkbox\" checked={checkValue} onChange={onChange} ref={resolvedRef} {...rest} />\r\n            </div>\r\n        );\r\n    })\r\n);\r\n\r\nexport default RowSelector;\r\n","import React, { memo } from \"react\";\r\n\r\nconst DefaultColumnFilter = memo(({ column: { filterValue, setFilter } }) => {\r\n    return (\r\n        <input\r\n            className=\"txt\"\r\n            value={filterValue || \"\"}\r\n            onChange={(e) => {\r\n                setFilter(e.target.value || undefined);\r\n            }}\r\n            placeholder=\"Search\"\r\n        />\r\n    );\r\n});\r\n\r\nexport default DefaultColumnFilter;\r\n","import React, { memo, useState } from \"react\";\r\nimport { useAsyncDebounce } from \"react-table\";\r\n\r\nconst GlobalFilter = memo(({ globalFilter, setGlobalFilter }) => {\r\n    const [value, setValue] = useState(globalFilter);\r\n\r\n    const onChange = useAsyncDebounce((value) => {\r\n        setGlobalFilter(value || undefined);\r\n    }, 200);\r\n\r\n    return (\r\n        <div className=\"txt-wrap\">\r\n            <input\r\n                type=\"text\"\r\n                value={value || \"\"}\r\n                onChange={(e) => {\r\n                    setValue(e.target.value);\r\n                    onChange(e.target.value);\r\n                }}\r\n                className=\"txt\"\r\n                placeholder=\"Search\"\r\n            />\r\n            <i className=\"fa fa-search fa-6\" aria-hidden=\"true\"></i>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default GlobalFilter;\r\n","export const ItemTypes = {\r\n    COLUMN: \"column\"\r\n};\r\n","import React from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\n\r\nconst style = {\r\n    cursor: \"move\"\r\n};\r\n\r\nconst ColumnItem = ({ id, text, moveColumn, findColumn }) => {\r\n    const originalIndex = findColumn(id).index;\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        item: { type: ItemTypes.COLUMN, id, originalIndex },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging()\r\n        }),\r\n        end: (dropResult, monitor) => {\r\n            const { id: droppedId, originalIndex } = monitor.getItem();\r\n            const didDrop = monitor.didDrop();\r\n            if (!didDrop) {\r\n                moveColumn(droppedId, originalIndex);\r\n            }\r\n        }\r\n    });\r\n\r\n    const [, drop] = useDrop({\r\n        accept: ItemTypes.COLUMN,\r\n        canDrop: () => false,\r\n        hover({ id: draggedId }) {\r\n            if (draggedId !== id) {\r\n                const { index: overIndex } = findColumn(id);\r\n                moveColumn(draggedId, overIndex);\r\n            }\r\n        }\r\n    });\r\n\r\n    const opacity = isDragging ? 0 : 1;\r\n\r\n    return (\r\n        <div ref={(node) => drag(drop(node))} style={{ ...style, opacity }}>\r\n            {text}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ColumnItem;\r\n","import React, { useState } from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport update from \"immutability-helper\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\nimport ColumnItem from \"./columnItem\";\r\n\r\nconst ColumnsArray = [\r\n    {\r\n        id: 1,\r\n        text: (\r\n            <div className=\"column__reorder\">\r\n                <div className=\"\">\r\n                    <i className=\"fa fa-align-justify\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\"\">AWB Number 1</div>\r\n                <div className=\"column__wrap\">\r\n                    <div className=\"column__checkbox\">\r\n                        <input type=\"checkbox\"></input>\r\n                    </div>\r\n                    <div className=\"column__txt\">Pin Left</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 2,\r\n        text: (\r\n            <div className=\"column__reorder\">\r\n                <div className=\"\">\r\n                    <i className=\"fa fa-align-justify\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\"\">AWB Number 2</div>\r\n                <div className=\"column__wrap\">\r\n                    <div className=\"column__checkbox\">\r\n                        <input type=\"checkbox\"></input>\r\n                    </div>\r\n                    <div className=\"column__txt\">Pin Left</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 3,\r\n        text: (\r\n            <div className=\"column__reorder\">\r\n                <div className=\"\">\r\n                    <i className=\"fa fa-align-justify\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\"\">AWB Number 3</div>\r\n                <div className=\"column__wrap\">\r\n                    <div className=\"column__checkbox\">\r\n                        <input type=\"checkbox\"></input>\r\n                    </div>\r\n                    <div className=\"column__txt\">Pin Left</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 4,\r\n        text: (\r\n            <div className=\"column__reorder\">\r\n                <div className=\"\">\r\n                    <i className=\"fa fa-align-justify\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\"\">AWB Number 4</div>\r\n                <div className=\"column__wrap\">\r\n                    <div className=\"column__checkbox\">\r\n                        <input type=\"checkbox\"></input>\r\n                    </div>\r\n                    <div className=\"column__txt\">Pin Left</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 5,\r\n        text: (\r\n            <div className=\"column__reorder\">\r\n                <div className=\"\">\r\n                    <i className=\"fa fa-align-justify\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\"\">AWB Number 5</div>\r\n                <div className=\"column__wrap\">\r\n                    <div className=\"column__checkbox\">\r\n                        <input type=\"checkbox\"></input>\r\n                    </div>\r\n                    <div className=\"column__txt\">Pin Left</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 6,\r\n        text: (\r\n            <div className=\"column__reorder\">\r\n                <div className=\"\">\r\n                    <i className=\"fa fa-align-justify\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\"\">AWB Number 6</div>\r\n                <div className=\"column__wrap\">\r\n                    <div className=\"column__checkbox\">\r\n                        <input type=\"checkbox\"></input>\r\n                    </div>\r\n                    <div className=\"column__txt\">Pin Left</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 7,\r\n        text: (\r\n            <div className=\"column__reorder\">\r\n                <div className=\"\">\r\n                    <i className=\"fa fa-align-justify\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\"\">AWB Number 7</div>\r\n                <div className=\"column__wrap\">\r\n                    <div className=\"column__checkbox\">\r\n                        <input type=\"checkbox\"></input>\r\n                    </div>\r\n                    <div className=\"column__txt\">Pin Left</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 8,\r\n        text: (\r\n            <div className=\"column__reorder\">\r\n                <div className=\"\">\r\n                    <i className=\"fa fa-align-justify\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\"\">AWB Number 8</div>\r\n                <div className=\"column__wrap\">\r\n                    <div className=\"column__checkbox\">\r\n                        <input type=\"checkbox\"></input>\r\n                    </div>\r\n                    <div className=\"column__txt\">Pin Left</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        id: 9,\r\n        text: (\r\n            <div className=\"column__reorder\">\r\n                <div className=\"\">\r\n                    <i className=\"fa fa-align-justify\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\"\">AWB Number 9</div>\r\n                <div className=\"column__wrap\">\r\n                    <div className=\"column__checkbox\">\r\n                        <input type=\"checkbox\"></input>\r\n                    </div>\r\n                    <div className=\"column__txt\">Pin Left</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n];\r\n\r\nconst ColumnsList = () => {\r\n    const [columns, setColumns] = useState(ColumnsArray);\r\n\r\n    const moveColumn = (id, atIndex) => {\r\n        const { column, index } = findColumn(id);\r\n        setColumns(\r\n            update(columns, {\r\n                $splice: [\r\n                    [index, 1],\r\n                    [atIndex, 0, column]\r\n                ]\r\n            })\r\n        );\r\n    };\r\n\r\n    const findColumn = (id) => {\r\n        const column = columns.filter((c) => `${c.id}` === id)[0];\r\n        return {\r\n            column,\r\n            index: columns.indexOf(column)\r\n        };\r\n    };\r\n\r\n    const [, drop] = useDrop({ accept: ItemTypes.COLUMN });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div ref={drop} style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                {columns.map((column) => (\r\n                    <ColumnItem\r\n                        key={column.id}\r\n                        id={`${column.id}`}\r\n                        text={column.text}\r\n                        moveColumn={moveColumn}\r\n                        findColumn={findColumn}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ColumnsList;\r\n","import React from \"react\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport ColumnsList from \"./columnsList\";\r\n\r\nconst ColumnReordering = (props) => {\r\n    const { isManageColumnOpen, manageColumns } = props;\r\n\r\n    if (isManageColumnOpen) {\r\n        return (\r\n            <div className=\"columns--grid\">\r\n                <div className=\"column__grid\">\r\n                    <div className=\"column__chooser\">\r\n                        <div className=\"column__header\">\r\n                            <div className=\"\">\r\n                                <strong>Column Chooser</strong>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"column__body\">\r\n                            <div>\r\n                                <input type=\"text\" placeholder=\"Search column\" className=\"custom__ctrl\"></input>\r\n                            </div>\r\n                            <div className=\"column__selectAll\">\r\n                                <a href=\"\" className=\"column__selectTxt\">\r\n                                    Select All\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"column__wrap\">\r\n                                <div className=\"column__checkbox\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                </div>\r\n                                <div className=\"column__txt\">AWB Number</div>\r\n                            </div>\r\n                            <div className=\"column__wrap\">\r\n                                <div className=\"column__checkbox\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                </div>\r\n                                <div className=\"column__txt\">AWB Number</div>\r\n                            </div>\r\n                            <div className=\"column__wrap\">\r\n                                <div className=\"column__checkbox\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                </div>\r\n                                <div className=\"column__txt\">AWB Number</div>\r\n                            </div>\r\n                            <div className=\"column__wrap\">\r\n                                <div className=\"column__checkbox\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                </div>\r\n                                <div className=\"column__txt\">AWB Number</div>\r\n                            </div>\r\n                            <div className=\"column__wrap\">\r\n                                <div className=\"column__checkbox\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                </div>\r\n                                <div className=\"column__txt\">AWB Number</div>\r\n                            </div>\r\n                            <div className=\"column__wrap\">\r\n                                <div className=\"column__checkbox\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                </div>\r\n                                <div className=\"column__txt\">AWB Number</div>\r\n                            </div>\r\n                            <div className=\"column__wrap\">\r\n                                <div className=\"column__checkbox\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                </div>\r\n                                <div className=\"column__txt\">AWB Number</div>\r\n                            </div>\r\n                            <div className=\"column__wrap\">\r\n                                <div className=\"column__checkbox\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                </div>\r\n                                <div className=\"column__txt\">AWB Number</div>\r\n                            </div>\r\n                            <div className=\"column__wrap\">\r\n                                <div className=\"column__checkbox\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                </div>\r\n                                <div className=\"column__txt\">AWB Number</div>\r\n                            </div>\r\n                            <div className=\"column__wrap\">\r\n                                <div className=\"column__checkbox\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                </div>\r\n                                <div className=\"column__txt\">AWB Number</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column__settings\">\r\n                        <div className=\"column__header\">\r\n                            <div className=\"column__headerTxt\">\r\n                                <strong>Column Setting</strong>\r\n                            </div>\r\n                            <div className=\"column__close\" onClick={manageColumns}>\r\n                                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"column__body\">\r\n                            <DndProvider backend={HTML5Backend}>\r\n                                <ColumnsList />\r\n                            </DndProvider>\r\n                        </div>\r\n                        <div className=\"column__footer\">\r\n                            <div className=\"column__btns\">\r\n                                <button className=\"btns\">Reset</button>\r\n                                <button className=\"btns\" onClick={manageColumns}>\r\n                                    Cancel\r\n                                </button>\r\n                                <button className=\"btns btns__save\">Save</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <div></div>;\r\n    }\r\n};\r\n\r\nexport default ColumnReordering;\r\n","import React, { useCallback, useState, memo, useEffect, createRef, useMemo } from \"react\";\r\nimport {\r\n    useTable,\r\n    useResizeColumns,\r\n    useFlexLayout,\r\n    useRowSelect,\r\n    useSortBy,\r\n    useFilters,\r\n    useGlobalFilter,\r\n    useExpanded\r\n} from \"react-table\";\r\nimport { VariableSizeList as List } from \"react-window\";\r\nimport AutoSizer from \"react-virtualized-auto-sizer\";\r\nimport InfiniteLoader from \"react-window-infinite-loader\";\r\nimport RowSelector from \"./Functions/RowSelector\";\r\nimport DefaultColumnFilter from \"./Functions/DefaultColumnFilter\";\r\nimport GlobalFilter from \"./Functions/GlobalFilter\";\r\nimport ColumnReordering from \"./Overlays/managecolumns\";\r\n\r\nconst listRef = createRef(null);\r\n\r\nconst Grid = memo((props) => {\r\n    const {\r\n        title,\r\n        gridHeight,\r\n        gridWidth,\r\n        columns,\r\n        data,\r\n        globalSearchLogic,\r\n        updateCellData,\r\n        selectBulkData,\r\n        calculateRowHeight,\r\n        renderExpandedContent,\r\n        hasNextPage,\r\n        isNextPageLoading,\r\n        loadNextPage\r\n    } = props;\r\n\r\n    //Display error message if data or columns configuration is missing.\r\n    if (!(data && data.length > 0) || !(columns && columns.length > 0)) {\r\n        return <h2 style={{ marginTop: \"50px\", textAlign: \"center\" }}>Invalid Data or Columns Configuration</h2>;\r\n    }\r\n\r\n    //Variables used for handling infinite loading\r\n    const itemCount = hasNextPage ? data.length + 1 : data.length;\r\n    const loadMoreItems = isNextPageLoading ? () => {} : loadNextPage ? loadNextPage : () => {};\r\n    const isItemLoaded = (index) => !hasNextPage || index < data.length;\r\n\r\n    //Local state value for checking if column filter is open/closed\r\n    const [isFilterOpen, setFilterOpen] = useState(false);\r\n\r\n    //Toggle column filter state value based on UI clicks\r\n    const toggleColumnFilter = () => {\r\n        setFilterOpen(!isFilterOpen);\r\n    };\r\n\r\n    //Local state value for hiding/unhiding column management overlay\r\n    const [isManageColumnOpen, setManageColumnOpen] = useState(false);\r\n\r\n    //Toggle column manage overlay show/hide state value based on UI clicks\r\n    const manageColumns = () => {\r\n        setManageColumnOpen(!isManageColumnOpen);\r\n    };\r\n\r\n    //Column filter added for all columns by default\r\n    const defaultColumn = useMemo(\r\n        () => ({\r\n            Filter: DefaultColumnFilter\r\n        }),\r\n        []\r\n    );\r\n\r\n    //Initialize react-table instance with the values received through properties\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        selectedFlatRows,\r\n        state,\r\n        setGlobalFilter\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n            defaultColumn,\r\n            updateCellData,\r\n            globalFilter: (rows, columns, filterValue) => {\r\n                //Call global search function defined in application, if it is present\r\n                if (globalSearchLogic && typeof globalSearchLogic === \"function\") {\r\n                    return globalSearchLogic(rows, columns, filterValue);\r\n                } else {\r\n                    return rows;\r\n                }\r\n            },\r\n            autoResetFilters: false,\r\n            autoResetGlobalFilter: false,\r\n            autoResetSortBy: false,\r\n            autoResetExpanded: false,\r\n            autoResetSelectedRows: false\r\n        },\r\n        useFilters,\r\n        useGlobalFilter,\r\n        useSortBy,\r\n        useExpanded,\r\n        useRowSelect,\r\n        useFlexLayout,\r\n        useResizeColumns,\r\n        (hooks) => {\r\n            //Add checkbox for all rows in grid, with different properties for header row and body rows\r\n            hooks.allColumns.push((columns) => [\r\n                {\r\n                    id: \"selection\",\r\n                    disableResizing: true,\r\n                    disableFilters: true,\r\n                    disableSortBy: true,\r\n                    minWidth: 35,\r\n                    width: 35,\r\n                    maxWidth: 35,\r\n                    Header: ({ getToggleAllRowsSelectedProps }) => <RowSelector {...getToggleAllRowsSelectedProps()} />,\r\n                    Cell: ({ row }) => <RowSelector {...row.getToggleRowSelectedProps()} />\r\n                },\r\n                ...columns\r\n            ]);\r\n        }\r\n    );\r\n\r\n    //Export selected row data and pass it to the callback method\r\n    const bulkSelector = () => {\r\n        if (selectBulkData) {\r\n            selectBulkData(selectedFlatRows);\r\n        }\r\n    };\r\n\r\n    //This code is to handle the row height calculation while expanding a row or resizing a column\r\n    useEffect(() => {\r\n        if (listRef && listRef.current) {\r\n            listRef.current.resetAfterIndex(0, true);\r\n        }\r\n    });\r\n\r\n    //Render each row and cells in each row, using attributes from react window list.\r\n    const RenderRow = useCallback(\r\n        ({ index, style }) => {\r\n            if (isItemLoaded(index)) {\r\n                const row = rows[index];\r\n                prepareRow(row);\r\n                return (\r\n                    <div {...row.getRowProps({ style })} className=\"table-row tr\">\r\n                        <div className=\"table-row-wrap\">\r\n                            {row.cells.map((cell) => {\r\n                                return (\r\n                                    <div {...cell.getCellProps()} className=\"table-cell td\">\r\n                                        {cell.render(\"Cell\")}\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        {/*Check if row eapand icon is clicked, and if yes, call function to bind content to the expanded region*/}\r\n                        {row.isExpanded ? (\r\n                            <div className=\"expand\">{renderExpandedContent ? renderExpandedContent(row) : null}</div>\r\n                        ) : null}\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n        [prepareRow, rows, renderExpandedContent]\r\n    );\r\n\r\n    //Render table title, global search component, button to show/hide column filter, button to export selected row data & the grid\r\n    //Use properties and methods provided by react-table\r\n    //Autosizer used for calculating grid height (don't consider window width and column resizing value changes)\r\n    //Infinite loader used for lazy loading, with the properties passed here and other values calculated at the top\r\n    //React window list is used for implementing virtualization, specifying the item count in a frame and height of each rows in it.\r\n    return (\r\n        <div className=\"wrapper\" style={{ width: gridWidth ? gridWidth : \"100%\" }}>\r\n            <div className=\"table-filter\">\r\n                <div className=\"results\">\r\n                    <div className=\"name\">\r\n                        <strong>{rows.length}</strong>\r\n                        <span> {title ? title : \"Rows\"}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"filter-utilities\">\r\n                    <ColumnReordering isManageColumnOpen={isManageColumnOpen} manageColumns={manageColumns} />\r\n                    <GlobalFilter globalFilter={state.globalFilter} setGlobalFilter={setGlobalFilter} />\r\n                    <div className=\"filter-icon keyword-search\" onClick={toggleColumnFilter}>\r\n                        <i className=\"fa fa-filter\" aria-hidden=\"true\"></i>\r\n                    </div>\r\n                    <div className=\"filter-icon bulk-select\" onClick={bulkSelector}>\r\n                        <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\r\n                    </div>\r\n                    <div className=\"filter-icon manage-columns\" onClick={manageColumns}>\r\n                        <i className=\"fa fa-columns\" aria-hidden=\"true\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div\r\n                className=\"tableContainer table-outer\"\r\n                style={{ height: gridHeight ? gridHeight : \"50vh\", overflowX: \"auto\", overflowY: \"hidden\" }}\r\n            >\r\n                <AutoSizer disableWidth disableResizing>\r\n                    {({ height }) => (\r\n                        <div {...getTableProps()} className=\"table\">\r\n                            <div className=\"thead table-row table-row--head\">\r\n                                {headerGroups.map((headerGroup) => (\r\n                                    <div {...headerGroup.getHeaderGroupProps()} className=\"tr\">\r\n                                        {headerGroup.headers.map((column) => (\r\n                                            <div {...column.getHeaderProps()} className=\"table-cell column-heading th\">\r\n                                                <div {...column.getSortByToggleProps()}>\r\n                                                    {column.render(\"Header\")}\r\n                                                    <span>\r\n                                                        {column.isSorted ? (\r\n                                                            column.isSortedDesc ? (\r\n                                                                <i className=\"fa fa-sort-desc\" aria-hidden=\"true\"></i>\r\n                                                            ) : (\r\n                                                                <i className=\"fa fa-sort-asc\" aria-hidden=\"true\"></i>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            \"\"\r\n                                                        )}\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div className={`txt-wrap column-filter ${isFilterOpen ? \"open\" : \"\"}`}>\r\n                                                    {!column.disableFilters ? column.render(\"Filter\") : null}\r\n                                                </div>\r\n                                                {column.canResize && <div {...column.getResizerProps()} className=\"resizer\" />}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div {...getTableBodyProps()} className=\"tbody\">\r\n                                <InfiniteLoader isItemLoaded={isItemLoaded} itemCount={itemCount} loadMoreItems={loadMoreItems}>\r\n                                    {({ onItemsRendered, ref }) => (\r\n                                        <List\r\n                                            ref={(list) => {\r\n                                                ref(list);\r\n                                                listRef.current = list;\r\n                                            }}\r\n                                            style={{ overflowX: \"hidden\" }}\r\n                                            height={height - 60}\r\n                                            itemCount={rows.length}\r\n                                            itemSize={(index) => {\r\n                                                if (calculateRowHeight && typeof calculateRowHeight === \"function\") {\r\n                                                    return calculateRowHeight(rows, index, headerGroups);\r\n                                                } else {\r\n                                                    return 70;\r\n                                                }\r\n                                            }}\r\n                                            onItemsRendered={onItemsRendered}\r\n                                            overscanCount={20}\r\n                                        >\r\n                                            {RenderRow}\r\n                                        </List>\r\n                                    )}\r\n                                </InfiniteLoader>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </AutoSizer>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Grid;\r\n"],"names":["RowSelector","memo","forwardRef","ref","indeterminate","rest","useState","checkValue","setCheckValue","defaultRef","useRef","resolvedRef","onChange","useEffect","current","React","DefaultColumnFilter","column","filterValue","setFilter","e","target","value","undefined","GlobalFilter","globalFilter","setGlobalFilter","setValue","useAsyncDebounce","ItemTypes","COLUMN","style","cursor","ColumnItem","id","text","moveColumn","findColumn","originalIndex","index","useDrag","item","type","collect","monitor","isDragging","end","dropResult","getItem","droppedId","didDrop","drag","useDrop","accept","canDrop","hover","draggedId","overIndex","drop","opacity","node","ColumnsArray","ColumnsList","columns","setColumns","atIndex","update","$splice","filter","c","indexOf","display","flexWrap","map","ColumnReordering","props","isManageColumnOpen","manageColumns","DndProvider","HTML5Backend","listRef","createRef","Grid","title","gridHeight","gridWidth","data","globalSearchLogic","updateCellData","selectBulkData","calculateRowHeight","renderExpandedContent","hasNextPage","isNextPageLoading","loadNextPage","length","marginTop","textAlign","itemCount","loadMoreItems","isItemLoaded","isFilterOpen","setFilterOpen","toggleColumnFilter","setManageColumnOpen","defaultColumn","useMemo","Filter","useTable","rows","autoResetFilters","autoResetGlobalFilter","autoResetSortBy","autoResetExpanded","autoResetSelectedRows","useFilters","useGlobalFilter","useSortBy","useExpanded","useRowSelect","useFlexLayout","useResizeColumns","hooks","allColumns","push","disableResizing","disableFilters","disableSortBy","minWidth","width","maxWidth","Header","getToggleAllRowsSelectedProps","Cell","row","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","prepareRow","selectedFlatRows","state","bulkSelector","resetAfterIndex","RenderRow","useCallback","getRowProps","cells","cell","getCellProps","render","isExpanded","height","overflowX","overflowY","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","canResize","getResizerProps","onItemsRendered","List","list"],"mappings":"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"}